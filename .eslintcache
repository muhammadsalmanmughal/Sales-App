[{"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/index.js":"1","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/reportWebVitals.js":"2","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/App.js":"3","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/config/Route/index.js":"4","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Signup/signup.js":"5","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Login/Login.js":"6","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Layout/layout.js":"7","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Signup/style/index.js":"8","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Login/style/index.js":"9","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/Utils/utils.js":"10","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Sidebar/sidebar.js":"11","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Header/header.js":"12","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Vendor/index.js":"13","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/UserProfile/userProfile.js":"14","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Cutomer/updateCustomer.js":"15","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/PurchaseOrder/purchaseOrder.js":"16","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Dashboard/dashboard.js":"17","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Details/vendorDetails.js":"18","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Cutomer/cutomer.js":"19","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Details/customerDetails.js":"20","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/RequestForQuotation/requestForQuotation.js":"21","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/CustomerOrder/customerOrder.js":"22","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/context/UserContext/UserContext.js":"23","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/context/Random/random.js":"24","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/MediaQuery/media.js":"25","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Cutomer/validationSchema.js":"26","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Vendor/schema.js":"27","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Vendor/style/index.js":"28","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/UserProfile/style/index.js":"29","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/config/Firebase/firebase.js":"30","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/config/Route/routes.js":"31","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/FormError/formError.js":"32","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Header/style/index.js":"33","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/context/UserContext/UserReducer.js":"34","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/AllVendors/allVendors.js":"35","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Details/styles/index.js":"36","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/AllCustomers/allCustomers.js":"37","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/RequestForQuotation/style/index.js":"38","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Textbox/style/index.js":"39","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/FormError/style/index.js":"40","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/AllVendors/style/index.js":"41","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/AllCustomers/style/index.js":"42","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/CustomerOrder/style/index.js":"43"},{"size":500,"mtime":1613196501516,"results":"44","hashOfConfig":"45"},{"size":362,"mtime":1613196501516,"results":"46","hashOfConfig":"45"},{"size":753,"mtime":1615163541778,"results":"47","hashOfConfig":"45"},{"size":659,"mtime":1613196501500,"results":"48","hashOfConfig":"45"},{"size":3112,"mtime":1613225394688,"results":"49","hashOfConfig":"45"},{"size":2449,"mtime":1615204740756,"results":"50","hashOfConfig":"45"},{"size":2528,"mtime":1615390061621,"results":"51","hashOfConfig":"45"},{"size":2543,"mtime":1613224103600,"results":"52","hashOfConfig":"45"},{"size":2463,"mtime":1613196501480,"results":"53","hashOfConfig":"45"},{"size":7562,"mtime":1615859747299,"results":"54","hashOfConfig":"45"},{"size":1082,"mtime":1615862950670,"results":"55","hashOfConfig":"45"},{"size":3401,"mtime":1613696011812,"results":"56","hashOfConfig":"45"},{"size":10564,"mtime":1615335500921,"results":"57","hashOfConfig":"45"},{"size":435,"mtime":1613280527796,"results":"58","hashOfConfig":"45"},{"size":196,"mtime":1614492838609,"results":"59","hashOfConfig":"45"},{"size":5681,"mtime":1615861192274,"results":"60","hashOfConfig":"45"},{"size":833,"mtime":1615336899985,"results":"61","hashOfConfig":"45"},{"size":5893,"mtime":1615335396409,"results":"62","hashOfConfig":"45"},{"size":11227,"mtime":1614357864314,"results":"63","hashOfConfig":"45"},{"size":6808,"mtime":1614492807849,"results":"64","hashOfConfig":"45"},{"size":4125,"mtime":1615863001036,"results":"65","hashOfConfig":"45"},{"size":4634,"mtime":1615657328140,"results":"66","hashOfConfig":"45"},{"size":783,"mtime":1615333832661,"results":"67","hashOfConfig":"45"},{"size":511,"mtime":1615336494693,"results":"68","hashOfConfig":"45"},{"size":490,"mtime":1613196501484,"results":"69","hashOfConfig":"45"},{"size":1232,"mtime":1613878059364,"results":"70","hashOfConfig":"45"},{"size":817,"mtime":1613878624005,"results":"71","hashOfConfig":"45"},{"size":407,"mtime":1614357627506,"results":"72","hashOfConfig":"45"},{"size":167,"mtime":1613280633076,"results":"73","hashOfConfig":"45"},{"size":443,"mtime":1613207603188,"results":"74","hashOfConfig":"45"},{"size":896,"mtime":1615862925033,"results":"75","hashOfConfig":"45"},{"size":214,"mtime":1613580190494,"results":"76","hashOfConfig":"45"},{"size":909,"mtime":1613275852144,"results":"77","hashOfConfig":"45"},{"size":113,"mtime":1615333836953,"results":"78","hashOfConfig":"45"},{"size":4883,"mtime":1615337165141,"results":"79","hashOfConfig":"45"},{"size":147,"mtime":1614901810352,"results":"80","hashOfConfig":"45"},{"size":4325,"mtime":1615390061601,"results":"81","hashOfConfig":"45"},{"size":761,"mtime":1615333849513,"results":"82","hashOfConfig":"45"},{"size":212,"mtime":1613282260836,"results":"83","hashOfConfig":"45"},{"size":93,"mtime":1613843005107,"results":"84","hashOfConfig":"45"},{"size":691,"mtime":1613843933983,"results":"85","hashOfConfig":"45"},{"size":691,"mtime":1613878829436,"results":"86","hashOfConfig":"45"},{"size":274,"mtime":1615395886773,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"5ms8m1",{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"90"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"90"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"90"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"90"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"90"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"90"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"90"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"90"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"90"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"90"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"90"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"90"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"90"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"90"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"90"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/index.js",[],["191","192"],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/reportWebVitals.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/App.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/config/Route/index.js",["193","194"],"import React from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n  useHistory\n} from 'react-router-dom'\n\nimport Layout from '../../components/Layout/layout'\nimport Login from '../../components/Login/Login'\nimport Signup from '../../components/Signup/signup'\n\n// import './route.css'\nconst MainRouter = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\" exact component={Login} />\n        <Route path=\"/signup\" component={Signup} />\n        <Route path=\"/home\" component={Layout} />\n        {/* <Route render={() => <Redirect to=\"/home\" />} /> */}\n      </Switch>\n    </Router>\n  );\n}\nexport default MainRouter;\n","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Signup/signup.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Login/Login.js",["195","196"],"import React, { useState } from 'react'\nimport { loginUser } from '../../Utils/utils';\nimport { useHistory } from \"react-router-dom\";\nimport 'antd/dist/antd.css';\nimport { message } from 'antd';\nimport {\n    LoginContainer,\n    LoginDiv,\n    LoginHeading,\n    LoginForm,\n    UserEmailTextbox,\n    PasswordTextbox,\n    PrimaryButton,\n    TextWelcome,\n    Paragraph,\n    BreakLine,\n    Link\n} from './style/index'\n\nexport default function Login() {\n    const history = useHistory();\n    const [email, setUserEmail] = useState();\n    const [password, setPassword] = useState();\n    const [errorMessage, setErrorMessage] = useState(false)\n\n    if (localStorage.getItem('Authorization')) {\n        history.replace('/home')\n        // return\n    }\n\n    const onLogin = () => {\n        if (!email || !password) {\n            message.error('Enter valid credentials')\n        } else {\n            loginUser(email, password)\n                .then((res) => {\n                    // let token = res.auth.\n                    let token = 'dummy_token'\n                    localStorage.setItem('Authorization', token)\n                    history.replace('/home')\n                });\n        }\n    }\n    return (\n        <div>\n            <LoginContainer>\n                <LoginDiv>\n                    <TextWelcome>\n                        Welcome\n                    </TextWelcome>\n                    <LoginHeading>\n                        Login to Sales-App\n                    </LoginHeading>\n                    <LoginForm>\n                        <UserEmailTextbox\n                            type='text'\n                            placeholder='Email'\n                            onChange={e => setUserEmail(e.target.value)}\n                        />\n                        <PasswordTextbox\n                            type='password'\n                            placeholder='Password'\n                            onChange={e => setPassword(e.target.value)}\n                        />\n                        <PrimaryButton onClick={onLogin}>Continue</PrimaryButton>\n                    </LoginForm>\n                    <BreakLine />\n                    <Paragraph>\n                        Don't have an account?\n                   <Link onClick={() => history.push(\"/signup\")}>\n                            SignUp\n                   </Link>\n                    </Paragraph>\n                </LoginDiv>\n            </LoginContainer>\n        </div>\n    )\n}","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Layout/layout.js",["197"],"import React from 'react'\nimport { Switch, Route, useHistory } from \"react-router-dom\";\nimport { UserDataProvider } from '../../context/UserContext/UserContext'\nimport SideBar from '../Sidebar/sidebar'\nimport Header from '../Header/header'\nimport Dashboard from '../Dashboard/dashboard'\nimport Vendor from '../Vendor/index'\nimport UserProfile from '../UserProfile/userProfile'\nimport Customer from '../Cutomer/cutomer'\nimport RequestForQuotation from '../RequestForQuotation/requestForQuotation'\n// import RequestForQuatation from '../RFQ/requestForQuatation'\nimport PurchaseOrder from '../PurchaseOrder/purchaseOrder'\nimport VendorDetails from '../Details/vendorDetails'\nimport CustomerDetails from '../Details/customerDetails'\nimport CustomerOrder from '../CustomerOrder/customerOrder'\nimport UpdateCustomer from '../Cutomer/updateCustomer'\nimport './layout.css'\nimport {VendorCustomerProvider} from '../../context/Random/random'\n\nfunction Layout() {\n    const history = useHistory()\n    const token = localStorage.getItem('Authorization')\n    if (!token) {\n        history.replace('/')\n        return null\n    }\n    return (\n        <VendorCustomerProvider>\n            <Header />\n            <div className='main'>\n                <div className='sidebar'>\n                    <SideBar />\n                </div>\n                <div className='content'>\n                    <Switch>\n                        <Route path=\"/home/dashboard\" component={Dashboard} />\n                        <Route path=\"/home/user-profile\" component={UserProfile} />\n                        <Route path=\"/home/vendor\" component={Vendor} />\n                        <Route path=\"/home/customer\" component={Customer} />\n                        <Route path=\"/home/request-for-quotation\" component={RequestForQuotation}/>\n                        {/* <Route path=\"/home/request-for-qutation\" component={RequestForQuatation}/> */}\n                        <Route path=\"/home/purchase-order\" component={PurchaseOrder}/>\n                        <Route path=\"/home/vendor-details/:slug/:Cname\" component={VendorDetails}/>\n                        <Route path=\"/home/customer-details/:slug/:Cname\" component={CustomerDetails}/>\n                        <Route path=\"/home/customer-order/:slug/:Cname\" component={CustomerOrder}/>\n                        <Route path=\"/home/update-customer/:data\" component={UpdateCustomer}/>\n                    </Switch>\n                </div>\n            </div>\n        </VendorCustomerProvider>\n    )\n}\nexport default Layout","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Signup/style/index.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Login/style/index.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/Utils/utils.js",["198","199","200"],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Sidebar/sidebar.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Header/header.js",["201","202","203","204","205","206","207","208"],"import React, { useState } from 'react'\nimport firebase from '../../config/Firebase/firebase'\nimport { useHistory } from 'react-router-dom'\nimport { getUserData } from '../../Utils/utils'\nimport {\n    Navbar,\n    Logo,\n    User,\n    UserName,\n    UserAvatar,\n    DropdownDiv,\n    UsersFirstName,\n    UsersEmail,\n    Span\n} from './style/index'\nimport { Avatar, Menu, Dropdown, Divider } from 'antd';\nimport { UserOutlined, LogoutOutlined, } from \"@ant-design/icons\";\nimport 'antd/dist/antd.css';\n\n\nconst Header = () => {\n    const [userFirstName, setUserFirstName] = useState('')\n    const [userLastName, setUserLastName] = useState('')\n    const [userEmail, setUserEmail] = useState('')\n    const [userImage, setUserImage] = useState(null)\n    const history = useHistory();\n    const onLogout = () => {\n        firebase.auth().signOut()\n            .then(() => {\n                localStorage.removeItem('Authorization')\n                localStorage.removeItem('userId')\n                history.replace('/')\n            })\n    }\n    \n   const userInfo = getUserData().then((data)=>{\n    //    console.log('user data ===========> $',data[0].name);\n       setUserFirstName(data[0].name)\n       setUserEmail(data[0].email)\n      setUserImage(data[0].url)\n    //    console.log('user data ===========> $',data[0].email);\n    //    console.log('user data ===========> $',data[0].name);\n   });\n   \n//    console.log('User data form header', userInfo)\n    const showProfile = () => {\n        // console.log('userData funtion', getUserData())\n        history.replace('/home/user-profile')\n    }\n   \n    const menu = (\n        <Menu>\n\n            <DropdownDiv>\n                <Avatar\n                    src={userImage}\n                    size={64}\n                    icon={!userImage ? <UserOutlined /> : ''}\n                />\n                <UsersFirstName>Hello {userLastName ? userLastName : 'User'}</UsersFirstName>\n                <UsersEmail>{userEmail}</UsersEmail>\n                <Divider />\n            </DropdownDiv>\n            <Menu.Item>\n                <a onClick={showProfile}>\n                    <UserOutlined />\n                    Profile\n            </a>\n            </Menu.Item>\n            <Menu.Item>\n                <a>\n                    3rd menu item\n            </a>\n            </Menu.Item>\n            <Menu.Item>\n                <a onClick={onLogout}>\n\n                    <LogoutOutlined />\n                Logout\n                </a>\n            </Menu.Item>\n        </Menu>\n    );\n    return (\n        <div>\n            <Navbar>\n                <Logo src='https://1000logos.net/wp-content/uploads/2017/08/CAT-logo.png' />\n                {/* <h5>Logo</h5> */}\n                <User>\n                    <UserName>User First Name</UserName>\n                    <UserAvatar>\n                        <Dropdown overlay={menu}>\n                            <a className=\"ant-dropdown-link\" onClick={(e) => e.preventDefault()}>\n                                <Avatar\n                                    src={userImage}\n                                    size='large'\n                                    icon={!userImage ? <UserOutlined /> : ''}\n                                />\n                            </a>\n                        </Dropdown>\n                    </UserAvatar>\n                </User>\n            </Navbar>\n        </div>\n    )\n}\nexport default Header\n","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Vendor/index.js",["209","210","211","212"],"import React, { useState, useEffect } from 'react'\nimport { useFormik } from 'formik'\nimport { v4 as uuidv4 } from 'uuid';\nimport { validationSchema } from './schema'\nimport { createVendor, updateVendor } from '../../Utils/utils'\nimport { Label } from '../Textbox/style/index'\nimport { VendorMainDiv, FormDiv} from './style/index'\nimport ErrorText from '../FormError/formError'\nimport AllVendors from '../AllVendors/allVendors';\nimport {\n    Divider,\n    Tabs,\n    Row,\n    Col,\n    // Form,\n    Input\n} from 'antd';\nconst initialValues = {\n    companyName: '',\n    ownerFirstName: '',\n    ownerLastName: '',\n    address: '',\n    phone: '',\n    email: '',\n    // country: '',\n    city: '',\n    postalCode: ''\n}\n// const validate = values => {\n//     const errors = {}\n//     if (!values.companyName) {\n//         errors.companyName = 'Field Required'\n//     }\n//     else if (values.companyName.length < 4) {\n//         errors.companyName = 'Company name is too short'\n//     }\n//     if (!values.ownerFirstName || values.ownerFirstName < 5) {\n//         errors.ownerFirstName = 'Invalid Name'\n//     }\n//     if (!values.ownerLastName || values.ownerLastName < 5) {\n//         errors.ownerLastName = 'Invalid Name'\n//     }\n//     if (!values.address) {\n//         errors.address = 'Field Required'\n//     }\n//     else if(values.address. length < 15){\n//         errors.address = 'Enter valid address'\n//     }\n//     if (!values.phone) {\n//         errors.phone = 'Field Required'\n//     }\n//     else if(values.phone.length < 11){\n//         errors.phone = 'Invalid phone number'\n//     }\n//     if (!values.email) {\n//         errors.email = 'Field Required'\n//     }\n//     else if (/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(values.email)) {\n//         errors.email = 'Invalid email format'\n//     }\n//     // if(!values.country){\n//     //     errors.country = 'Required'\n//     // }else if(values.country  )\n//     if (!values.city) {\n//         errors.city = 'Field Required'\n//     }\n//     else if (values.city.length < 7 || values.city.length > 15) {\n//         errors.city = 'Invalid city name'\n//     }\n//     if (!values.postalCode || values.postalCode.length < 5) {\n//         errors.postalCode = 'Enter valid postal code'\n//     }\n//     return errors\n// }\nconst Vendor = () => {\n\n    const [vendorId, setVendorId] = useState('')\n\n    // const venId = () => {\n    //     setVendorId(uuidv4())\n    // }\n    const onSubmit = (values,onSubmitProps) => {\n        createVendor(values, vendorId)\n        onSubmitProps.resetForm()\n    }\n    // useEffect(() => {\n    //     venId()\n    //     updateVendor()\n    // }, [])\n\n    const formik = useFormik({\n        initialValues,\n        onSubmit,\n        validationSchema\n    })\n\n\n    const { TabPane } = Tabs;\n    function callback(key) {\n        console.log(key);\n    }\n    // console.log('Formik visited fiedls', formik.touched);\n    return (\n        <div>\n            <h1>Vendor</h1>\n            <Divider />\n            <Tabs defaultActiveKey=\"1\" onChange={callback}>\n                <TabPane tab=\"Create Vendor\" key=\"1\">\n                    <VendorMainDiv>\n                        <form\n                            onSubmit={formik.handleSubmit}\n                        >\n                            <FormDiv>\n                               \n                                <Row gutter={[10, 10]}>\n                                    <Col xs={24} sm={8}>\n                                        <Label>\n                                            Company Name:\n                                <Input\n                                                type='text'\n                                                name='companyName'\n                                                {...formik.getFieldProps('companyName')}\n                                            />\n                                        </Label>\n                                        {formik.touched.companyName && formik.errors.companyName\n                                            ? <ErrorText text={formik.errors.companyName} />\n                                            : null}\n                                    </Col>\n                                    <Col xs={24} sm={8}>\n                                        <Label>\n                                            Owner First Name:\n                                <Input\n                                                type='text'\n                                                name='ownerFirstName'\n                                                {...formik.getFieldProps('ownerFirstName')}\n                                            />\n                                        </Label>\n                                        {formik.touched.ownerFirstName && formik.errors.ownerFirstName\n                                            ? <ErrorText text={formik.errors.ownerFirstName} />\n                                            : null}\n                                    </Col>\n                                    <Col xs={24} sm={8}>\n                                        <Label>Owner Last Name:\n                                    <Input\n                                                type='text'\n                                                name='ownerLastName'\n                                                {...formik.getFieldProps('ownerLastName')}\n\n                                            />\n                                        </Label>\n                                        {formik.touched.ownerLastName && formik.errors.ownerLastName\n                                            ? <ErrorText text={formik.errors.ownerLastName} />\n                                            : null}\n                                    </Col>\n                                    <Col xs={24} sm={24}>\n                                        <Label>Address:\n                                    <Input\n                                                type='text'\n                                                name='address'\n                                                {...formik.getFieldProps('address')}\n                                            />\n                                        </Label>\n                                        {formik.touched.address && formik.errors.address\n                                            ? <ErrorText text={formik.errors.address} />\n                                            : null}\n                                    </Col>\n                                    <Col xs={24} sm={6}>\n                                        <Label>Phone#:\n                                    <Input\n                                                type='number'\n                                                name='phone'\n                                                {...formik.getFieldProps('phone')}\n                                            />\n                                        </Label>\n                                        {formik.touched.phone && formik.errors.phone\n                                            ? <ErrorText text={formik.errors.phone} />\n                                            : null}\n                                    </Col>\n                                    <Col xs={24} sm={6}>\n                                        <Label>Email:\n                                    <Input\n                                                type='email'\n                                                name='email'\n                                                {...formik.getFieldProps('email')}\n                                            />\n                                        </Label>\n                                        {formik.touched.email && formik.errors.email\n                                            ? <ErrorText text={formik.errors.email} />\n                                            : null}\n                                    </Col>\n                                    {/* <Col xs={24} sm={6}>\n                                        <Label>Coutnry:\n                                    <Input\n                                                type='text'\n                                                name='country'\n                                                value={formik.values.country}\n                                                onChange={formik.handleChange}\n                                            />\n                                        </Label>\n                                    </Col> */}\n                                    <Col xs={24} sm={6}>\n                                        <Label>City:\n                                    <Input\n                                                type='text'\n                                                name='city'\n                                                {...formik.getFieldProps('city')}\n                                            />\n                                        </Label>\n                                        {formik.touched.city && formik.errors.city\n                                            ? <ErrorText text={formik.errors.city} />\n                                            : null}\n                                    </Col>\n                                    <Col xs={24} sm={6}>\n                                        <Label>Postl Code:\n                                    <Input\n                                                type='number'\n                                                name='postalCode'\n                                                {...formik.getFieldProps('postalCode')}\n                                            />\n                                        </Label>\n                                        {formik.touched.postalCode && formik.errors.postalCode\n                                            ? <ErrorText text={formik.errors.postalCode} />\n                                            : null}\n                                    </Col>\n\n                                </Row>\n                                <Col xs={24} sm={16}>\n                                    <button type='submit' disabled={!formik.isValid}>Submit</button>\n                                </Col>\n                            </FormDiv>\n                        </form>\n                    </VendorMainDiv>\n                </TabPane>\n                <TabPane tab=\"All Vendors\" key=\"2\">\n                    <AllVendors />\n\n                </TabPane>\n\n            </Tabs>\n        </div >\n    )\n}\nexport default Vendor","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/UserProfile/userProfile.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Cutomer/updateCustomer.js",["213","214"],"import React,{useState, useEffect} from 'react'\n\nconst UpdateCustomer = () => {\n    return(\n        <div>\n            <h2> update Customer</h2>\n        </div>\n    )\n}\nexport default UpdateCustomer","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/PurchaseOrder/purchaseOrder.js",["215"],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Dashboard/dashboard.js",["216","217"],"import React,{useContext} from 'react'\nimport {VendorCustomerContext} from '../../context/Random/random'\n\nimport './Styled/index.css'\nconst Dashboard = () => {\nconst value = useContext(VendorCustomerContext)\nconst {vendors, setVendors} = useContext(VendorCustomerContext)\nconst {customers} = useContext(VendorCustomerContext)\nconsole.log('Context Dashboard------>', value)\n\nfunction changeVendor(){\n    setVendors('vendor data is changed')\n}\n    return (\n        <div>\n\n            <h1>Dashboard</h1>\n            {/* <button onClick={changeVendor} > logout </button> */}\n            {value.vendors.map((items,key)=>{\n                return <p>{items.companyName}</p>\n            })}\n\n            {customers.map((items,key)=>{\n                return <p>{items.phone}</p>\n            })}\n        </div>\n    )\n}\nexport default Dashboard","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Details/vendorDetails.js",["218","219"],"import React, { useEffect, useState } from 'react'\nimport { useParams, useHistory } from 'react-router-dom'\nimport { getSpecificData, UpdateVendor } from '../../Utils/utils'\nimport { CaretLeftOutlined } from \"@ant-design/icons\";\nimport { Goback, DetailsDiv } from './styles/index'\nimport {\n    Divider,\n    Row,\n    Col,\n    Input,\n    Button,\n    Switch\n} from 'antd';\nconst VendorDetails = () => {\n    const [isDisable, setisDisable] = useState(true)\n    const [detailsdData, setDetailsData] = useState(\n        {\n            ownerFirstName: \"\",\n            ownerLastName: '',\n            companyName: \"\",\n            city: \"\",\n            address: \"\",\n            email: \"\",\n            state: '',\n            iD: \"\",\n            phone: '',\n            postalCode: ''\n        }\n    )\n    const { slug, Cname } = useParams()\n    const history = useHistory();\n\n    useEffect(() => {\n        getSpecificData(slug, Cname).then(data => {\n            setDetailsData(data[0])\n        })\n        DisableFields(false)\n    }, [])\n\n    function DisableFields(checked) {\n        console.log(`switch to ${checked}`);\n        setisDisable(checked)\n    }\n    const changeHandler = (key, value) => {\n        setDetailsData({ ...detailsdData, [value]: key.target.value })\n    }\n    const updateVendor = () => {\n        UpdateVendor(detailsdData, detailsdData.compId)\n    }\n    return (\n        <DetailsDiv>\n            <Goback onClick={e => history.goBack()}>\n                <CaretLeftOutlined /> GoBack\n            </Goback>\n            <h2>Vendor Details page</h2>\n            <label> Update\n                <Switch\n                    size='small'\n                    onChange={DisableFields}\n                />\n            </label>\n\n            <div>\n                <Divider orientation=\"left\">\n                    <h2>Name</h2>\n                </Divider>\n                <Row gutter={[10, 10]}>\n                    <Col xs={24} sm={8}>\n                        <h2>FirstName:</h2>\n                        {\n                            <Input type='text' value={detailsdData.ownerFirstName}\n                                onChange={(e) => changeHandler(e, 'ownerFirstName')}\n                                disabled={!isDisable}\n                            />\n                        }\n                    </Col>\n                    <Col xs={24} sm={8}>\n                        <h2>LastName:</h2>\n                        {\n                            <Input type='text' value={detailsdData.ownerLastName}\n                                onChange={(e) => changeHandler(e, 'ownerLastName')}\n                                disabled={!isDisable}\n                            />\n                        }\n                    </Col>\n                    <Col xs={24} sm={8}>\n                        <h2>Company:</h2>\n                        <Input type='text' value={detailsdData.companyName}\n                            onChange={(e) => changeHandler(e, 'companyName')}\n                            disabled={!isDisable}\n                        />\n                    </Col>\n\n                </Row>\n                <Divider orientation=\"left\">\n                    <h2>Address</h2>\n                </Divider>\n                <Row gutter={[10, 10]}>\n                    <Col xs={24} sm={16}>\n                        <h2>State:</h2>\n                        <Input type='text' value={detailsdData.state}\n                            onChange={(e) => changeHandler(e, 'state')}\n                            disabled={!isDisable}\n                        />\n                    </Col>\n                    <Col xs={24} sm={8}>\n                        <h2>City:</h2>\n                        <Input type='text' value={detailsdData.city}\n                            onChange={(e) => changeHandler(e, 'city')}\n                            disabled={!isDisable}\n                        />\n                    </Col>\n                </Row>\n                <Row gutter={[10, 10]}>\n                    <Col xs={24} sm={16}>\n                        <h2>Address:</h2>\n                        <Input type='text' value={detailsdData.address}\n                            onChange={(e) => changeHandler(e, 'address')}\n                            disabled={!isDisable}\n                        />\n                    </Col>\n                    <Col xs={24} sm={8}>\n                        <h2>PostalCode:</h2>\n                        <Input type='text' value={detailsdData.postalCode}\n                            onChange={(e) => changeHandler(e, 'postalCode')}\n                            disabled={!isDisable}\n                        />\n                    </Col>\n                </Row>\n                <Divider orientation='left'>\n                    <h2>Contact</h2>\n                </Divider>\n                <Row gutter={[10, 10]}>\n                    <Col xs={24} sm={16}>\n                        <h2>Email:</h2>\n                        <Input type='text' value={detailsdData.email}\n                            onChange={(e) => changeHandler(e, 'email')}\n                            disabled={!isDisable}\n                        />\n                    </Col>\n                    <Col xs={24} sm={8}>\n                        <h2>Phone Number:</h2>\n                        <Input type='text' value={detailsdData.phone}\n                            onChange={(e) => changeHandler(e, 'phone')}\n                            disabled={!isDisable}\n                        />\n                    </Col>\n                </Row>\n                <Row gutter={10, 10}>\n                    <Col xs={24} sm={16}>\n                        <Button \n                        onClick={updateVendor}\n                        disabled={!isDisable}\n                        >Update</Button>\n                    </Col>\n                </Row>\n            </div>\n            {/* )\n            })} */}\n        </DetailsDiv>\n    )\n}\nexport default VendorDetails","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Cutomer/cutomer.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Details/customerDetails.js",["220"],"import React, { useEffect, useState } from 'react'\nimport { useParams, useHistory } from 'react-router-dom'\nimport { getSpecificData, UpdateCustomer } from '../../Utils/utils'\nimport { CaretLeftOutlined } from \"@ant-design/icons\";\nimport { Goback } from './styles/index'\nimport {\n    Divider,\n    Row,\n    Col,\n    Input,\n    Button,\n    Switch\n} from 'antd';\nconst VendorDetails = () => {\n    const [detailsdData, setDetailsData] = useState(\n        {\n            billToAddress: \"\",\n            businessName: \"\",\n            city: \"\",\n            compId: \"\",\n            email: \"\",\n            state: '',\n            iD: \"\",\n            phone: '',\n            postalCode: '',\n            responsibleName: \"\",\n            responsiblePhone: \"\",\n            secondaryPhone: \"\"\n        }\n    )\n    const [isDisable, setisDisable] = useState(true)\n    const { slug, Cname } = useParams()\n    const history = useHistory();\n    useEffect(() => {\n        getSpecificData(slug, Cname).then(data => {\n            setDetailsData(data[0])\n        })\n        DisableFields(false)\n    }, [])\n\n    const changeHandler = (key, value) => {\n        setDetailsData({ ...detailsdData, [value]: key.target.value })\n    }\n\n    const updateCustomer = () => {\n        UpdateCustomer(detailsdData, detailsdData.compId)\n    }\n\n    function DisableFields(checked) {\n        console.log(`switch to ${checked}`);\n        setisDisable(checked)\n    }\n    // console.log('customerDetails------->', detailsdData, detailsdData.compId)\n    return (\n        <div>\n            <Goback onClick={e => history.goBack()}>\n                <CaretLeftOutlined /> GoBack\n            </Goback>\n            <h2>Customer Details page</h2>\n            <label> Update\n                <Switch\n                    size='small'\n                    onChange={DisableFields}\n                />\n            </label>\n            <div>\n                <Divider orientation=\"left\">\n                    <h2>Name</h2>\n                </Divider>\n                <Row gutter={[10, 10]}>\n                    <Col xs={24} sm={16}>\n                        <h2>Name:</h2>\n                        {\n                            <Input type='text' value={detailsdData.businessName}\n                                onChange={(e) => changeHandler(e, 'businessName')}\n                                disabled={!isDisable}\n                            />\n                        }\n                    </Col>\n\n                    <Col xs={24} sm={8}>\n                        <h2>Company:</h2>\n                        <Input type='text' value={detailsdData.companyName}\n                            onChange={(e) => changeHandler(e, 'companyName')}\n                            disabled={!isDisable}\n                        />\n                    </Col>\n\n                </Row>\n                <Divider orientation=\"left\">\n                    <h2>Address</h2>\n                </Divider>\n                <Row gutter={[10, 10]}>\n                    <Col xs={24} sm={16}>\n                        <h2>State:</h2>\n                        <Input type='text' value={detailsdData.state}\n                            onChange={(e) => changeHandler(e, 'state')}\n                            disabled={!isDisable}\n                        />\n                    </Col>\n                    <Col xs={24} sm={8}>\n                        <h2>City:</h2>\n                        <Input type='text' value={detailsdData.city}\n                            onChange={(e) => changeHandler(e, 'city')}\n                            disabled={!isDisable}\n                        />\n                    </Col>\n                </Row>\n                <Row gutter={[10, 10]}>\n                    <Col xs={24} sm={16}>\n                        <h2>Address:</h2>\n                        <Input type='text' value={detailsdData.billToAddress}\n                            onChange={(e) => changeHandler(e, 'billToAddress')}\n                            disabled={!isDisable}\n                        />\n                    </Col>\n                    <Col xs={24} sm={8}>\n                        <h2>PostalCode:</h2>\n                        <Input type='text' value={detailsdData.postalCode}\n                            onChange={(e) => changeHandler(e, 'postalCode')}\n                            disabled={!isDisable}\n                        />\n                    </Col>\n                </Row>\n                <Divider orientation='left'>\n                    <h2>Contact</h2>\n                </Divider>\n                <Row gutter={[10, 10]}>\n                    <Col xs={24} sm={16}>\n                        <h2>Email:</h2>\n                        <Input type='text' value={detailsdData.email}\n                            onChange={(e) => changeHandler(e, 'email')}\n                            disabled={!isDisable}\n                        />\n                    </Col>\n                    <Col xs={24} sm={8}>\n                        <h2>Phone Number:</h2>\n                        <Input type='text' value={detailsdData.phone}\n                            onChange={(e) => changeHandler(e, 'phone')}\n                            disabled={!isDisable}\n                        />\n                    </Col>\n                    <Col xs={24} sm={8}>\n                        <h2>Secondary Phone Number:</h2>\n                        <Input type='text' value={detailsdData.secondaryPhone}\n                            onChange={(e) => changeHandler(e, 'secondaryPhone')}\n                            disabled={!isDisable}\n                        />\n                    </Col>\n                </Row>\n                <Divider orientation='left'>\n                    <h2>Responsible Details</h2>\n                </Divider>\n                <Row gutter={[10, 10]}>\n                    <Col xs={24} sm={16}>\n                        <h2>Name:</h2>\n                        <Input type='text' value={detailsdData.responsibleName}\n                            onChange={(e) => changeHandler(e, 'responsibleName')}\n                            disabled={!isDisable}\n                        />\n                    </Col>\n                    <Col xs={24} sm={8}>\n                        <h2>Phone Number:</h2>\n                        <Input type='text' value={detailsdData.responsiblePhone}\n                            onChange={(e) => changeHandler(e, 'responsiblePhone')}\n                            disabled={!isDisable}\n                        />\n                    </Col>\n                </Row>\n                <Row gutter={[10, 10]}>\n                    <Col xs={24} sm={16}>\n                        <Button onClick={updateCustomer}\n                            disabled={!isDisable}\n                        >Update</Button>\n                    </Col>\n                </Row>\n            </div>\n        </div>\n    )\n}\nexport default VendorDetails","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/RequestForQuotation/requestForQuotation.js",["221","222","223"],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/CustomerOrder/customerOrder.js",["224"],"import React, { useEffect, useState } from 'react'\nimport { useParams, useHistory } from 'react-router-dom'\nimport { getSpecificData } from '../../Utils/utils'\nimport { CaretLeftOutlined } from \"@ant-design/icons\";\nimport { Goback } from '../Details/styles/index'\nimport {\n    Divider,\n    Row,\n    Col,\n    Input,\n    Button\n} from 'antd';\nconst CustomerOrder = () => {\n    const [detailsdData, setDetailsData] = useState(\n        {\n            billToAddress: \"\",\n            businessName: \"\",\n            city: \"\",\n            compId: \"\",\n            email: \"\",\n            state: '',\n            iD: \"\",\n            phone: '',\n            postalCode: '',\n            responsibleName: \"\",\n            responsiblePhone: \"\",\n            secondaryPhone: \"\"\n        }\n    )\n    const [orderDetails, setOrderDetails] = useState()\n    const { slug, Cname } = useParams()\n    const history = useHistory();\n    useEffect(() => {\n        getSpecificData(slug, Cname).then(data => {\n            setDetailsData(data[0])\n        })\n    }, [])\n    const utc = new Date().toJSON().slice(0, 10).replace(/-/g, '/');\n\n    const CreateCustomerOrder = () => {\n        console.log(detailsdData && detailsdData, orderDetails)\n        setOrderDetails('')\n    }\n\n    return (\n        <div>\n            <Goback onClick={e => history.goBack()}>\n                <CaretLeftOutlined /> GoBack\n            </Goback>\n            <Row gutter={[10, 10]}>\n                <Col xs={24} sm={12}>\n                    <h2>\n                        Customer Order\n            </h2>\n                </Col>\n                <Col xs={24} sm={12}>\n                    <h3>\n                        Date: {utc}\n                    </h3>\n                </Col>\n            </Row>\n            <Divider />\n            <Row gutter={[10, 10]}>\n                <Col xs={24} sm={8}>\n                    <h4>Name:</h4>\n                    {\n                        <Input type='text' value={detailsdData.businessName}\n                            disabled\n                        />\n                    }\n                </Col>\n                <Col xs={24} sm={8}>\n                    <h4>Company Name:</h4>\n                    {\n                        <Input type='text' value={detailsdData.companyName}\n                            disabled\n                        />\n                    }\n                </Col>\n                <Col xs={24} sm={8}>\n                    <h4>Phone:</h4>\n                    {\n                        <Input type='text' value={detailsdData.phone}\n                            disabled\n                        />\n                    }\n                </Col>\n            </Row>\n            <Row gutter={[10, 10]}>\n                <Col xs={24} sm={24}>\n                    <h4>Address:</h4>\n                    {\n                        <Input type='text' value={detailsdData.billToAddress}\n                            disabled\n                        />\n                    }\n                </Col>\n            </Row>\n            <Row gutter={[10, 10]}>\n                <Col xs={24} sm={8}>\n                    <h4>State</h4>\n                    {\n                        <Input type='text' value={detailsdData.state}\n                            disabled\n                        />\n                    }\n                </Col>\n                <Col xs={24} sm={8}>\n                    <h4>City</h4>\n                    {\n                        <Input type='text' value={detailsdData.city}\n                            disabled\n                        />\n                    }\n                </Col>\n                <Col xs={24} sm={8}>\n                    <h4>Postal Code</h4>\n                    {\n                        <Input type='text' value={detailsdData.postalCode}\n                            disabled\n                        />\n                    }\n                </Col>\n            </Row>\n            <Row gutter={[10, 10]}>\n                <Col xs={24} sm={24}>\n                    <h4>Discription</h4>\n                    {\n                        <Input.TextArea\n                            value={orderDetails}\n                            rows={7}\n                            onChange={e => setOrderDetails(e.target.value)} />\n                    }\n                </Col>\n            </Row>\n            <Row gutter={[10, 10]}>\n                <Col xs={24} sm={16}>\n                    <Button \n                    disabled={!orderDetails}\n                    onClick={CreateCustomerOrder}>\n                        CreateCustomerOrder\n    </Button>\n                </Col>\n            </Row>\n        </div>\n    )\n}\nexport default CustomerOrder","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/context/UserContext/UserContext.js",["225"],"import React, { createContext, useReducer } from 'react'\nimport UserReducer from './UserReducer'\n//Initial State\nconst UserInitialState = {\n    userData: {\n        firstname: 'Muhammad',\n        lastname: 'Salman',\n        email: 'muhammadsalman0403@gmail.com',\n        id: '123456789abcdefgh',\n        url: 'https://static.topyaps.com/wp-content/uploads/2018/11/hera-pheri.jpeg'\n    }\n}\n\n//Create Context\nexport const UserDataContext = createContext(UserInitialState)\n\n//Create Provider\nexport const UserDataProvider = ({ children }) => {\n    const [state, dispatch] = useReducer(UserReducer, UserInitialState)\n    return (\n        <UserDataContext.Provider value={{\n            userData: state.userData\n        }}>\n            {children}\n        </UserDataContext.Provider>\n    )\n}","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/context/Random/random.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/MediaQuery/media.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Cutomer/validationSchema.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Vendor/schema.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Vendor/style/index.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/UserProfile/style/index.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/config/Firebase/firebase.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/config/Route/routes.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/FormError/formError.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Header/style/index.js",["226"],"import styled from 'styled-components'\nimport media from '../../MediaQuery/media'\n\nexport const Navbar = styled.div`\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\nheight: 50px;\nborder-bottom: 1px solid gray;\nbox-shadow: 5px 2px 15px #888888;\n`\nexport const Logo = styled.img`\nwidth:50px;\nheight: 50px;\nmargin-left: 10px;\n// justify-content: flex-start;\n`\nexport const User = styled.div`\ndisplay: flex;\nalign-items: center;\n`\nexport const UserName = styled.div`\nmargin-right: 10px;\n`\nexport const UserAvatar = styled.div`\nmargin-right: 10px;\n`\nexport const DropdownDiv = styled.div`\ntext-align: center;\njustify-content: center;\nalign-items: center;\nmargin-top: 10px;\nwidth:250px;\noverflow: hidden;\npadding:12px;\n`\nexport const UsersFirstName = styled.h4`\nmargin-top:15px;\nword-spacing:1px;\n`\nexport const UsersEmail = styled.p`\n\n`\nexport const Span = styled.span`\nmargin-right: 10px;\n`\n\n\n","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/context/UserContext/UserReducer.js",["227"],"export default (state, action) => {\n    switch (action.type) {\n        default:\n            return state;\n    }\n}","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/AllVendors/allVendors.js",["228","229","230","231"],"import React, { useState, useEffect, useContext } from 'react'\nimport firebase from '../../config/Firebase/firebase';\nimport { useHistory } from 'react-router-dom'\nimport { EmptyDiv } from './style/index'\nimport { Empty, Table, Space, Button } from 'antd';\nimport loader from '../../assets/loader.gif'\nimport { VendorCustomerContext } from '../../context/Random/random'\nimport {TableDiv,LoaderDiv} from './style/index'\n\nconst AllVendors = () => {\n    const [isVendor, setIsVendor] = useState(false)\n    const [isLoading, setIsLoading] = useState(false)\n    const history = useHistory()\n\n    const value = useContext(VendorCustomerContext)\n    const { vendors, setVendors } = useContext(VendorCustomerContext)\n\n    const getAllVendors = () => {\n        setIsLoading(true)\n        firebase\n            .firestore()\n            .collection(\"Vendor\")\n            .onSnapshot(function (querySnapshot) {\n                const vendorList = [];\n                querySnapshot.forEach(function (doc) {\n                    console.log('functions Doc', doc.data)\n                    if (doc.exists) {\n                        const comp = doc.data();\n                        vendorList.push({ ...comp, compId: doc.id });\n                        setIsVendor(true)\n                    } else {\n                        // alert(\"No such document!\");\n                        // <EmptyDiv>\n                        //     <Empty/>\n                        // </EmptyDiv>\n                        setIsVendor(false)\n                    }\n                });\n                setVendors(vendorList)\n                setIsLoading(false)\n                // setIsVendor(true)\n            });\n    }\n\n    const updateVendor = (e) => {\n        console.log('update E', e)\n    }\n\n    const columns = [\n        {\n            title: 'Company Name',\n            dataIndex: 'companyName',\n            key: 'name',\n        },\n        {\n            title: 'FirstName',\n            dataIndex: 'ownerFirstName',\n            key: 'firstname',\n        },\n        {\n            title: 'LastName',\n            dataIndex: 'ownerLastName',\n            key: 'lastname',\n        },\n        {\n            title: 'Phone',\n            dataIndex: 'phone',\n            key: 'phone',\n        },\n        {\n            title: 'Address',\n            dataIndex: 'address',\n            key: 'address',\n        },\n        {\n            title: 'Action',\n            key: 'action',\n            render: (vendors) => (\n              <Space size=\"middle\">\n                <Button\n                onClick={() =>\n                    history.push(`/home/vendor-details/${vendors.compId}/${'Vendor'}`)}\n                >Details</Button>\n              </Space>\n            ),\n          },\n    ];\n    const checkVendor = () => {\n        if (isVendor) {\n            return <TableDiv>\n                {/* <Table>\n                    <TableHead>\n                        <TableHeading>Company</TableHeading>\n                        <TableHeading>FirstName</TableHeading>\n                        <TableHeading>Phone</TableHeading>\n                        <TableHeading>City</TableHeading>\n                    </TableHead>\n                    <TableBody>\n                        {allVendors &&\n                            allVendors.map((vendor, index) => {\n                                return (\n                                    <TableRow>\n                                        <TableData>[{vendor.companyName}]</TableData>\n                                        <TableData>[{vendor.ownerFirstName}]</TableData>\n                                        <TableData>[{vendor.phone}]</TableData>\n                                        <TableData>[{vendor.city}]</TableData>\n                                      \n                                        <TableData>\n                                            <button \n                                            onClick={() =>\n                                                history.push(`/home/vendor-details/${vendor.compId}/${'Vendor'}`)}\n                                            >\n                                                Details\n                                            </button>\n                                        </TableData>\n                                    </TableRow>\n                                );\n                            })}\n                    </TableBody>\n                </Table> */}\n                <Table dataSource={vendors} columns={columns} />;\n            </TableDiv>\n        }\n        else if (!isVendor || isLoading) {\n            return <LoaderDiv><img src={loader} /></LoaderDiv>\n        }\n        return <EmptyDiv> <Empty /> </EmptyDiv>\n\n\n    }\n    useEffect(() => {\n        getAllVendors()\n    }, [])\n\n    console.log('All vendros', vendors);\n    return (\n        <div>\n\n            {checkVendor()}\n\n\n        </div>\n    )\n}\nexport default AllVendors","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Details/styles/index.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/AllCustomers/allCustomers.js",["232"],"import React, { useState, useEffect, useContext } from 'react'\nimport firebase from '../../config/Firebase/firebase';\nimport { useHistory } from 'react-router-dom'\nimport { EmptyDiv } from './style/index'\nimport { Empty, Button } from 'antd';\nimport {VendorCustomerContext} from '../../context/Random/random'\nimport {\n    TableDiv,\n    Table,\n    TableRow,\n    TableData,\n    TableHeading,\n    TableHead,\n    TableBody\n} from './style/index'\n\n\nconst AllCustomers = () => {\n    const [isCustomer, setIsCustomer] = useState(false)\n    const history = useHistory()\n\n    const value = useContext(VendorCustomerContext)\n    const { customers, setCustomers } = useContext(VendorCustomerContext)\n    console.log('all customers', value)\n\n    const getAllCustomers = () => {\n        firebase\n            .firestore()\n            .collection(\"Customer\")\n            .onSnapshot(function (querySnapshot) {\n                const customerList = [];\n                querySnapshot.forEach(function (doc) {\n                    console.log('functions Doc', doc.data)\n                    if (doc.exists) {\n                        const comp = doc.data();\n                        customerList.push({ ...comp, compId: doc.id });\n                        setIsCustomer(true)\n                    } else {\n                        setIsCustomer(false)\n                    }\n                });\n                setCustomers(customerList)\n            });\n    }\n    \n    const checkCustomer = () => {\n        if (isCustomer) {\n            return <TableDiv>\n                <Table>\n                    <TableHead>\n                        <TableHeading>BusinessName</TableHeading>\n                        <TableHeading>BillToAddress</TableHeading>\n                        <TableHeading>Phone</TableHeading>\n                        <TableHeading>Email</TableHeading>\n                        <TableHeading>City</TableHeading>\n                    </TableHead>\n                    <TableBody>\n                        {customers &&\n                            customers.map((customer, index) => {\n                                return (\n                                    <TableRow>\n                                        <TableData>[{customer.businessName}]</TableData>\n                                        <TableData>[{customer.billToAddress}]</TableData>\n                                        <TableData>[{customer.phone}]</TableData>\n                                        <TableData>[{customer.email}]</TableData>\n                                        <TableData>[{customer.city}]</TableData>\n                                        <TableData>\n                                            {/* <button onClick={() => history.push(`/home/update-customer/:${customer.compId}`)}>\n                                                Update customer\n                                            </button> */}\n                                        </TableData>\n                                        <TableData>\n                                            <Button onClick={() =>\n                                                history.push(`/home/customer-details/${customer.compId}/${'Customer'}`)\n                                            } >\n                                                customer Details\n                                            </Button>\n                                        </TableData>\n                                        <TableData>\n                                            <Button onClick={() =>\n                                                history.push(`/home/customer-order/${customer.compId}/${'Customer'}`)\n                                            } >\n                                                customer order\n                                            </Button>\n                                        </TableData>\n                                    </TableRow>\n                                );\n                            })}\n                    </TableBody>\n                </Table>\n            </TableDiv>\n        }\n        return <EmptyDiv> <Empty /> </EmptyDiv>\n    }\n    useEffect(() => {\n        getAllCustomers()\n    }, [])\n\n    // console.log('All Customers', allCustomers);\n    return (\n        <div>\n            {checkCustomer()}\n        </div>\n    )\n}\nexport default AllCustomers","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/RequestForQuotation/style/index.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Textbox/style/index.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/FormError/style/index.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/AllVendors/style/index.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/AllCustomers/style/index.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/CustomerOrder/style/index.js",[],["233","234"],{"ruleId":"235","replacedBy":"236"},{"ruleId":"237","replacedBy":"238"},{"ruleId":"239","severity":1,"message":"240","line":6,"column":3,"nodeType":"241","messageId":"242","endLine":6,"endColumn":11},{"ruleId":"239","severity":1,"message":"243","line":7,"column":3,"nodeType":"241","messageId":"242","endLine":7,"endColumn":13},{"ruleId":"239","severity":1,"message":"244","line":24,"column":12,"nodeType":"241","messageId":"242","endLine":24,"endColumn":24},{"ruleId":"239","severity":1,"message":"245","line":24,"column":26,"nodeType":"241","messageId":"242","endLine":24,"endColumn":41},{"ruleId":"239","severity":1,"message":"246","line":3,"column":10,"nodeType":"241","messageId":"242","endLine":3,"endColumn":26},{"ruleId":"247","severity":1,"message":"248","line":7,"column":13,"nodeType":"249","messageId":"250","endLine":7,"endColumn":15},{"ruleId":"247","severity":1,"message":"248","line":7,"column":31,"nodeType":"249","messageId":"250","endLine":7,"endColumn":33},{"ruleId":"247","severity":1,"message":"248","line":7,"column":45,"nodeType":"249","messageId":"250","endLine":7,"endColumn":47},{"ruleId":"239","severity":1,"message":"251","line":14,"column":5,"nodeType":"241","messageId":"242","endLine":14,"endColumn":9},{"ruleId":"239","severity":1,"message":"252","line":22,"column":12,"nodeType":"241","messageId":"242","endLine":22,"endColumn":25},{"ruleId":"239","severity":1,"message":"253","line":23,"column":26,"nodeType":"241","messageId":"242","endLine":23,"endColumn":41},{"ruleId":"239","severity":1,"message":"254","line":36,"column":10,"nodeType":"241","messageId":"242","endLine":36,"endColumn":18},{"ruleId":"255","severity":1,"message":"256","line":65,"column":17,"nodeType":"257","endLine":65,"endColumn":42},{"ruleId":"255","severity":1,"message":"256","line":71,"column":17,"nodeType":"257","endLine":71,"endColumn":20},{"ruleId":"255","severity":1,"message":"256","line":76,"column":17,"nodeType":"257","endLine":76,"endColumn":39},{"ruleId":"255","severity":1,"message":"256","line":93,"column":29,"nodeType":"257","endLine":93,"endColumn":98},{"ruleId":"239","severity":1,"message":"258","line":1,"column":27,"nodeType":"241","messageId":"242","endLine":1,"endColumn":36},{"ruleId":"239","severity":1,"message":"259","line":3,"column":16,"nodeType":"241","messageId":"242","endLine":3,"endColumn":22},{"ruleId":"239","severity":1,"message":"260","line":5,"column":24,"nodeType":"241","messageId":"242","endLine":5,"endColumn":36},{"ruleId":"239","severity":1,"message":"261","line":77,"column":22,"nodeType":"241","messageId":"242","endLine":77,"endColumn":33},{"ruleId":"239","severity":1,"message":"262","line":1,"column":15,"nodeType":"241","messageId":"242","endLine":1,"endColumn":23},{"ruleId":"239","severity":1,"message":"258","line":1,"column":25,"nodeType":"241","messageId":"242","endLine":1,"endColumn":34},{"ruleId":"239","severity":1,"message":"263","line":29,"column":24,"nodeType":"241","messageId":"242","endLine":29,"endColumn":37},{"ruleId":"239","severity":1,"message":"264","line":7,"column":8,"nodeType":"241","messageId":"242","endLine":7,"endColumn":15},{"ruleId":"239","severity":1,"message":"265","line":11,"column":10,"nodeType":"241","messageId":"242","endLine":11,"endColumn":22},{"ruleId":"266","severity":1,"message":"267","line":38,"column":8,"nodeType":"268","endLine":38,"endColumn":10,"suggestions":"269"},{"ruleId":"270","severity":1,"message":"271","line":149,"column":32,"nodeType":"272","messageId":"273","endLine":149,"endColumn":33},{"ruleId":"266","severity":1,"message":"267","line":39,"column":8,"nodeType":"268","endLine":39,"endColumn":10,"suggestions":"274"},{"ruleId":"239","severity":1,"message":"275","line":1,"column":27,"nodeType":"241","messageId":"242","endLine":1,"endColumn":37},{"ruleId":"239","severity":1,"message":"276","line":3,"column":10,"nodeType":"241","messageId":"242","endLine":3,"endColumn":31},{"ruleId":"239","severity":1,"message":"277","line":20,"column":3,"nodeType":"241","messageId":"242","endLine":20,"endColumn":9},{"ruleId":"266","severity":1,"message":"267","line":37,"column":8,"nodeType":"268","endLine":37,"endColumn":10,"suggestions":"278"},{"ruleId":"239","severity":1,"message":"279","line":19,"column":19,"nodeType":"241","messageId":"242","endLine":19,"endColumn":27},{"ruleId":"239","severity":1,"message":"280","line":2,"column":8,"nodeType":"241","messageId":"242","endLine":2,"endColumn":13},{"ruleId":"281","severity":1,"message":"282","line":1,"column":1,"nodeType":"283","endLine":6,"endColumn":2},{"ruleId":"239","severity":1,"message":"284","line":15,"column":11,"nodeType":"241","messageId":"242","endLine":15,"endColumn":16},{"ruleId":"239","severity":1,"message":"285","line":45,"column":11,"nodeType":"241","messageId":"242","endLine":45,"endColumn":23},{"ruleId":"286","severity":1,"message":"287","line":125,"column":31,"nodeType":"257","endLine":125,"endColumn":51},{"ruleId":"266","severity":1,"message":"288","line":133,"column":8,"nodeType":"268","endLine":133,"endColumn":10,"suggestions":"289"},{"ruleId":"266","severity":1,"message":"290","line":97,"column":8,"nodeType":"268","endLine":97,"endColumn":10,"suggestions":"291"},{"ruleId":"235","replacedBy":"292"},{"ruleId":"237","replacedBy":"293"},"no-native-reassign",["294"],"no-negated-in-lhs",["295"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'useHistory' is defined but never used.","'errorMessage' is assigned a value but never used.","'setErrorMessage' is assigned a value but never used.","'UserDataProvider' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Span' is defined but never used.","'userFirstName' is assigned a value but never used.","'setUserLastName' is assigned a value but never used.","'userInfo' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useEffect' is defined but never used.","'uuidv4' is defined but never used.","'updateVendor' is defined but never used.","'setVendorId' is assigned a value but never used.","'useState' is defined but never used.","'setIsDisabled' is assigned a value but never used.","'vendors' is assigned a value but never used.","'changeVendor' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'Cname' and 'slug'. Either include them or remove the dependency array.","ArrayExpression",["296"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression",["297"],"'useContext' is defined but never used.","'VendorCustomerContext' is defined but never used.","'Select' is defined but never used.",["298"],"'dispatch' is assigned a value but never used.","'media' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'value' is assigned a value but never used.","'updateVendor' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useEffect has a missing dependency: 'getAllVendors'. Either include it or remove the dependency array.",["299"],"React Hook useEffect has a missing dependency: 'getAllCustomers'. Either include it or remove the dependency array.",["300"],["294"],["295"],"no-global-assign","no-unsafe-negation",{"desc":"301","fix":"302"},{"desc":"301","fix":"303"},{"desc":"301","fix":"304"},{"desc":"305","fix":"306"},{"desc":"307","fix":"308"},"Update the dependencies array to be: [Cname, slug]",{"range":"309","text":"310"},{"range":"311","text":"310"},{"range":"312","text":"310"},"Update the dependencies array to be: [getAllVendors]",{"range":"313","text":"314"},"Update the dependencies array to be: [getAllCustomers]",{"range":"315","text":"316"},[1019,1021],"[Cname, slug]",[1075,1077],[1029,1031],[4731,4733],"[getAllVendors]",[4162,4164],"[getAllCustomers]"]