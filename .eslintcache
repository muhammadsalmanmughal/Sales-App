[{"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/index.js":"1","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/reportWebVitals.js":"2","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/App.js":"3","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/context/Random/random.js":"4","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/config/Route/index.js":"5","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Layout/layout.js":"6","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Login/Login.js":"7","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Signup/signup.js":"8","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/Utils/utils.js":"9","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/NavigationLinks/navLinks.js":"10","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/context/UserContext/UserContext.js":"11","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Login/style/index.js":"12","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Signup/style/index.js":"13","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Vendor/index.js":"14","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Header/header.js":"15","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/config/Firebase/firebase.js":"16","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Dashboard/dashboard.js":"17","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Sidebar/sidebar.js":"18","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/UserProfile/userProfile.js":"19","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Details/customerDetails.js":"20","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Cutomer/updateCustomer.js":"21","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Cutomer/cutomer.js":"22","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/RequestForQuotation/requestForQuotation.js":"23","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/CustomerOrder/customerOrder.js":"24","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Inventory/inventory.js":"25","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Details/vendorDetails.js":"26","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/PurchaseOrder/purchaseOrder.js":"27","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/PurchaseOrder/purchaseOrderDetails.js":"28","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Invoice/allInvoices.js":"29","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/MediaQuery/media.js":"30","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Cutomer/validationSchema.js":"31","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/AllCustomers/allCustomers.js":"32","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/Utils/skeleton.js":"33","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Details/styles/index.js":"34","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/RequestForQuotation/style/index.js":"35","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Vendor/style/index.js":"36","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/FormError/formError.js":"37","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Textbox/style/index.js":"38","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/UserProfile/style/index.js":"39","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/config/Route/routes.js":"40","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/AllVendors/allVendors.js":"41","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Vendor/schema.js":"42","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Header/style/index.js":"43","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/FormError/style/index.js":"44","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/AllCustomers/style/index.js":"45","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/AllVendors/style/index.js":"46","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/PurchaseOrder/style/index.js":"47","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/404/pagenotfound.js":"48","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/BOM/bom.js":"49","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Delivery/delivery.js":"50","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Production/production.js":"51","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/PurchaseRequisition/purchaseRequisition.js":"52","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/Utils/styles.js":"53","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Delivery/validationSchema.js":"54"},{"size":500,"mtime":1613196501516,"results":"55","hashOfConfig":"56"},{"size":362,"mtime":1613196501516,"results":"57","hashOfConfig":"56"},{"size":845,"mtime":1617027514898,"results":"58","hashOfConfig":"56"},{"size":683,"mtime":1622135630635,"results":"59","hashOfConfig":"56"},{"size":735,"mtime":1622041163901,"results":"60","hashOfConfig":"56"},{"size":3202,"mtime":1622299906439,"results":"61","hashOfConfig":"56"},{"size":2461,"mtime":1616488290961,"results":"62","hashOfConfig":"56"},{"size":3112,"mtime":1613225394688,"results":"63","hashOfConfig":"56"},{"size":16880,"mtime":1623348186218,"results":"64","hashOfConfig":"56"},{"size":1406,"mtime":1621960690105,"results":"65","hashOfConfig":"56"},{"size":396,"mtime":1616492007748,"results":"66","hashOfConfig":"56"},{"size":2463,"mtime":1613196501480,"results":"67","hashOfConfig":"56"},{"size":2543,"mtime":1613224103600,"results":"68","hashOfConfig":"56"},{"size":8576,"mtime":1622658525625,"results":"69","hashOfConfig":"56"},{"size":4523,"mtime":1616851711440,"results":"70","hashOfConfig":"56"},{"size":443,"mtime":1613207603188,"results":"71","hashOfConfig":"56"},{"size":212,"mtime":1616852644549,"results":"72","hashOfConfig":"56"},{"size":1121,"mtime":1616911082909,"results":"73","hashOfConfig":"56"},{"size":435,"mtime":1613280527796,"results":"74","hashOfConfig":"56"},{"size":6791,"mtime":1622969118296,"results":"75","hashOfConfig":"56"},{"size":196,"mtime":1618404765149,"results":"76","hashOfConfig":"56"},{"size":16575,"mtime":1622968986488,"results":"77","hashOfConfig":"56"},{"size":4130,"mtime":1620832563104,"results":"78","hashOfConfig":"56"},{"size":9346,"mtime":1623345485231,"results":"79","hashOfConfig":"56"},{"size":5489,"mtime":1623347193684,"results":"80","hashOfConfig":"56"},{"size":5929,"mtime":1622905641318,"results":"81","hashOfConfig":"56"},{"size":15818,"mtime":1623347713213,"results":"82","hashOfConfig":"56"},{"size":15837,"mtime":1623347758751,"results":"83","hashOfConfig":"56"},{"size":3926,"mtime":1620742055454,"results":"84","hashOfConfig":"56"},{"size":490,"mtime":1613196501484,"results":"85","hashOfConfig":"56"},{"size":1226,"mtime":1622900627220,"results":"86","hashOfConfig":"56"},{"size":2093,"mtime":1622901741728,"results":"87","hashOfConfig":"56"},{"size":2564,"mtime":1618671488462,"results":"88","hashOfConfig":"56"},{"size":94,"mtime":1621449570736,"results":"89","hashOfConfig":"56"},{"size":761,"mtime":1620826871455,"results":"90","hashOfConfig":"56"},{"size":407,"mtime":1614357627506,"results":"91","hashOfConfig":"56"},{"size":214,"mtime":1613580190494,"results":"92","hashOfConfig":"56"},{"size":212,"mtime":1613282260836,"results":"93","hashOfConfig":"56"},{"size":167,"mtime":1613280633076,"results":"94","hashOfConfig":"56"},{"size":2268,"mtime":1621445540673,"results":"95","hashOfConfig":"56"},{"size":1818,"mtime":1621008535639,"results":"96","hashOfConfig":"56"},{"size":817,"mtime":1613878624005,"results":"97","hashOfConfig":"56"},{"size":909,"mtime":1613275852144,"results":"98","hashOfConfig":"56"},{"size":93,"mtime":1613843005107,"results":"99","hashOfConfig":"56"},{"size":691,"mtime":1613878829436,"results":"100","hashOfConfig":"56"},{"size":691,"mtime":1613843933983,"results":"101","hashOfConfig":"56"},{"size":128,"mtime":1622744645602,"results":"102","hashOfConfig":"56"},{"size":264,"mtime":1621960978962,"results":"103","hashOfConfig":"56"},{"size":9054,"mtime":1622136513455,"results":"104","hashOfConfig":"56"},{"size":15131,"mtime":1623347990828,"results":"105","hashOfConfig":"56"},{"size":17789,"mtime":1623348167646,"results":"106","hashOfConfig":"56"},{"size":11361,"mtime":1622744538651,"results":"107","hashOfConfig":"56"},{"size":1886,"mtime":1622972880094,"results":"108","hashOfConfig":"56"},{"size":854,"mtime":1620926071368,"results":"109","hashOfConfig":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},"1g41l0r",{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"112"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"112"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"112"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"112"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"112"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"112"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"112"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"112"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"112"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"112"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"112"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"112"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"112"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"112"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"227","messages":"228","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/index.js",[],["235","236"],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/reportWebVitals.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/App.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/context/Random/random.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/config/Route/index.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Layout/layout.js",["237"],"import React, { useEffect, useContext } from 'react'\nimport { getAllVendors, getAllInventoryItems, getAllCustomers, GetAllBom } from '../../Utils/utils'\nimport { Switch, Route, useHistory } from 'react-router-dom'\nimport {\n  SideBar, Header,\n  Dashboard,\n  Vendor,\n  UserProfile,\n  Customer,\n  RequestForQuotation,\n  PurchaseOrder,\n  VendorDetails,\n  CustomerDetails,\n  CustomerOrder,\n  UpdateCustomer,\n  Inventory,\n  PurchaseOrderDetails,\n  AllInvoices,\n  PurchaseRequisition,\n  Delivery,\n  BillOfMaterial,\n  Production,\n  PageNotFound\n} from '../NavigationLinks/navLinks'\nimport { VendorCustomerContext } from '../../context/Random/random'\nimport { UserProvider } from '../../context/UserContext/UserContext'\nimport './layout.css'\n\nfunction Layout () {\n  const { setVendors, setAllInventoryItems, setCustomers, setBomItems } = useContext(VendorCustomerContext)\n\n  useEffect(() => {\n    getAllVendors().then(data => {\n      setVendors(data)\n    })\n\n    getAllInventoryItems().then(data => {\n      setAllInventoryItems(data)\n    })\n\n    getAllCustomers().then(data => {\n      setCustomers(data)\n    })\n\n    GetAllBom().then(data => {\n      setBomItems(data)\n    })\n  }, [])\n\n  const history = useHistory()\n  const token = localStorage.getItem('Authorization')\n  if (!token) {\n    history.replace('/')\n    return null\n  }\n  return (\n    <div>\n      <UserProvider>\n        <Header />\n        <div className='main'>\n            <div className='sidebar'>\n                <SideBar />\n              </div>\n            <div className='content'>\n                <Switch>\n                    <Route path='/home/dashboard' component={Dashboard} />\n                    <Route path='/home/user-profile' component={UserProfile} />\n                    <Route path='/home/vendor' component={Vendor} />\n                    <Route path='/home/customer' component={Customer} />\n                    <Route path='/home/request-for-quotation' component={RequestForQuotation} />\n                    <Route path='/home/purchase-order' component={PurchaseOrder} />\n                    <Route path='/home/purchase-order-details/:slug/' component={PurchaseOrderDetails} />\n                    <Route path='/home/vendor-details/:slug/:Cname' component={VendorDetails} />\n                    <Route path='/home/customer-details/:slug/:Cname' component={CustomerDetails} />\n                    <Route path='/home/customer-order/:slug/:Cname' component={CustomerOrder} />\n                    <Route path='/home/update-customer/:data' component={UpdateCustomer} />\n                    <Route path='/home/inventory' component={Inventory} />\n                    <Route path='/home/invoices' component={AllInvoices} />\n                    <Route path='/home/purchase-requisition' component={PurchaseRequisition} />\n                    <Route path='/home/production' component={Production} />\n                    <Route path='/home/bill-of-material' component={BillOfMaterial} />\n                    <Route path='/home/delivery' component={Delivery} />\n                    <Route component={PageNotFound} />\n\n                  </Switch>\n              </div>\n          </div>\n      </UserProvider>\n    </div>\n\n  )\n}\nexport default Layout\n","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Login/Login.js",["238","239","240"],"import React, { useState, useContext } from 'react'\nimport { loginUser } from '../../Utils/utils';\nimport { useHistory } from \"react-router-dom\";\nimport 'antd/dist/antd.css';\nimport { message } from 'antd';\n\nimport {\n    LoginContainer,\n    LoginDiv,\n    LoginHeading,\n    LoginForm,\n    UserEmailTextbox,\n    PasswordTextbox,\n    PrimaryButton,\n    TextWelcome,\n    Paragraph,\n    BreakLine,\n    Link\n} from './style/index'\n\nexport default function Login() {\n    const history = useHistory();\n    const [email, setUserEmail] = useState();\n    const [password, setPassword] = useState();\n    const [errorMessage, setErrorMessage] = useState(false)\n\n    if (localStorage.getItem('Authorization')) {\n        history.replace('/home')\n        // return\n    }\n    const onLogin = () => {\n        if (!email || !password) {\n            message.error('Enter valid credentials')\n        } else {\n            loginUser(email, password)\n                .then((res) => {\n                    // let token = res.auth.\n                    let token = 'dummy_token'\n                    localStorage.setItem('Authorization', token)\n                    history.replace('/home')\n                });\n        }\n    }\n    return (\n        <div>\n            <LoginContainer>\n                <LoginDiv>\n                    <TextWelcome>\n                        Welcome\n                    </TextWelcome>\n                    <LoginHeading>\n                        Login to Sales-App\n                    </LoginHeading>\n                    <LoginForm>\n                        <UserEmailTextbox\n                            type='text'\n                            placeholder='Email'\n                            onChange={e => setUserEmail(e.target.value)}\n                        />\n                        <PasswordTextbox\n                            type='password'\n                            placeholder='Password'\n                            onChange={e => setPassword(e.target.value)}\n                        />\n                        <PrimaryButton onClick={onLogin}>Continue</PrimaryButton>\n                    </LoginForm>\n                    <BreakLine />\n                    <Paragraph>\n                        Don't have an account?\n                   <Link onClick={() => history.push(\"/signup\")}>\n                            SignUp\n                   </Link>\n                    </Paragraph>\n                </LoginDiv>\n            </LoginContainer>\n        </div>\n    )\n}","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Signup/signup.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/Utils/utils.js",["241","242","243"],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/NavigationLinks/navLinks.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/context/UserContext/UserContext.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Login/style/index.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Signup/style/index.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Vendor/index.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Header/header.js",["244","245","246","247","248","249","250","251"],"import React, { useState, useContext, useEffect } from 'react'\nimport firebase from '../../config/Firebase/firebase'\nimport { useHistory } from 'react-router-dom'\nimport { message } from 'antd';\nimport { UserContext } from '../../context/UserContext/UserContext'\nimport {\n    Navbar,\n    Logo,\n    User,\n    UserName,\n    UserAvatar,\n    DropdownDiv,\n    UsersFirstName,\n    UsersEmail,\n    Span\n} from './style/index'\nimport { Avatar, Menu, Dropdown, Divider } from 'antd';\nimport { UserOutlined, LogoutOutlined, } from \"@ant-design/icons\";\nimport 'antd/dist/antd.css';\n\n\nconst Header = () => {\n    const [userFirstName, setUserFirstName] = useState('')\n    const [userLastName, setUserLastName] = useState('')\n    const [userEmail, setUserEmail] = useState('')\n    const [userImage, setUserImage] = useState(null)\n\n    const { user, setUser } = useContext(UserContext)\n\n    const history = useHistory();\n\n    const onLogout = () => {\n        firebase.auth().signOut()\n            .then(() => {\n                localStorage.removeItem('Authorization')\n                localStorage.removeItem('userId')\n                history.replace('/')\n            })\n    }\n\n    // const userInfo = getUserData().then((data) => {\n    //     console.log('user data ===========> $', data[0]);\n    //     // setUser(data[0])\n    //     // setUserFirstName(data[0].name)\n    //     // setUserEmail(data[0].email)\n    //     // setUserImage(data[0].url)\n    // });\n\n\n    const getUserData = () => {\n        const userID = localStorage.getItem('userId')\n        // console.log('USER ID============>',userID);\n        firebase\n            .firestore()\n            .collection(\"Users\")\n            .where(\"userId\", \"==\", userID)\n            .get()\n            .then(function (querySnapshot) {\n                const comlist = [];\n                querySnapshot.forEach(function (doc) {\n                    if (doc.exists) {\n                        const comp = doc.data();\n                        comlist.push({ ...comp, compId: doc.id });\n                    } else {\n                        message.info(\"No such document!\");\n                    }\n                });\n                setUser(comlist)\n            })\n            .catch(function (error) {\n                console.log(\"Error getting documents: \", error);\n            });\n\n    }\n    useEffect(() => {\n        getUserData()\n    }, [])\n    \n    const showProfile = () => {\n        history.replace('/home/user-profile')\n    }\n    useEffect(()=>{\n        user&&user.map((item, key)=>{\n            setUserLastName(item.name)\n            setUserFirstName(item.name)\n            setUserImage(item.url)\n            setUserEmail(item.email)\n        })\n    },[user])\n  \n\n    const menu = (\n        <Menu>\n                    <>          \n            <DropdownDiv>\n                <Avatar\n                    src={userImage}\n                    size={64}\n                    icon={!userImage ? <UserOutlined /> : ''}\n                />\n                <UsersFirstName>Hello {userLastName ? userLastName : 'User'}</UsersFirstName>\n                <UsersEmail>{userEmail}</UsersEmail>\n                <Divider />\n            </DropdownDiv>\n            <Menu.Item>\n                <a onClick={showProfile}>\n                    <UserOutlined />\n                    Profile\n            </a>\n            </Menu.Item>\n            <Menu.Item>\n                <a>\n                    3rd menu item\n            </a>\n            </Menu.Item>\n            <Menu.Item>\n                <a onClick={onLogout}>\n\n                    <LogoutOutlined />\n                Logout\n                </a>\n            </Menu.Item>\n            </>\n        </Menu>\n    );\n    return (\n        <div>\n            <Navbar>\n                <Logo src='https://1000logos.net/wp-content/uploads/2017/08/CAT-logo.png' />\n                <User>\n                    <UserName>User First Name</UserName>\n                    <UserAvatar>\n                        <Dropdown overlay={menu}>\n                            <a className=\"ant-dropdown-link\" onClick={(e) => e.preventDefault()}>\n                                <Avatar\n                                    src={userImage}\n                                    size='large'\n                                    icon={!userImage ? <UserOutlined /> : ''}\n                                />\n                            </a>\n                        </Dropdown>\n                    </UserAvatar>\n                </User>\n            </Navbar>\n        </div>\n    )\n}\nexport default Header\n","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/config/Firebase/firebase.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Dashboard/dashboard.js",["252"],"import React,{useContext} from 'react'\n\nimport './Styled/index.css'\nconst Dashboard = () => {\n\n    return (\n        <div>\n\n            <h1>Dashboard</h1>\n          \n        </div>\n    )\n}\nexport default Dashboard","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Sidebar/sidebar.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/UserProfile/userProfile.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Details/customerDetails.js",["253","254"],"import React, { useEffect, useState } from 'react'\nimport { useParams, useHistory } from 'react-router-dom'\nimport { getSpecificData, UpdateCustomer } from '../../Utils/utils'\nimport { CaretLeftOutlined } from \"@ant-design/icons\";\nimport { Goback } from '../../Utils/styles'\nimport {\n    Divider,\n    Row,\n    Col,\n    Input,\n    Button,\n    Switch\n} from 'antd';\nconst CustomerDetails = () => {\n    const [detailsData, setDetailsData] = useState(\n        {\n            billToAddress: \"\",\n            CustomerName: \"\",\n            companyName:\"\",\n            city: \"\",\n            compId: \"\",\n            email: \"\",\n            state: '',\n            iD: \"\",\n            phone: '',\n            postalCode: '',\n            responsibleName: \"\",\n            responsiblePhone: \"\",\n            secondaryPhone: \"\",\n            state:''\n        }\n    )\n    const [isDisable, setisDisable] = useState(true)\n    const { slug, Cname } = useParams()\n    const history = useHistory();\n    useEffect(() => {\n        getSpecificData(slug, Cname).then(data => {\n            setDetailsData(data[0])\n        })\n        DisableFields(false)\n    }, [])\n\n    function DisableFields(checked) {\n        setisDisable(checked)\n    }\n    const changeHandler = (key, value) => {\n        setDetailsData({ ...detailsData, [value]: key.target.value })\n    }\n    const updateCustomer = () => {\n        UpdateCustomer(detailsData, detailsData.compId)\n    }\n\n    return (\n        <div>\n            <Goback onClick={e => history.goBack()}>\n                <CaretLeftOutlined /> GoBack\n            </Goback>\n            <h2>Customer Details page</h2>\n            <label> Update\n                <Switch\n                    size='small'\n                    onChange={DisableFields}\n                />\n            </label>\n            <div>\n                <Divider orientation=\"left\">\n                    <h2>Name</h2>\n                </Divider>\n                <Row gutter={[10, 10]}>\n                    <Col xs={24} sm={16}>\n                        <h2>Name:</h2>\n                        {\n                            <Input type='text' value={detailsData.CustomerName}\n                                onChange={(e) => changeHandler(e, 'CustomerName')}\n                                disabled={!isDisable}\n                            />\n                        }\n                    </Col>\n\n                    <Col xs={24} sm={8}>\n                        <h2>Company:</h2>\n                        <Input type='text' value={detailsData.CompanyName}\n                            onChange={(e) => changeHandler(e, 'CompanyName')}\n                            disabled={!isDisable}\n                        />\n                    </Col>\n\n                </Row>\n               \n                <Divider orientation=\"left\">\n                    <h2>Address</h2>\n                </Divider>\n                <Row gutter={[10, 10]}>\n                    <Col xs={24} sm={16}>\n                        <h2>State:</h2>\n                        <Input type='text' value={detailsData.State}\n                            onChange={(e) => changeHandler(e, 'State')}\n                            disabled={!isDisable}\n                        />\n                    </Col>\n                    <Col xs={24} sm={8}>\n                        <h2>City:</h2>\n                        <Input type='text' value={detailsData.City}\n                            onChange={(e) => changeHandler(e, 'City')}\n                            disabled={!isDisable}\n                        />\n                    </Col>\n                </Row>\n                <Row gutter={[10, 10]}>\n                    <Col xs={24} sm={16}>\n                        <h2>Address:</h2>\n                        <Input type='text' value={detailsData.BillToAddress}\n                            onChange={(e) => changeHandler(e, 'BillToAddress')}\n                            disabled={!isDisable}\n                        />\n                    </Col>\n                    <Col xs={24} sm={8}>\n                        <h2>PostalCode:</h2>\n                        <Input type='text' value={detailsData.PostalCode}\n                            onChange={(e) => changeHandler(e, 'PostalCode')}\n                            disabled={!isDisable}\n                        />\n                    </Col>\n                </Row>\n                \n                <Divider orientation='left'>\n                    <h2>Contact</h2>\n                </Divider>\n                \n                <Row gutter={[10, 10]}>\n                    <Col xs={24} sm={16}>\n                        <h2>Email:</h2>\n                        <Input type='text' value={detailsData.Email}\n                            onChange={(e) => changeHandler(e, 'Email')}\n                            disabled={!isDisable}\n                        />\n                    </Col>\n                    <Col xs={24} sm={8}>\n                        <h2>Phone Number:</h2>\n                        <Input type='text' value={detailsData.Phone}\n                            onChange={(e) => changeHandler(e, 'Phone')}\n                            disabled={!isDisable}\n                        />\n                    </Col>\n                    <Col xs={24} sm={8}>\n                        <h2>Secondary Phone Number:</h2>\n                        <Input type='text' value={detailsData.SecondaryPhone}\n                            onChange={(e) => changeHandler(e, 'SecondaryPhone')}\n                            disabled={!isDisable}\n                        />\n                    </Col>\n                </Row>\n                \n                <Divider orientation='left'>\n                    <h2>Responsible Details</h2>\n                </Divider>\n                <Row gutter={[10, 10]}>\n                    <Col xs={24} sm={16}>\n                        <h2>Name:</h2>\n                        <Input type='text' value={detailsData.ResponsibleName}\n                            onChange={(e) => changeHandler(e, 'ResponsibleName')}\n                            disabled={!isDisable}\n                        />\n                    </Col>\n                    <Col xs={24} sm={8}>\n                        <h2>Phone Number:</h2>\n                        <Input type='text' value={detailsData.ResponsiblePhone}\n                            onChange={(e) => changeHandler(e, 'ResponsiblePhone')}\n                            disabled={!isDisable}\n                        />\n                    </Col>\n                </Row>\n                <Row gutter={[10, 10]}>\n                    <Col xs={24} sm={16}>\n                        <Button onClick={updateCustomer}\n                            disabled={!isDisable}\n                        >Update</Button>\n                    </Col>\n                </Row>\n            </div>\n        </div>\n    )\n}\nexport default CustomerDetails","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Cutomer/updateCustomer.js",["255","256"],"import React,{useState, useEffect} from 'react'\n\nconst UpdateCustomer = () => {\n    return(\n        <div>\n            <h2> update Customer</h2>\n        </div>\n    )\n}\nexport default UpdateCustomer","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Cutomer/cutomer.js",["257","258"],"import React, { useState, useEffect } from 'react'\nimport { useFormik } from 'formik'\nimport { v4 as uuidv4 } from 'uuid';\nimport { Label } from '../Textbox/style/index'\nimport { SubmitButton } from '../../Utils/styles'\nimport { validationSchema } from './validationSchema'\nimport { createNewCustomer, getCustomerOrder } from '../../Utils/utils'\nimport { Title } from '../../Utils/styles'\nimport ErrorText from '../FormError/formError'\nimport AllCustomers from '../AllCustomers/allCustomers';\nimport { VendorMainDiv, FormDiv } from '../Vendor/style/index'\nimport moment from 'moment'\n\nimport {\n    Divider,\n    Tabs,\n    Row,\n    Col,\n    Input,\n    Space,\n    Table,\n    Button,\n    Skeleton,\n    Modal,\n    Tag\n} from 'antd';\n\nconst { TabPane } = Tabs;\n\n\nconst CreateCustomer = () => {\n\n    const [allOrders, setAllOrders] = useState([])\n    console.log('allOrders: ', allOrders);\n    const [showModal, setShowModal] = useState(false);\n\n    const shortid = require('shortid')\n    const orderID = shortid.generate()\n\n    const orderItems = allOrders?.flatMap(item => item.itemsList)\n\n    const onSubmit = (values, onSubmitProps) => {\n        createNewCustomer(values,orderID)\n        onSubmitProps.resetForm()\n    }\n\n    const initialValues = {\n        customerName: '',\n        companyName:'',\n        billToAddress: '',\n        city: '',\n        state: '',\n        postalCode: '',\n        phone: '',\n        email: '',\n        responsibleName: '',\n        responsiblePhone: '',\n        secondaryPhone: ''\n    }\n    const formik = useFormik({\n        initialValues,\n        onSubmit,\n        validationSchema,\n    })\n    useEffect(() => {\n        getCustomerOrder().then(data => {\n            setAllOrders(data)\n        })\n    }, [])\n\n   \n    const ShowOrderDetails = (id) => {\n        setShowModal(true)\n        console.log('order id: ', id);\n\n    }\n    const allOrderTable = [\n        {\n            title: 'Order ID',\n            dataIndex: 'orderID',\n            key: 'order_id',\n        },\n        {\n            title: 'Customer Name',\n            dataIndex: 'CustomerName',\n            key: 'customer_Name',\n        },\n        {\n            title: 'Company',\n            dataIndex: 'CompanyName',\n            key: 'company_Name',\n        },\n        {\n            title: 'Due Date',\n            dataIndex: 'requiredDate',\n            key: 'due_Date',\n        },\n        {\n            title: 'Action',\n            key: 'action',\n            render: (order) => (\n                <Space size=\"middle\">\n                    <Button\n                        onClick={\n                            e => ShowOrderDetails(order.iD)\n                        }\n                    >Details</Button>\n                </Space>\n            ),\n        },\n    ]\n    const orderItemList = [\n        {\n            title: 'Item Name',\n            dataIndex: 'item',\n            key: 'name',\n        },\n        {\n            title: 'Quantity',\n            dataIndex: 'quantity',\n            key: 'quantity',\n        }\n    ]\n    return (\n        <div>\n            <Title>Customer</Title>\n            <Divider />\n\n            <Tabs defaultActiveKey=\"1\" >\n\n                <TabPane tab=\"Create Customer\" key=\"1\">\n                    <VendorMainDiv>\n                        <form\n                            onSubmit={formik.handleSubmit}\n                        >\n                            <FormDiv>\n\n                                <Row gutter={[10, 10]}>\n                                    <Col xs={24} sm={12}>\n                                        <Label>\n                                            Customer Name:\n                                         <Input\n                                                type='text'\n                                                name='customerName'\n                                                // value={formik.values.companyName}\n                                                // onBlur={formik.handleBlur}\n                                                // onChange={formik.handleChange}\n                                                {...formik.getFieldProps('customerName')}\n                                            />\n                                        </Label>\n                                        {formik.touched.customerName && formik.errors.customerName\n                                            ? <ErrorText text={formik.errors.customerName} />\n                                            : null}\n                                    </Col>\n                                    <Col xs={24} sm={12}>\n                                        <Label>\n                                            Company Name:\n                                         <Input\n                                                type='text'\n                                                name='companyName'\n                                                // value={formik.values.companyName}\n                                                // onBlur={formik.handleBlur}\n                                                // onChange={formik.handleChange}\n                                                {...formik.getFieldProps('companyName')}\n                                            />\n                                        </Label>\n                                        {formik.touched.companyName && formik.errors.companyName\n                                            ? <ErrorText text={formik.errors.companyName} />\n                                            : null}\n                                    </Col>\n                                    <Col xs={24} sm={24}>\n                                        <Label>\n                                            Bill To Address:\n                                 <Input\n                                                type='text'\n                                                name='billToAddress'\n                                                {...formik.getFieldProps('billToAddress')}\n                                            />\n                                        </Label>\n                                        {formik.touched.billToAddress && formik.errors.billToAddress\n                                            ? <ErrorText text={formik.errors.billToAddress} />\n                                            : null}\n                                    </Col>\n                                    <Col xs={24} sm={8}>\n                                        <Label>City:\n                                    <Input\n                                                type='text'\n                                                name='city'\n                                                {...formik.getFieldProps('city')}\n\n                                            />\n                                        </Label>\n                                        {formik.touched.city && formik.errors.city\n                                            ? <ErrorText text={formik.errors.city} />\n                                            : null}\n                                    </Col>\n                                    <Col xs={24} sm={8}>\n                                        <Label>State:\n                                    <Input\n                                                type='text'\n                                                name='state'\n                                                {...formik.getFieldProps('state')}\n                                            />\n                                        </Label>\n                                        {formik.touched.state && formik.errors.state\n                                            ? <ErrorText text={formik.errors.state} />\n                                            : null}\n                                    </Col>\n                                    <Col xs={24} sm={8}>\n                                        <Label>Postl Code:\n                                    <Input\n                                                type='number'\n                                                name='postalCode'\n                                                {...formik.getFieldProps('postalCode')}\n                                            />\n                                        </Label>\n                                        {formik.touched.postalCode && formik.errors.postalCode\n                                            ? <ErrorText text={formik.errors.postalCode} />\n                                            : null}\n                                    </Col>\n                                    <Col xs={24} sm={8}>\n                                        <Label>Phone#:\n                                    <Input\n                                                type='number'\n                                                name='phone'\n                                                {...formik.getFieldProps('phone')}\n                                            />\n                                        </Label>\n                                        {formik.touched.phone && formik.errors.phone\n                                            ? <ErrorText text={formik.errors.phone} />\n                                            : null}\n                                    </Col>\n                                    <Col xs={24} sm={16}>\n                                        <Label>Email:\n                                    <Input\n                                                type='email'\n                                                name='email'\n                                                {...formik.getFieldProps('email')}\n                                            />\n                                        </Label>\n                                        {formik.touched.email && formik.errors.email\n                                            ? <ErrorText text={formik.errors.email} />\n                                            : null}\n                                    </Col>\n                                    <Col xs={24} sm={6}>\n                                        <Label>Responsible Name:\n                                    <Input\n                                                type='text'\n                                                name='responsibleName'\n                                                value={formik.values.responsibleName}\n                                                onChange={formik.handleChange}\n                                            />\n                                        </Label>\n                                        {formik.touched.responsibleName && formik.errors.responsibleName\n                                            ? <ErrorText text={formik.errors.responsibleName} />\n                                            : null}\n                                    </Col>\n                                    <Col xs={24} sm={6}>\n                                        <Label>Responsible Phone:\n                                    <Input\n                                                type='text'\n                                                name='responsiblePhone'\n                                                value={formik.values.responsiblePhone}\n                                                onChange={formik.handleChange}\n                                            />\n                                        </Label>\n                                        {formik.touched.responsiblePhone && formik.errors.responsiblePhone\n                                            ? <ErrorText text={formik.errors.responsiblePhone} />\n                                            : null}\n                                    </Col>\n                                    <Col xs={24} sm={6}>\n                                        <Label>Secondary Phone:\n                                    <Input\n                                                type='text'\n                                                name='secondaryPhone'\n                                                value={formik.values.secondaryPhone}\n                                                onChange={formik.handleChange}\n                                            />\n                                        </Label>\n                                        {formik.touched.secondaryPhone && formik.errors.secondaryPhone\n                                            ? <ErrorText text={formik.errors.secondaryPhone} />\n                                            : null}\n                                    </Col>\n\n                                    <Col xs={24} sm={6}>\n                                        <Label>City:\n                                    <Input\n                                                type='text'\n                                                name='city'\n                                                {...formik.getFieldProps('city')}\n                                            />\n                                        </Label>\n                                        {formik.touched.city && formik.errors.city\n                                            ? <ErrorText text={formik.errors.city} />\n                                            : null}\n                                    </Col>\n\n\n                                </Row>\n                                <Col xs={24} sm={16}>\n                                    <SubmitButton type='submit' disabled={!formik.isValid}>Create Customer</SubmitButton>\n                                </Col>\n                            </FormDiv>\n                        </form>\n                    </VendorMainDiv>\n\n                </TabPane>\n\n                <TabPane tab=\"All Customer\" key=\"2\">\n                    <AllCustomers />\n                </TabPane>\n                <TabPane tab=\"All Customer Orders\" key=\"3\">\n                    <div>\n                        {allOrders ?\n                            <Table dataSource={allOrders} columns={allOrderTable} /> : <Skeleton />\n                        }\n                    </div>\n                    <Modal\n                        title=\"Customer Order Details\"\n                        centered\n                        visible={showModal}\n                        width={1000}\n                        footer={\n                            <div\n                                style={{\n                                    textAlign: 'right'\n                                }}\n                            >\n                                <Button onClick={() => setShowModal(false)} style={{ marginRight: 8 }}>\n                                    Close\n                              </Button>\n                            </div>\n                        }\n                    >\n                        {allOrders ?\n                            allOrders.map((item, key) => {\n                                return (\n                                    <div>\n                                        <p>{`Customer Name: ${item.CustomerName}`}</p>\n                                        <p>{`Company Name: ${item.companyName}`}</p>\n                                        <p>{`State: ${item.state}`}</p>\n                                        <p>{`City: ${item.city}`}</p>\n                                        <p>{`Address: ${item.billToAddress}`}</p>\n                                        <p>{`Postal Code: ${item.postalCode}`}</p>\n                                        <p>{`Phone: ${item.phone}`}</p>\n                                        <p>Order Placed:\n                                            <Tag color='green'>\n                                                {item.currentDate}\n                                            </Tag>\n                                        </p>\n                                        <p>Due Date:\n                                            <Tag color='red'>\n                                                {item.requiredDate}\n                                            </Tag>\n                                        </p>\n                                    </div>\n                                )\n                            }) : <Skeleton active />\n                        }\n                        <div>\n                            {orderItems ?\n                                <Table dataSource={orderItems} columns={orderItemList} /> : <Skeleton />\n                            }\n                        </div>\n                    </Modal>\n                </TabPane>\n\n            </Tabs>\n        </div>\n    )\n}\nexport default CreateCustomer","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/RequestForQuotation/requestForQuotation.js",["259","260","261"],"import React, { useState, useContext } from 'react'\nimport { Label } from '../Textbox/style/index'\nimport { VendorCustomerContext } from '../../context/Random/random'\nimport { CreateRFQ } from '../../Utils/utils'\nimport {\n  ListItem,\n  ItemDiv,\n  QuantityAndButtonDiv,\n  Quantity,\n  DeleteButton\n} from '../../Utils/styles'\nimport {\n  Divider,\n  message,\n  Row,\n  Col,\n  Input,\n  Button,\n  Radio,\n  Select\n} from 'antd'\n\nconst RequestForQuatation = () => {\n  const [items, setItems] = useState()\n  const [quantity, setQuantity] = useState()\n  const [itemsList, setItemsList] = useState([])\n  const [radioValue, setRadioValue] = useState('A-class');\n  // const { vendors } = useContext(VendorCustomerContext)\n\n  const shortid = require('shortid')\n  const RFQiD = shortid.generate()\n\n  const selectQuality = e => {\n    setRadioValue(e.target.value);\n  };\nconsole.log('items',items);\nconsole.log('quantity',quantity);\n\nconst utc = new Date().toJSON().slice(0, 10).replace(/-/g, '/');\n\n  const CreateList = () => {\n    if (items == null) {\n      message.error('Items can not left Empty')\n    }\n    else if (isNaN(quantity) || quantity.length > 2) {\n      message.error('Quantity amount not support')\n    }\n\n    else {\n      setItemsList([...itemsList, { items, quantity, radioValue }])\n      setItems('')\n      setQuantity('')\n    }\n  }\n  const deleteItem = (id) => {\n    const newList = [...itemsList]\n    newList.splice(id, 1)\n    setItemsList(newList);\n  }\n\n  const generateRFQ = () => {\n      CreateRFQ(itemsList, RFQiD, utc)\n      setItemsList([])\n  }\n  console.log('itemList', itemsList);\n  return (\n    <div>\n      <h1>Request For Quotation</h1>\n      <Divider />\n      <Row gutter={[10, 10]}>\n        <Col xs={24} sm={8}>\n          <h4>\n            RFQ-ID:{RFQiD}\n          </h4>\n        </Col>\n        <Col xs={24} sm={12}>\n          <h4>Date: {utc}</h4>\n        </Col>\n      </Row>\n      <Row gutter={[10, 10]}>\n        \n        <Col xs={24} sm={12}>\n          {/* <h4>RFQ-ID: <Id /></h4> */}\n        </Col>\n      </Row>\n      <Row gutter={[10, 10]}>\n        <Col xs={24} sm={24}>\n          <Label> Compnay Address:\n            <Input\n              type='text'\n              disabled\n            />\n          </Label>\n        </Col>\n      </Row>\n      <Divider>Add Items with quantity</Divider>\n      <Row gutter={[10, 10]}>\n        <Col xs={24} sm={8}>\n          <Input\n            type='text'\n            placeholder='Enter item name'\n            value={items}\n            onChange={e => setItems(e.target.value)}\n            maxLength={20}\n          />\n        </Col>\n        <Col xs={24} sm={4}>\n          <Input\n            type='number'\n            placeholder='Enter number of Quantity'\n            value={quantity}\n            onChange={e => setQuantity(e.target.value)}\n            maxLength={2}\n          />\n        </Col>\n        <Col xs={24} sm={6}>\n          <Radio.Group onChange={selectQuality} value={radioValue}>\n            <Radio value={'A-class'}>A</Radio>\n            <Radio value={'B-class'}>B</Radio>\n            <Radio value={'C-class'}>C</Radio>\n          </Radio.Group>\n        </Col>\n        <Col xs={24} sm={4}>\n\n          <Button onClick={CreateList}>Add</Button>\n        </Col>\n\n      </Row>\n\n      <ul>\n        {\n          itemsList.map((item, key) => {\n            return (\n              <>\n                <ListItem key={key} xs={24} sm={12}>\n                  <ItemDiv>\n                    {item.items}\n                  </ItemDiv>\n                  <QuantityAndButtonDiv>\n                    <Quantity>\n                      {item.quantity}/\n                      {item.radioValue}\n                    </Quantity>\n                    <DeleteButton>\n                      <Button danger onClick={() => deleteItem(key)}>Delete</Button>\n                    </DeleteButton>\n                  </QuantityAndButtonDiv>\n\n                </ListItem>\n              </>\n            )\n          })\n        }\n      </ul>\n      <Row>\n        <Col xs={24} sm={12}>\n          <Button onClick={generateRFQ}>Create RFQ</Button>\n        </Col>\n      </Row>\n    </div>\n  )\n}\nexport default RequestForQuatation","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/CustomerOrder/customerOrder.js",["262","263","264"],"import React, { useEffect, useState } from 'react'\nimport { useParams, useHistory } from 'react-router-dom'\nimport { getSpecificData, CapitalizeWords,CreateRecord } from '../../Utils/utils'\nimport { CaretLeftOutlined } from \"@ant-design/icons\";\nimport { Goback } from '../../Utils/styles'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\nimport { FaRegClipboard } from \"react-icons/fa\";\nimport moment from 'moment'\n\nimport {\n    Divider,\n    message,\n    Row,\n    Col,\n    Input,\n    Button,\n    Tooltip,\n    DatePicker\n} from 'antd'\nimport {\n    ListItem,\n    ItemDiv,\n    QuantityAndButtonDiv,\n    Quantity,\n    DeleteButton,\n    H3\n} from '../../Utils/styles'\n\nconst CustomerOrder = () => {\n    const [detailsdData, setDetailsData] = useState(\n        {\n            BillToAddress: \"\",\n            CustomerName: \"\",\n            City: \"\",\n            compId: \"\",\n            email: \"\",\n            State: '',\n            iD: \"\",\n            Phone: '',\n            PostalCode: '',\n            responsibleName: \"\",\n            responsiblePhone: \"\",\n            secondaryPhone: \"\"\n        }\n    )\n    const [orderDetails, setOrderDetails] = useState()\n    const [itemsList, setItemsList] = useState([])\n    const [disable, setDisabled] = useState(false)\n    let current_datetime = new Date()\n    let currentDate = current_datetime.getDate() + \"-\" + (current_datetime.getMonth() + 1) + \"-\" + current_datetime.getFullYear()\n    const shortid = require('shortid')\n    const orderID = shortid.generate()\n    const [items, setItems] = useState()\n    const [itemQuantity, setItemQuantity] = useState()\n    const [requiredDate, setRequiredDate] = useState();\n\n    const { slug, Cname } = useParams()\n    const history = useHistory();\n\n    useEffect(() => {\n        getSpecificData(slug, Cname).then(data => {\n            setDetailsData(data[0])\n        })\n    }, [])\n\n    useEffect(() => {\n        DisableButton()\n    }, [itemsList])\n    const customerOrder = () => {\n        if(!requiredDate) return message.error('Error! Select required date')\n        const { CustomerName, CompanyName, Phone, BillToAddress, State, City, PostalCode } = detailsdData\n\n        const customerObeject = {\n            CustomerName, CompanyName, Phone, BillToAddress, State, City, PostalCode,\n            itemsList, orderID, currentDate,requiredDate\n        }\n        CreateRecord(customerObeject,'Customer_Order','Customers order has been placed')\n        setItemsList([])\n        setOrderDetails('')\n    }\n\n    const DisableButton = () => {\n        if (itemsList.length === 0) return setDisabled(true)\n        setDisabled(false)\n    }\n\n    function disabledDate(current) {\n        return current && current < moment().endOf('day')\n    }\n\n    const selectRequiredDate = (date, dateString) => {\n        setRequiredDate(dateString)\n    }\n\n    const CreateList = () => {\n        const quantity = Number(itemQuantity)\n        if (items == null) return message.error('Error! Items can not be left Empty')\n        if (isNaN(quantity) || quantity.length > 2 || quantity <= 0) return message.error('Error! Quantity amount not support')\n        if (!items || !quantity) return message.error('Error! All fields should be filed')\n        else {\n            const item = CapitalizeWords(items)\n            setItemsList([...itemsList, { item, quantity }])\n            setItems('')\n            setItemQuantity('')\n        }\n    }\n\n    const deleteItem = (id) => {\n        const newList = [...itemsList]\n        newList.splice(id, 1)\n        setItemsList(newList);\n    }\n    return (\n        <div>\n            <Goback onClick={e => history.goBack()}>\n                <CaretLeftOutlined /> GoBack\n            </Goback>\n            <Row gutter={[10, 10]}>\n                <Col xs={24} sm={12}>\n                    <h2>\n                        Customer Order\n            </h2>\n                </Col>\n\n            </Row>\n            <Divider />\n            <Row gutter={[10, 10]}>\n                <Col>\n                    <div style={{ marginBottom: 16 }}>\n                        <Input addonAfter={\n                            <Tooltip placement=\"topRight\" title='Click to Copy'>\n                                <CopyToClipboard text={orderID}>\n                                    <FaRegClipboard\n                                        onClick={() => alert(orderID)}\n                                        style={{ cursor: 'pointer' }}\n                                    />\n                                </CopyToClipboard>\n                            </Tooltip>\n                        }\n                            value={orderID}\n                            disabled\n                        />\n                    </div>\n                </Col>\n                <Col xs={24} sm={12}>\n                    <h3>\n                        Date: {currentDate}\n                    </h3>\n                </Col>\n                <Col >\n                    <DatePicker\n                        placeholder='Requried Date'\n                        format=\"DD-MM-YYYY\"\n                        disabledDate={disabledDate}\n                        style={{ width: 200 }}\n                        onChange={selectRequiredDate}\n                    />\n                </Col>\n            </Row>\n            <Row gutter={[10, 10]}>\n                <Col xs={24} sm={8}>\n                    <h4>Name:</h4>\n                    {\n                        <h3>{detailsdData.CustomerName}</h3>\n                    }\n                </Col>\n                <Col xs={24} sm={8}>\n                    <h4>Company Name:</h4>\n                    {\n                        <h3>{detailsdData.CompanyName}</h3>\n                    }\n                </Col>\n                <Col xs={24} sm={8}>\n                    <h4>Phone:</h4>\n                    {\n                        <h3>{detailsdData.Phone}</h3>\n                    }\n                </Col>\n            </Row>\n            <Row gutter={[10, 10]}>\n                <Col xs={24} sm={24}>\n                    <h4>Address:</h4>\n                    {\n                        <h3>{detailsdData.BillToAddress}</h3>\n                    }\n                </Col>\n            </Row>\n            <Row gutter={[10, 10]}>\n                <Col xs={24} sm={8}>\n                    <h4>State</h4>\n                    {\n                        <h3>{detailsdData.State}</h3>\n                    }\n                </Col>\n                <Col xs={24} sm={8}>\n                    <h4>City</h4>\n                    {\n                        <h3>{detailsdData.City}</h3>\n                    }\n                </Col>\n                <Col xs={24} sm={8}>\n                    <h4>Postal Code</h4>\n                    {\n                        <h3>{detailsdData.PostalCode}</h3>\n                    }\n                </Col>\n            </Row>\n            <Divider>\n                <H3 style={{ textAlign: 'center' }}>ITEMS</H3>\n            </Divider>\n            <Row gutter={[10, 10]}>\n                <Col xs={24} sm={10}>\n                    <Input type='text' value={items} placeholder='Item Name' onChange={e => setItems(e.target.value)} maxLength={25} />\n                </Col>\n                <Col xs={24} sm={10}>\n                    <Input type='text' value={itemQuantity} placeholder='Item Quantity' onChange={e => setItemQuantity(e.target.value)} maxLength={2} />\n                </Col>\n                <Col xs={24} sm={1}>\n\n                    <Button\n                        onClick={CreateList}\n                    >Add</Button>\n                </Col>\n            </Row>\n            {/* <Row gutter={[10, 10]}>\n                <Col xs={24} sm={24}>\n                    <h4>Discription</h4>\n                    {\n                        <Input.TextArea\n                            value={orderDetails}\n                            rows={7}\n                            onChange={e => setOrderDetails(e.target.value)} />\n                    }\n                </Col>\n            </Row> */}\n\n            <ul>\n                {\n                    itemsList.map((item, key) => {\n                        return (\n                            <>\n                                <ListItem key={key} xs={24} sm={12}>\n                                    <ItemDiv>\n                                        {item.item}\n                                    </ItemDiv>\n                                    <QuantityAndButtonDiv>\n                                        <Quantity>\n                                            {item.quantity}/\n                                        </Quantity>\n                                        <DeleteButton>\n                                            <Button danger onClick={() => deleteItem(key)}>Delete</Button>\n                                        </DeleteButton>\n                                    </QuantityAndButtonDiv>\n\n                                </ListItem>\n                            </>\n                        )\n                    })\n                }\n            </ul>\n            <Row gutter={[10, 10]}>\n                <Col xs={24} sm={16}>\n                    <Button\n                        disabled={disable}\n                        onClick={customerOrder}>\n                        Create CustomerOrder\n                    </Button>\n                </Col>\n            </Row>\n        </div>\n    )\n}\nexport default CustomerOrder","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Inventory/inventory.js",["265","266","267","268","269"],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Details/vendorDetails.js",["270","271"],"import React, { useEffect, useState } from 'react'\nimport { useParams, useHistory } from 'react-router-dom'\nimport { getSpecificData, UpdateVendor } from '../../Utils/utils'\nimport { CaretLeftOutlined } from \"@ant-design/icons\";\nimport { DetailsDiv } from './styles/index'\nimport { Goback } from '../../Utils/styles'\nimport {\n    Divider,\n    Row,\n    Col,\n    Input,\n    Button,\n    Switch\n} from 'antd';\nconst VendorDetails = () => {\n    const [isDisable, setisDisable] = useState(true)\n    const [detailsdData, setDetailsData] = useState(\n        {\n            ownerFirstName: \"\",\n            ownerLastName: '',\n            companyName: \"\",\n            city: \"\",\n            address: \"\",\n            email: \"\",\n            state: '',\n            iD: \"\",\n            phone: '',\n            postalCode: ''\n        }\n    )\n    const { slug, Cname } = useParams()\n    const history = useHistory();\n\n    useEffect(() => {\n        getSpecificData(slug, Cname).then(data => {\n            setDetailsData(data[0])\n        })\n        DisableFields(false)\n    }, [])\n\n    function DisableFields(checked) {\n        console.log(`switch to ${checked}`);\n        setisDisable(checked)\n    }\n    const changeHandler = (key, value) => {\n        setDetailsData({ ...detailsdData, [value]: key.target.value })\n    }\n    const updateVendor = () => {\n        UpdateVendor(detailsdData, detailsdData.compId)\n    }\n    return (\n        <DetailsDiv>\n            <Goback onClick={e => history.goBack()}>\n                <CaretLeftOutlined /> GoBack\n            </Goback>\n            <h2>Vendor Details page</h2>\n            <label> Update\n                <Switch\n                    size='small'\n                    onChange={DisableFields}\n                />\n            </label>\n\n            <div>\n                <Divider orientation=\"left\">\n                    <h2>Name</h2>\n                </Divider>\n                <Row gutter={[10, 10]}>\n                    <Col xs={24} sm={8}>\n                        <h2>FirstName:</h2>\n                        {\n                            <Input type='text' value={detailsdData.ownerFirstName}\n                                onChange={(e) => changeHandler(e, 'ownerFirstName')}\n                                disabled={!isDisable}\n                            />\n                        }\n                    </Col>\n                    <Col xs={24} sm={8}>\n                        <h2>LastName:</h2>\n                        {\n                            <Input type='text' value={detailsdData.ownerLastName}\n                                onChange={(e) => changeHandler(e, 'ownerLastName')}\n                                disabled={!isDisable}\n                            />\n                        }\n                    </Col>\n                    <Col xs={24} sm={8}>\n                        <h2>Company:</h2>\n                        <Input type='text' value={detailsdData.companyName}\n                            onChange={(e) => changeHandler(e, 'companyName')}\n                            disabled={!isDisable}\n                        />\n                    </Col>\n\n                </Row>\n                <Divider orientation=\"left\">\n                    <h2>Address</h2>\n                </Divider>\n                <Row gutter={[10, 10]}>\n                    <Col xs={24} sm={16}>\n                        <h2>State:</h2>\n                        <Input type='text' value={detailsdData.state}\n                            onChange={(e) => changeHandler(e, 'state')}\n                            disabled={!isDisable}\n                        />\n                    </Col>\n                    <Col xs={24} sm={8}>\n                        <h2>City:</h2>\n                        <Input type='text' value={detailsdData.city}\n                            onChange={(e) => changeHandler(e, 'city')}\n                            disabled={!isDisable}\n                        />\n                    </Col>\n                </Row>\n                <Row gutter={[10, 10]}>\n                    <Col xs={24} sm={16}>\n                        <h2>Address:</h2>\n                        <Input type='text' value={detailsdData.address}\n                            onChange={(e) => changeHandler(e, 'address')}\n                            disabled={!isDisable}\n                        />\n                    </Col>\n                    <Col xs={24} sm={8}>\n                        <h2>PostalCode:</h2>\n                        <Input type='text' value={detailsdData.postalCode}\n                            onChange={(e) => changeHandler(e, 'postalCode')}\n                            disabled={!isDisable}\n                        />\n                    </Col>\n                </Row>\n                <Divider orientation='left'>\n                    <h2>Contact</h2>\n                </Divider>\n                <Row gutter={[10, 10]}>\n                    <Col xs={24} sm={16}>\n                        <h2>Email:</h2>\n                        <Input type='text' value={detailsdData.email}\n                            onChange={(e) => changeHandler(e, 'email')}\n                            disabled={!isDisable}\n                        />\n                    </Col>\n                    <Col xs={24} sm={8}>\n                        <h2>Phone Number:</h2>\n                        <Input type='text' value={detailsdData.phone}\n                            onChange={(e) => changeHandler(e, 'phone')}\n                            disabled={!isDisable}\n                        />\n                    </Col>\n                </Row>\n                <Row gutter={10, 10}>\n                    <Col xs={24} sm={16}>\n                        <Button \n                        onClick={updateVendor}\n                        disabled={!isDisable}\n                        >Update</Button>\n                    </Col>\n                </Row>\n            </div>\n            {/* )\n            })} */}\n        </DetailsDiv>\n    )\n}\nexport default VendorDetails","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/PurchaseOrder/purchaseOrder.js",["272","273","274"],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/PurchaseOrder/purchaseOrderDetails.js",["275","276","277"],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Invoice/allInvoices.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/MediaQuery/media.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Cutomer/validationSchema.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/AllCustomers/allCustomers.js",["278"],"import React, { useState,useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Button, Table, Skeleton, Space } from 'antd';\nimport { VendorCustomerContext } from '../../context/Random/random'\nimport { getAllCustomers } from '../../Utils/utils'\n\nconst AllCustomers = () => {\n    const history = useHistory()\n    const [customers, setCustomers] = useState()\n\n    useEffect(()=>{\n        getAllCustomers().then(data => {\n            setCustomers(data)\n          })\n    },[])\n    // const { customers } = useContext(VendorCustomerContext)\n\n\n    const customerTable = [\n        {\n            title: 'Customer Name',\n            dataIndex: 'CustomerName',\n            key: 'customer_Name',\n        },\n        {\n            title: 'Address',\n            dataIndex: 'BillToAddress',\n            key: 'billtoaddress',\n        },\n        {\n            title: 'Phone',\n            dataIndex: 'Phone',\n            key: 'phone',\n        },\n        {\n            title: 'Email',\n            dataIndex: 'Email',\n            key: 'email',\n        },\n        {\n            title: 'City',\n            dataIndex: 'City',\n            key: 'city',\n        },\n        {\n            title: 'Action',\n            key: 'action',\n            render: (customer) => (\n                <Space size=\"middle\">\n                    <Button onClick={() =>\n                        history.push(`/home/customer-details/${customer.compId}/${'Customer'}`)\n                    } >\n                        customer Details\n                    </Button>\n                    <Button onClick={() =>\n                        history.push(`/home/customer-order/${customer.compId}/${'Customer'}`)\n                    } >\n                        customer order\n                    </Button>\n                </Space>\n            ),\n        },\n    ]\n    return (\n        <div>\n            <div>\n                {customers ?\n                    <Table dataSource={customers && customers} columns={customerTable} /> : <Skeleton />\n                }\n            </div>\n\n        </div>\n    )\n}\nexport default AllCustomers","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/Utils/skeleton.js",["279"],"import React from \"react\";\nimport {\nSkeleton, Row, Col, Space\n} from 'antd'\n\n const TableSkeleton = () => {\n    return(\n        <div>\n              <Row gutter={[10, 10]}>\n                <Col>\n                    <Skeleton.Input style={{ width: 200 }} active={true} size='default' line />\n                </Col>\n                <Col>\n                    <Skeleton.Input style={{ width: 200 }} active={true} size='default' />\n                </Col>\n                <Col>\n                    <Skeleton.Input style={{ width: 200 }} active={true} size='default' line />\n                </Col>\n                <Col>\n                    <Skeleton.Input style={{ width: 200 }} active={true} size='default' />\n                </Col>\n                <Col>\n                    <Skeleton.Input style={{ width: 200 }} active={true} size='default' />\n                </Col>\n            </Row>\n\n            <Row gutter={[10, 10]}>\n                <Col>\n                    <Skeleton.Input style={{ width: 200 }} active={true} size='default' line />\n                </Col>\n                <Col>\n                    <Skeleton.Input style={{ width: 200 }} active={true} size='default' />\n                </Col>\n                <Col>\n                    <Skeleton.Input style={{ width: 200 }} active={true} size='default' line />\n                </Col>\n                <Col>\n                    <Skeleton.Input style={{ width: 200 }} active={true} size='default' />\n                </Col>\n                <Col>\n                    <Skeleton.Input style={{ width: 200 }} active={true} size='default' />\n                </Col>\n            </Row>\n           \n            <Row gutter={[10, 10]}>\n                <Col>\n                    <Skeleton.Input style={{ width: 200 }} active={true} size='default' line />\n                </Col>\n                <Col>\n                    <Skeleton.Input style={{ width: 200 }} active={true} size='default' />\n                </Col>\n                <Col>\n                    <Skeleton.Input style={{ width: 200 }} active={true} size='default' line />\n                </Col>\n                <Col>\n                    <Skeleton.Input style={{ width: 200 }} active={true} size='default' />\n                </Col>\n                <Col>\n                    <Skeleton.Input style={{ width: 200 }} active={true} size='default' />\n                </Col>\n            </Row>\n\n        </div>\n    )\n}\nconst ParaSkeleton = () => {\n    return(\n        <div>\n            <Skeleton active />\n        </div>\n    )\n}\nexport {\n    TableSkeleton,\n    ParaSkeleton\n}","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Details/styles/index.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/RequestForQuotation/style/index.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Vendor/style/index.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/FormError/formError.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Textbox/style/index.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/UserProfile/style/index.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/config/Route/routes.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/AllVendors/allVendors.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Vendor/schema.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Header/style/index.js",["280"],"import styled from 'styled-components'\nimport media from '../../MediaQuery/media'\n\nexport const Navbar = styled.div`\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\nheight: 50px;\nborder-bottom: 1px solid gray;\nbox-shadow: 5px 2px 15px #888888;\n`\nexport const Logo = styled.img`\nwidth:50px;\nheight: 50px;\nmargin-left: 10px;\n// justify-content: flex-start;\n`\nexport const User = styled.div`\ndisplay: flex;\nalign-items: center;\n`\nexport const UserName = styled.div`\nmargin-right: 10px;\n`\nexport const UserAvatar = styled.div`\nmargin-right: 10px;\n`\nexport const DropdownDiv = styled.div`\ntext-align: center;\njustify-content: center;\nalign-items: center;\nmargin-top: 10px;\nwidth:250px;\noverflow: hidden;\npadding:12px;\n`\nexport const UsersFirstName = styled.h4`\nmargin-top:15px;\nword-spacing:1px;\n`\nexport const UsersEmail = styled.p`\n\n`\nexport const Span = styled.span`\nmargin-right: 10px;\n`\n\n\n","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/FormError/style/index.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/AllCustomers/style/index.js",[],["281","282"],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/AllVendors/style/index.js",[],["283","284"],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/PurchaseOrder/style/index.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/404/pagenotfound.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/BOM/bom.js",["285","286","287"],"import React, { useState, useEffect, useContext } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\nimport { VendorCustomerContext } from '../../context/Random/random'\nimport { Divider, Row, Col, Tooltip, Input, Select, Button, message, Tabs, Space, Table, Modal } from 'antd'\nimport { CreateBom, GetAllBom, getDataById } from '../../Utils/utils'\nimport {\n  Title, H3, Goback,\n  ListItem,\n  ItemDiv,\n  QuantityAndButtonDiv,\n  Quantity,\n  DeleteButton\n} from '../../Utils/styles'\nimport { FaRegClipboard } from 'react-icons/fa'\nimport { CaretLeftOutlined } from '@ant-design/icons'\n\nconst BillOfMaterial = () => {\n  const { allInventoryItems, bomItems } = useContext(VendorCustomerContext)\n  const [productName, setProductName] = useState()\n  const [BomType, setBomType] = useState()\n  const [items, setItem] = useState('')\n  const [requestedquantity, setQuantity] = useState()\n  const [unitOfMeassure, setUnitOfMeassure] = useState('')\n  const [itemsList, setItemsList] = useState([])\n  const [availableBom, setAvailableBom] = useState()\n  const [showModal, setShowModal] = useState(false)\n  const [bomData, setBomData] = useState()\n\n  const { TabPane } = Tabs\n  const history = useHistory()\n  const shortid = require('shortid')\n  const Bom_Id = shortid.generate()\n  const current_datetime = new Date()\n  const utc = current_datetime.getDate() + '-' + (current_datetime.getMonth() + 1) + '-' + current_datetime.getFullYear()\n\n  useEffect(() => {\n    GetAllBom().then(data => {\n      // setAvailableBom(data)\n      // setBomItems(data)\n    })\n  }, [])\n\n  console.log('bomItems',bomItems);\n  const details = bomData?.flatMap(d => d.List)\n\n  function selectItem (value) {\n    setItem(value)\n  }\n  function selectBomType (value) {\n    setBomType(value)\n  }\n  function selectUOM (value) {\n    setUnitOfMeassure(value)\n  }\n  const CreateList = () => {\n    if (!requestedquantity) return message.error('Error! Quantity is not in format')\n    if (items == null || items == '') return message.error('Error! Items can not left Empty')\n    if (!unitOfMeassure) return message.error('Error! Select Unit Of Meassure')\n    if (isNaN(requestedquantity) || requestedquantity.length > 2 || requestedquantity <= 0) return message.error('Quantity amount not support')\n    else {\n      const quantity = Number(requestedquantity)\n      setItemsList([...itemsList, { items, quantity, unitOfMeassure }])\n      setItem('')\n      setQuantity('')\n      setUnitOfMeassure('')\n    }\n  }\n\n  const deleteItem = (id) => {\n    const newList = [...itemsList]\n    newList.splice(id, 1)\n    setItemsList(newList)\n  }\n\n  const Bom = () => {\n    if (!productName) return message.error('Error! Product Name is not in Format')\n    if (itemsList.length < 1) return message.error('Error! Enter BOM Items')\n    if (!BomType) return message.error('Error! Select BOM Type')\n    CreateBom(Bom_Id, productName, BomType, utc, itemsList)\n    setItem('')\n    setQuantity('')\n    setUnitOfMeassure('')\n    setItemsList([])\n  }\n\n  const getDetails = (id) => {\n    getDataById('BillOfMaterial', id).then(data => {\n      setBomData(data)\n    })\n    setShowModal(true)\n  }\n\n  const columns = [\n    {\n      title: 'ID',\n      dataIndex: 'BomId',\n      key: 'id'\n    },\n    {\n      title: 'Name',\n      dataIndex: 'BomName',\n      key: 'name'\n    },\n    {\n      title: 'Type',\n      dataIndex: 'BomType',\n      key: 'type'\n    },\n    {\n      title: 'Action',\n      key: 'action',\n      render: (bom) => (\n        <Space size='middle'>\n          <Button onClick={e => getDetails(bom.iD)}>Details\n          </Button>\n        </Space>\n      )\n    }\n  ]\n\n  const bomDetails = [\n    {\n      title: 'Items',\n      dataIndex: 'items',\n      key: 'itemName'\n    },\n    {\n      title: 'Quantity',\n      dataIndex: 'quantity',\n      key: 'quantity'\n    },\n    {\n      title: 'UOM',\n      dataIndex: 'unitOfMeassure',\n      key: 'uom'\n    }\n  ]\n\n  return (\n    <div>\n      <Goback onClick={e => history.goBack()}>\n        <CaretLeftOutlined /> GoBack\n      </Goback>\n      <Title>\n        Bill of Material :\n      </Title>\n      {/* <Divider /> */}\n      <Tabs defaultActiveKey='1'>\n        <TabPane tab='Create BOM' key='1'>\n          <Row gutter={[10, 10]}>\n            <Col>\n              <div style={{ marginBottom: 16 }}>\n                <Input\n                  style={{ width: 180 }} addonAfter={\n                    <Tooltip placement='topRight' title='Click to Copy'>\n                      <CopyToClipboard text={Bom_Id}>\n                        <FaRegClipboard\n                          onClick={() => alert(Bom_Id)}\n                          style={{ cursor: 'pointer' }}\n                        />\n                      </CopyToClipboard>\n                    </Tooltip>\n                                }\n                  value={Bom_Id}\n                  disabled\n                />\n              </div>\n            </Col>\n            <Col xs={24} sm={4}>\n              <h4>Date: {utc}</h4>\n            </Col>\n          </Row>\n          <Row gutter={[10, 10]}>\n            <Col xs={24} sm={5}>\n              <Input type='text' placeholder='Product Name' onChange={e => setProductName(e.target.value)} />\n            </Col>\n            <Col>\n              <Select placeholder='Bom Type' style={{ width: 200 }} onChange={selectBomType}>\n                <Select.Option value='finishgood'>Finish Good (FG)</Select.Option>\n              </Select>\n            </Col>\n          </Row>\n          <Row gutter={[10, 10]}>\n            <Col>\n              <Select\n                style={{ width: 160 }}\n                placeholder='Select items'\n                value={items}\n                onChange={selectItem}\n              >\n                {\n                                    allInventoryItems && allInventoryItems.map(items => <Select.Option\n                                      value={items.itemsName}\n                                                                                        >\n                                      {items.itemsName}\n                                                                                        </Select.Option>\n\n                                    )\n                                }\n              </Select>\n            </Col>\n            <Col xs={24} sm={6}>\n              <Input type='text' value={requestedquantity} placeholder='Quantity' onChange={e => setQuantity(e.target.value)} />\n            </Col>\n            <Col xs={24} sm={6}>\n              <Select value={unitOfMeassure} placeholder='Select Type' onChange={selectUOM} style={{ width: '100px' }}>\n                <Select.Option value='Packet'>Packet</Select.Option>\n                <Select.Option value='Dozen'>Dozen</Select.Option>\n                <Select.Option value='Sheet'>Sheet</Select.Option>\n              </Select>\n\n            </Col>\n          </Row>\n          <Button onClick={CreateList}>\n            Add\n          </Button>\n          <Divider>\n            <H3>Recipe - Items</H3>\n          </Divider>\n          <ul>\n            {\n                            itemsList.map((item, key) => {\n                              return (\n                                <>\n                                  <ListItem key={key} xs={24} sm={12}>\n                                    <ItemDiv>\n                                      {item.items}\n                                    </ItemDiv>\n                                    <QuantityAndButtonDiv>\n                                      <Quantity>\n                                        {item.quantity}/\n                                        {item.unitOfMeassure}\n                                      </Quantity>\n                                      <DeleteButton>\n                                        <Button danger onClick={() => deleteItem(key)}>Delete</Button>\n                                      </DeleteButton>\n                                    </QuantityAndButtonDiv>\n\n                                  </ListItem>\n                                </>\n                              )\n                            })\n                        }\n          </ul>\n          <Button onClick={Bom}>\n            Create BOM\n          </Button>\n        </TabPane>\n        <TabPane tab='Available BOM' key='2'>\n          <div>\n            <Table dataSource={bomItems} columns={columns} />;\n          </div>\n          <Modal\n            title='Purchase Order Details'\n            centered\n            visible={showModal}\n            width={1000}\n            footer={\n              <div\n                style={{\n                  textAlign: 'right'\n                }}\n              >\n                <Button onClick={() => setShowModal(false)} style={{ marginRight: 8 }}>\n                  Close\n                </Button>\n              </div>\n                        }\n          >\n            <div>\n              <Table dataSource={details} columns={bomDetails} />\n            </div>\n          </Modal>\n        </TabPane>\n      </Tabs>\n    </div>\n  )\n}\nexport default BillOfMaterial\n","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Delivery/delivery.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Production/production.js",["288","289","290"],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/PurchaseRequisition/purchaseRequisition.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/Utils/styles.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Delivery/validationSchema.js",[],{"ruleId":"291","replacedBy":"292"},{"ruleId":"293","replacedBy":"294"},{"ruleId":"295","severity":1,"message":"296","line":48,"column":6,"nodeType":"297","endLine":48,"endColumn":8,"suggestions":"298"},{"ruleId":"299","severity":1,"message":"300","line":1,"column":27,"nodeType":"301","messageId":"302","endLine":1,"endColumn":37},{"ruleId":"299","severity":1,"message":"303","line":25,"column":12,"nodeType":"301","messageId":"302","endLine":25,"endColumn":24},{"ruleId":"299","severity":1,"message":"304","line":25,"column":26,"nodeType":"301","messageId":"302","endLine":25,"endColumn":41},{"ruleId":"305","severity":1,"message":"306","line":6,"column":13,"nodeType":"307","messageId":"308","endLine":6,"endColumn":15},{"ruleId":"305","severity":1,"message":"306","line":6,"column":31,"nodeType":"307","messageId":"308","endLine":6,"endColumn":33},{"ruleId":"305","severity":1,"message":"306","line":6,"column":45,"nodeType":"307","messageId":"308","endLine":6,"endColumn":47},{"ruleId":"299","severity":1,"message":"309","line":15,"column":5,"nodeType":"301","messageId":"302","endLine":15,"endColumn":9},{"ruleId":"299","severity":1,"message":"310","line":23,"column":12,"nodeType":"301","messageId":"302","endLine":23,"endColumn":25},{"ruleId":"295","severity":1,"message":"311","line":77,"column":8,"nodeType":"297","endLine":77,"endColumn":10,"suggestions":"312"},{"ruleId":"313","severity":1,"message":"314","line":83,"column":35,"nodeType":"315","messageId":"316","endLine":83,"endColumn":37},{"ruleId":"317","severity":1,"message":"318","line":106,"column":17,"nodeType":"319","endLine":106,"endColumn":42},{"ruleId":"317","severity":1,"message":"318","line":112,"column":17,"nodeType":"319","endLine":112,"endColumn":20},{"ruleId":"317","severity":1,"message":"318","line":117,"column":17,"nodeType":"319","endLine":117,"endColumn":39},{"ruleId":"317","severity":1,"message":"318","line":134,"column":29,"nodeType":"319","endLine":134,"endColumn":98},{"ruleId":"299","severity":1,"message":"300","line":1,"column":15,"nodeType":"301","messageId":"302","endLine":1,"endColumn":25},{"ruleId":"320","severity":1,"message":"321","line":30,"column":13,"nodeType":"322","messageId":"308","endLine":30,"endColumn":18},{"ruleId":"295","severity":1,"message":"323","line":41,"column":8,"nodeType":"297","endLine":41,"endColumn":10,"suggestions":"324"},{"ruleId":"299","severity":1,"message":"325","line":1,"column":15,"nodeType":"301","messageId":"302","endLine":1,"endColumn":23},{"ruleId":"299","severity":1,"message":"326","line":1,"column":25,"nodeType":"301","messageId":"302","endLine":1,"endColumn":34},{"ruleId":"299","severity":1,"message":"327","line":3,"column":16,"nodeType":"301","messageId":"302","endLine":3,"endColumn":22},{"ruleId":"299","severity":1,"message":"328","line":12,"column":8,"nodeType":"301","messageId":"302","endLine":12,"endColumn":14},{"ruleId":"299","severity":1,"message":"300","line":1,"column":27,"nodeType":"301","messageId":"302","endLine":1,"endColumn":37},{"ruleId":"299","severity":1,"message":"329","line":3,"column":10,"nodeType":"301","messageId":"302","endLine":3,"endColumn":31},{"ruleId":"299","severity":1,"message":"330","line":20,"column":3,"nodeType":"301","messageId":"302","endLine":20,"endColumn":9},{"ruleId":"299","severity":1,"message":"331","line":46,"column":12,"nodeType":"301","messageId":"302","endLine":46,"endColumn":24},{"ruleId":"295","severity":1,"message":"323","line":64,"column":8,"nodeType":"297","endLine":64,"endColumn":10,"suggestions":"332"},{"ruleId":"295","severity":1,"message":"333","line":68,"column":8,"nodeType":"297","endLine":68,"endColumn":19,"suggestions":"334"},{"ruleId":"299","severity":1,"message":"335","line":12,"column":77,"nodeType":"301","messageId":"302","endLine":12,"endColumn":82},{"ruleId":"299","severity":1,"message":"336","line":12,"column":84,"nodeType":"301","messageId":"302","endLine":12,"endColumn":88},{"ruleId":"299","severity":1,"message":"337","line":23,"column":12,"nodeType":"301","messageId":"302","endLine":23,"endColumn":24},{"ruleId":"313","severity":1,"message":"314","line":73,"column":52,"nodeType":"315","messageId":"316","endLine":73,"endColumn":54},{"ruleId":"295","severity":1,"message":"338","line":79,"column":8,"nodeType":"297","endLine":79,"endColumn":10,"suggestions":"339"},{"ruleId":"295","severity":1,"message":"323","line":39,"column":8,"nodeType":"297","endLine":39,"endColumn":10,"suggestions":"340"},{"ruleId":"341","severity":1,"message":"342","line":150,"column":32,"nodeType":"343","messageId":"344","endLine":150,"endColumn":33},{"ruleId":"299","severity":1,"message":"345","line":6,"column":59,"nodeType":"301","messageId":"302","endLine":6,"endColumn":71},{"ruleId":"299","severity":1,"message":"346","line":51,"column":13,"nodeType":"301","messageId":"302","endLine":51,"endColumn":24},{"ruleId":"299","severity":1,"message":"347","line":141,"column":11,"nodeType":"301","messageId":"302","endLine":141,"endColumn":26},{"ruleId":"299","severity":1,"message":"348","line":22,"column":12,"nodeType":"301","messageId":"302","endLine":22,"endColumn":29},{"ruleId":"295","severity":1,"message":"349","line":55,"column":8,"nodeType":"297","endLine":55,"endColumn":10,"suggestions":"350"},{"ruleId":"295","severity":1,"message":"351","line":300,"column":8,"nodeType":"297","endLine":300,"endColumn":16,"suggestions":"352"},{"ruleId":"299","severity":1,"message":"329","line":4,"column":10,"nodeType":"301","messageId":"302","endLine":4,"endColumn":31},{"ruleId":"299","severity":1,"message":"353","line":3,"column":21,"nodeType":"301","messageId":"302","endLine":3,"endColumn":26},{"ruleId":"299","severity":1,"message":"354","line":2,"column":8,"nodeType":"301","messageId":"302","endLine":2,"endColumn":13},{"ruleId":"291","replacedBy":"355"},{"ruleId":"293","replacedBy":"356"},{"ruleId":"291","replacedBy":"357"},{"ruleId":"293","replacedBy":"358"},{"ruleId":"299","severity":1,"message":"359","line":26,"column":10,"nodeType":"301","messageId":"302","endLine":26,"endColumn":22},{"ruleId":"299","severity":1,"message":"360","line":26,"column":24,"nodeType":"301","messageId":"302","endLine":26,"endColumn":39},{"ruleId":"305","severity":1,"message":"306","line":58,"column":32,"nodeType":"307","messageId":"308","endLine":58,"endColumn":34},{"ruleId":"305","severity":1,"message":"306","line":84,"column":23,"nodeType":"307","messageId":"308","endLine":84,"endColumn":25},{"ruleId":"313","severity":1,"message":"314","line":115,"column":48,"nodeType":"315","messageId":"316","endLine":115,"endColumn":50},{"ruleId":"313","severity":1,"message":"314","line":116,"column":48,"nodeType":"315","messageId":"316","endLine":116,"endColumn":50},"no-native-reassign",["361"],"no-negated-in-lhs",["362"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setAllInventoryItems', 'setBomItems', 'setCustomers', and 'setVendors'. Either include them or remove the dependency array.","ArrayExpression",["363"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'errorMessage' is assigned a value but never used.","'setErrorMessage' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Span' is defined but never used.","'userFirstName' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getUserData'. Either include it or remove the dependency array.",["364"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-dupe-keys","Duplicate key 'state'.","ObjectExpression","React Hook useEffect has missing dependencies: 'Cname' and 'slug'. Either include them or remove the dependency array.",["365"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'uuidv4' is defined but never used.","'moment' is defined but never used.","'VendorCustomerContext' is defined but never used.","'Select' is defined but never used.","'orderDetails' is assigned a value but never used.",["366"],"React Hook useEffect has a missing dependency: 'DisableButton'. Either include it or remove the dependency array.",["367"],"'Alert' is defined but never used.","'Tabs' is defined but never used.","'allItemsName' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'itemDetails'. Either include it or remove the dependency array.",["368"],["369"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'getPODetails' is defined but never used.","'RangePicker' is assigned a value but never used.","'disableWeekends' is assigned a value but never used.","'requestedQuantity' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'DisableButton' and 'slug'. Either include them or remove the dependency array.",["370"],"React Hook useEffect has a missing dependency: 'totalInvoice'. Either include it or remove the dependency array.",["371"],"'Space' is defined but never used.","'media' is defined but never used.",["361"],["362"],["361"],["362"],"'availableBom' is assigned a value but never used.","'setAvailableBom' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"372","fix":"373"},{"desc":"374","fix":"375"},{"desc":"376","fix":"377"},{"desc":"376","fix":"378"},{"desc":"379","fix":"380"},{"desc":"381","fix":"382"},{"desc":"376","fix":"383"},{"desc":"384","fix":"385"},{"desc":"386","fix":"387"},"Update the dependencies array to be: [setAllInventoryItems, setBomItems, setCustomers, setVendors]",{"range":"388","text":"389"},"Update the dependencies array to be: [getUserData]",{"range":"390","text":"391"},"Update the dependencies array to be: [Cname, slug]",{"range":"392","text":"393"},{"range":"394","text":"393"},"Update the dependencies array to be: [DisableButton, itemsList]",{"range":"395","text":"396"},"Update the dependencies array to be: [itemDetails]",{"range":"397","text":"398"},{"range":"399","text":"393"},"Update the dependencies array to be: [DisableButton, slug]",{"range":"400","text":"401"},"Update the dependencies array to be: [gRData, totalInvoice]",{"range":"402","text":"403"},[1170,1172],"[setAllInventoryItems, setBomItems, setCustomers, setVendors]",[2372,2374],"[getUserData]",[1130,1132],"[Cname, slug]",[1861,1863],[1919,1930],"[DisableButton, itemsList]",[2457,2459],"[itemDetails]",[1055,1057],[2221,2223],"[DisableButton, slug]",[9159,9167],"[gRData, totalInvoice]"]