[{"E:\\salman\\Sales-App\\src\\index.js":"1","E:\\salman\\Sales-App\\src\\App.js":"2","E:\\salman\\Sales-App\\src\\reportWebVitals.js":"3","E:\\salman\\Sales-App\\src\\config\\Route\\index.js":"4","E:\\salman\\Sales-App\\src\\components\\Layout\\layout.js":"5","E:\\salman\\Sales-App\\src\\components\\Signup\\signup.js":"6","E:\\salman\\Sales-App\\src\\components\\Login\\Login.js":"7","E:\\salman\\Sales-App\\src\\components\\Header\\header.js":"8","E:\\salman\\Sales-App\\src\\components\\Sidebar\\sidebar.js":"9","E:\\salman\\Sales-App\\src\\components\\Vendor\\index.js":"10","E:\\salman\\Sales-App\\src\\components\\Dashboard\\dashboard.js":"11","E:\\salman\\Sales-App\\src\\components\\UserProfile\\userProfile.js":"12","E:\\salman\\Sales-App\\src\\components\\Cutomer\\cutomer.js":"13","E:\\salman\\Sales-App\\src\\components\\Cutomer\\updateCustomer.js":"14","E:\\salman\\Sales-App\\src\\components\\RequestForQuotation\\requestForQuotation.js":"15","E:\\salman\\Sales-App\\src\\components\\PurchaseOrder\\purchaseOrder.js":"16","E:\\salman\\Sales-App\\src\\components\\Details\\vendorDetails.js":"17","E:\\salman\\Sales-App\\src\\components\\Details\\customerDetails.js":"18","E:\\salman\\Sales-App\\src\\Utils\\utils.js":"19","E:\\salman\\Sales-App\\src\\components\\Signup\\style\\index.js":"20","E:\\salman\\Sales-App\\src\\components\\Login\\style\\index.js":"21","E:\\salman\\Sales-App\\src\\context\\UserContext\\UserContext.js":"22","E:\\salman\\Sales-App\\src\\config\\Route\\routes.js":"23","E:\\salman\\Sales-App\\src\\components\\Vendor\\schema.js":"24","E:\\salman\\Sales-App\\src\\components\\Cutomer\\validationSchema.js":"25","E:\\salman\\Sales-App\\src\\config\\Firebase\\firebase.js":"26","E:\\salman\\Sales-App\\src\\components\\Header\\style\\index.js":"27","E:\\salman\\Sales-App\\src\\components\\Vendor\\style\\index.js":"28","E:\\salman\\Sales-App\\src\\components\\FormError\\formError.js":"29","E:\\salman\\Sales-App\\src\\components\\AllVendors\\allVendors.js":"30","E:\\salman\\Sales-App\\src\\components\\UserProfile\\style\\index.js":"31","E:\\salman\\Sales-App\\src\\components\\AllCustomers\\allCustomers.js":"32","E:\\salman\\Sales-App\\src\\context\\UserContext\\UserReducer.js":"33","E:\\salman\\Sales-App\\src\\components\\Details\\styles\\index.js":"34","E:\\salman\\Sales-App\\src\\components\\MediaQuery\\media.js":"35","E:\\salman\\Sales-App\\src\\components\\Textbox\\style\\index.js":"36","E:\\salman\\Sales-App\\src\\components\\AllCustomers\\style\\index.js":"37","E:\\salman\\Sales-App\\src\\components\\AllVendors\\style\\index.js":"38","E:\\salman\\Sales-App\\src\\components\\FormError\\style\\index.js":"39"},{"size":517,"mtime":1614839078761,"results":"40","hashOfConfig":"41"},{"size":784,"mtime":1614839078683,"results":"42","hashOfConfig":"41"},{"size":375,"mtime":1614839078761,"results":"43","hashOfConfig":"41"},{"size":686,"mtime":1614839078746,"results":"44","hashOfConfig":"41"},{"size":2339,"mtime":1614839078730,"results":"45","hashOfConfig":"41"},{"size":3208,"mtime":1614839078746,"results":"46","hashOfConfig":"41"},{"size":2526,"mtime":1614839078730,"results":"47","hashOfConfig":"41"},{"size":3508,"mtime":1614839078730,"results":"48","hashOfConfig":"41"},{"size":1366,"mtime":1614839078746,"results":"49","hashOfConfig":"41"},{"size":10785,"mtime":1614839078746,"results":"50","hashOfConfig":"41"},{"size":283,"mtime":1614839078715,"results":"51","hashOfConfig":"41"},{"size":453,"mtime":1614839078746,"results":"52","hashOfConfig":"41"},{"size":11465,"mtime":1614839078699,"results":"53","hashOfConfig":"41"},{"size":205,"mtime":1614839078699,"results":"54","hashOfConfig":"41"},{"size":2305,"mtime":1614852611224,"results":"55","hashOfConfig":"41"},{"size":234,"mtime":1614839078730,"results":"56","hashOfConfig":"41"},{"size":6231,"mtime":1614840718585,"results":"57","hashOfConfig":"41"},{"size":6988,"mtime":1614839078730,"results":"58","hashOfConfig":"41"},{"size":7531,"mtime":1614839078699,"results":"59","hashOfConfig":"41"},{"size":2673,"mtime":1614839078746,"results":"60","hashOfConfig":"41"},{"size":2588,"mtime":1614839078730,"results":"61","hashOfConfig":"41"},{"size":809,"mtime":1614839078761,"results":"62","hashOfConfig":"41"},{"size":1325,"mtime":1614839078746,"results":"63","hashOfConfig":"41"},{"size":829,"mtime":1614839078746,"results":"64","hashOfConfig":"41"},{"size":1247,"mtime":1614839078699,"results":"65","hashOfConfig":"41"},{"size":460,"mtime":1614839078746,"results":"66","hashOfConfig":"41"},{"size":957,"mtime":1614839078730,"results":"67","hashOfConfig":"41"},{"size":425,"mtime":1614839078746,"results":"68","hashOfConfig":"41"},{"size":224,"mtime":1614839078730,"results":"69","hashOfConfig":"41"},{"size":5016,"mtime":1614841684841,"results":"70","hashOfConfig":"41"},{"size":174,"mtime":1614839078746,"results":"71","hashOfConfig":"41"},{"size":3784,"mtime":1614839078699,"results":"72","hashOfConfig":"41"},{"size":118,"mtime":1614839078761,"results":"73","hashOfConfig":"41"},{"size":154,"mtime":1614840757754,"results":"74","hashOfConfig":"41"},{"size":512,"mtime":1614839078730,"results":"75","hashOfConfig":"41"},{"size":222,"mtime":1614839078746,"results":"76","hashOfConfig":"41"},{"size":730,"mtime":1614839078699,"results":"77","hashOfConfig":"41"},{"size":730,"mtime":1614840552724,"results":"78","hashOfConfig":"41"},{"size":97,"mtime":1614839078730,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"1gkmbzl",{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"82"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"82"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"82"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"82"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"82"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"82"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"82"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"82"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"82"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"82"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"82"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"82"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"E:\\salman\\Sales-App\\src\\index.js",[],["171","172"],"E:\\salman\\Sales-App\\src\\App.js",[],"E:\\salman\\Sales-App\\src\\reportWebVitals.js",[],"E:\\salman\\Sales-App\\src\\config\\Route\\index.js",["173","174"],"import React from 'react'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n  useHistory\r\n} from 'react-router-dom'\r\n\r\nimport Layout from '../../components/Layout/layout'\r\nimport Login from '../../components/Login/Login'\r\nimport Signup from '../../components/Signup/signup'\r\n\r\n// import './route.css'\r\nconst MainRouter = () => {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Login} />\r\n        <Route path=\"/signup\" component={Signup} />\r\n        <Route path=\"/home\" component={Layout} />\r\n        {/* <Route render={() => <Redirect to=\"/home\" />} /> */}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\nexport default MainRouter;\r\n","E:\\salman\\Sales-App\\src\\components\\Layout\\layout.js",[],"E:\\salman\\Sales-App\\src\\components\\Signup\\signup.js",[],"E:\\salman\\Sales-App\\src\\components\\Login\\Login.js",["175","176"],"import React, { useState } from 'react'\r\nimport { loginUser } from '../../Utils/utils';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport 'antd/dist/antd.css';\r\nimport { message } from 'antd';\r\nimport {\r\n    LoginContainer,\r\n    LoginDiv,\r\n    LoginHeading,\r\n    LoginForm,\r\n    UserEmailTextbox,\r\n    PasswordTextbox,\r\n    PrimaryButton,\r\n    TextWelcome,\r\n    Paragraph,\r\n    BreakLine,\r\n    Link\r\n} from './style/index'\r\n\r\nexport default function Login() {\r\n    const history = useHistory();\r\n    const [email, setUserEmail] = useState();\r\n    const [password, setPassword] = useState();\r\n    const [errorMessage, setErrorMessage] = useState(false)\r\n\r\n    if (localStorage.getItem('Authorization')) {\r\n        history.replace('/home')\r\n        // return\r\n    }\r\n\r\n    const onLogin = () => {\r\n        if (!email || !password) {\r\n            message.error('Enter valid credentials')\r\n        } else {\r\n            loginUser(email, password)\r\n                .then((res) => {\r\n                    // let token = res.auth.\r\n                    let token = 'dummy_token'\r\n                    localStorage.setItem('Authorization', token)\r\n                    history.replace('/home')\r\n                });\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <LoginContainer>\r\n                <LoginDiv>\r\n                    <TextWelcome>\r\n                        Welcome\r\n                    </TextWelcome>\r\n                    <LoginHeading>\r\n                        Login to Sales-App\r\n                    </LoginHeading>\r\n                    <LoginForm>\r\n                        <UserEmailTextbox\r\n                            type='text'\r\n                            placeholder='Email'\r\n                            onChange={e => setUserEmail(e.target.value)}\r\n                        />\r\n                        <PasswordTextbox\r\n                            type='password'\r\n                            placeholder='Password'\r\n                            onChange={e => setPassword(e.target.value)}\r\n                        />\r\n                        <PrimaryButton onClick={onLogin}>Continue</PrimaryButton>\r\n                    </LoginForm>\r\n                    <BreakLine />\r\n                    <Paragraph>\r\n                        Don't have an account?\r\n                   <Link onClick={() => history.push(\"/signup\")}>\r\n                            SignUp\r\n                   </Link>\r\n                    </Paragraph>\r\n                </LoginDiv>\r\n            </LoginContainer>\r\n        </div>\r\n    )\r\n}","E:\\salman\\Sales-App\\src\\components\\Header\\header.js",["177","178","179","180","181","182","183","184"],"import React, { useState } from 'react'\r\nimport firebase from '../../config/Firebase/firebase'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { getUserData } from '../../Utils/utils'\r\nimport {\r\n    Navbar,\r\n    Logo,\r\n    User,\r\n    UserName,\r\n    UserAvatar,\r\n    DropdownDiv,\r\n    UsersFirstName,\r\n    UsersEmail,\r\n    Span\r\n} from './style/index'\r\nimport { Avatar, Menu, Dropdown, Divider } from 'antd';\r\nimport { UserOutlined, LogoutOutlined, } from \"@ant-design/icons\";\r\nimport 'antd/dist/antd.css';\r\n\r\n\r\nconst Header = () => {\r\n    const [userFirstName, setUserFirstName] = useState('')\r\n    const [userLastName, setUserLastName] = useState('')\r\n    const [userEmail, setUserEmail] = useState('')\r\n    const [userImage, setUserImage] = useState(null)\r\n    const history = useHistory();\r\n    const onLogout = () => {\r\n        firebase.auth().signOut()\r\n            .then(() => {\r\n                localStorage.removeItem('Authorization')\r\n                localStorage.removeItem('userId')\r\n                history.replace('/')\r\n            })\r\n    }\r\n    \r\n   const userInfo = getUserData().then((data)=>{\r\n    //    console.log('user data ===========> $',data[0].name);\r\n       setUserFirstName(data[0].name)\r\n       setUserEmail(data[0].email)\r\n      setUserImage(data[0].url)\r\n    //    console.log('user data ===========> $',data[0].email);\r\n    //    console.log('user data ===========> $',data[0].name);\r\n   });\r\n   \r\n//    console.log('User data form header', userInfo)\r\n    const showProfile = () => {\r\n        // console.log('userData funtion', getUserData())\r\n        history.replace('/home/user-profile')\r\n    }\r\n   \r\n    const menu = (\r\n        <Menu>\r\n\r\n            <DropdownDiv>\r\n                <Avatar\r\n                    src={userImage}\r\n                    size={64}\r\n                    icon={!userImage ? <UserOutlined /> : ''}\r\n                />\r\n                <UsersFirstName>Hello {userLastName ? userLastName : 'User'}</UsersFirstName>\r\n                <UsersEmail>{userEmail}</UsersEmail>\r\n                <Divider />\r\n            </DropdownDiv>\r\n            <Menu.Item>\r\n                <a onClick={showProfile}>\r\n                    <UserOutlined />\r\n                    Profile\r\n            </a>\r\n            </Menu.Item>\r\n            <Menu.Item>\r\n                <a>\r\n                    3rd menu item\r\n            </a>\r\n            </Menu.Item>\r\n            <Menu.Item>\r\n                <a onClick={onLogout}>\r\n\r\n                    <LogoutOutlined />\r\n                Logout\r\n                </a>\r\n            </Menu.Item>\r\n        </Menu>\r\n    );\r\n    return (\r\n        <div>\r\n            <Navbar>\r\n                <Logo src='https://1000logos.net/wp-content/uploads/2017/08/CAT-logo.png' />\r\n                {/* <h5>Logo</h5> */}\r\n                <User>\r\n                    <UserName>User First Name</UserName>\r\n                    <UserAvatar>\r\n                        <Dropdown overlay={menu}>\r\n                            <a className=\"ant-dropdown-link\" onClick={(e) => e.preventDefault()}>\r\n                                <Avatar\r\n                                    src={userImage}\r\n                                    size='large'\r\n                                    icon={!userImage ? <UserOutlined /> : ''}\r\n                                />\r\n                            </a>\r\n                        </Dropdown>\r\n                    </UserAvatar>\r\n                </User>\r\n            </Navbar>\r\n        </div>\r\n    )\r\n}\r\nexport default Header\r\n","E:\\salman\\Sales-App\\src\\components\\Sidebar\\sidebar.js",["185","186","187","188","189"],"import React, { useState } from 'react'\r\nimport { Layout, Menu, PageHeader } from 'antd';\r\n// import './sidebar.css'\r\nimport routes from '../../config/Route/routes'\r\nimport { Link } from 'react-router-dom';\r\nconst SideBar = () => {\r\n    const { Content, Footer, Sider } = Layout;\r\n    const [collapsed, setCollapsed] = useState()\r\n    // const onCollapse = collapsed => {\r\n    //     console.log(collapsed);\r\n    //     setCollapsed(collapsed)\r\n    // };\r\n\r\n    return (\r\n        <Layout style={{ minHeight: '100vh' }}>\r\n            <Sider\r\n                breakpoint=\"lg\"\r\n                collapsedWidth=\"0\"\r\n                onBreakpoint={broken => {\r\n                    console.log(broken);\r\n                }}\r\n                onCollapse={(collapsed, type) => {\r\n                    console.log(collapsed, type);\r\n                }}\r\n            >\r\n                <div className=\"logo\" />\r\n                <Menu theme=\"dark\" mode=\"inline\" >\r\n                    {\r\n                        routes.map((link, index) => {\r\n                            return <Menu.Item key={index} >\r\n                                <Link to={`/home${link.path}`}>{link.name}</Link>\r\n                            </Menu.Item>\r\n                        })\r\n                    }\r\n\r\n\r\n                </Menu>\r\n            </Sider>\r\n        </Layout>\r\n\r\n    )\r\n}\r\nexport default SideBar","E:\\salman\\Sales-App\\src\\components\\Vendor\\index.js",[],"E:\\salman\\Sales-App\\src\\components\\Dashboard\\dashboard.js",[],"E:\\salman\\Sales-App\\src\\components\\UserProfile\\userProfile.js",[],"E:\\salman\\Sales-App\\src\\components\\Cutomer\\cutomer.js",[],"E:\\salman\\Sales-App\\src\\components\\Cutomer\\updateCustomer.js",["190","191"],"import React,{useState, useEffect} from 'react'\r\n\r\nconst UpdateCustomer = () => {\r\n    return(\r\n        <div>\r\n            <h2> update Customer</h2>\r\n        </div>\r\n    )\r\n}\r\nexport default UpdateCustomer","E:\\salman\\Sales-App\\src\\components\\RequestForQuotation\\requestForQuotation.js",["192"],"E:\\salman\\Sales-App\\src\\components\\PurchaseOrder\\purchaseOrder.js",[],"E:\\salman\\Sales-App\\src\\components\\Details\\vendorDetails.js",["193","194"],"import React, { useEffect, useState } from 'react'\r\nimport { useParams, useHistory } from 'react-router-dom'\r\nimport { getSpecificData, UpdateVendor } from '../../Utils/utils'\r\nimport { CaretLeftOutlined } from \"@ant-design/icons\";\r\nimport { Goback, DetailsDiv } from './styles/index'\r\nimport {\r\n    Divider,\r\n    Row,\r\n    Col,\r\n    Input,\r\n    Button,\r\n    Switch\r\n} from 'antd';\r\nconst VendorDetails = () => {\r\n    const [isDisable, setisDisable] = useState(true)\r\n    const [detailsdData, setDetailsData] = useState(\r\n        {\r\n            ownerFirstName: \"\",\r\n            ownerLastName: '',\r\n            companyName: \"\",\r\n            city: \"\",\r\n            address: \"\",\r\n            email: \"\",\r\n            state: '',\r\n            iD: \"\",\r\n            phone: '',\r\n            postalCode: ''\r\n        }\r\n    )\r\n    const { slug, Cname } = useParams()\r\n    const history = useHistory();\r\n    useEffect(() => {\r\n        getSpecificData(slug, Cname).then(data => {\r\n            setDetailsData(data[0])\r\n        })\r\n        DisableFields(false)\r\n    }, [])\r\n\r\n    function DisableFields(checked) {\r\n        console.log(`switch to ${checked}`);\r\n        setisDisable(checked)\r\n    }\r\n    const changeHandler = (key, value) => {\r\n        setDetailsData({ ...detailsdData, [value]: key.target.value })\r\n    }\r\n    const updateVendor = () => {\r\n        UpdateVendor(detailsdData, detailsdData.compId)\r\n        // console.log('detailsdData, detailsdData.compId', detailsdData, detailsdData.compId)\r\n    }\r\n    // console.log('VendorDetails------->', detailsdData, detailsdData.compId)\r\n\r\n    return (\r\n        <DetailsDiv>\r\n            <Goback onClick={e => history.goBack()}>\r\n                <CaretLeftOutlined /> GoBack\r\n            </Goback>\r\n            <h2>Vendor Details page</h2>\r\n            <label> Update\r\n                <Switch\r\n                    size='small'\r\n                    onChange={DisableFields}\r\n                />\r\n            </label>\r\n\r\n            <div>\r\n                <Divider orientation=\"left\">\r\n                    <h2>Name</h2>\r\n                </Divider>\r\n                <Row gutter={[10, 10]}>\r\n                    <Col xs={24} sm={8}>\r\n                        <h2>FirstName:</h2>\r\n                        {\r\n                            <Input type='text' value={detailsdData.ownerFirstName}\r\n                                onChange={(e) => changeHandler(e, 'ownerFirstName')}\r\n                                disabled={!isDisable}\r\n                            />\r\n                        }\r\n                    </Col>\r\n                    <Col xs={24} sm={8}>\r\n                        <h2>LastName:</h2>\r\n                        {\r\n                            <Input type='text' value={detailsdData.ownerLastName}\r\n                                onChange={(e) => changeHandler(e, 'ownerLastName')}\r\n                                disabled={!isDisable}\r\n                            />\r\n                        }\r\n                    </Col>\r\n                    <Col xs={24} sm={8}>\r\n                        <h2>Company:</h2>\r\n                        <Input type='text' value={detailsdData.companyName}\r\n                            onChange={(e) => changeHandler(e, 'companyName')}\r\n                            disabled={!isDisable}\r\n                        />\r\n                    </Col>\r\n\r\n                </Row>\r\n                <Divider orientation=\"left\">\r\n                    <h2>Address</h2>\r\n                </Divider>\r\n                <Row gutter={[10, 10]}>\r\n                    <Col xs={24} sm={16}>\r\n                        <h2>State:</h2>\r\n                        <Input type='text' value={detailsdData.state}\r\n                            onChange={(e) => changeHandler(e, 'state')}\r\n                            disabled={!isDisable}\r\n                        />\r\n                    </Col>\r\n                    <Col xs={24} sm={8}>\r\n                        <h2>City:</h2>\r\n                        <Input type='text' value={detailsdData.city}\r\n                            onChange={(e) => changeHandler(e, 'city')}\r\n                            disabled={!isDisable}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row gutter={[10, 10]}>\r\n                    <Col xs={24} sm={16}>\r\n                        <h2>Address:</h2>\r\n                        <Input type='text' value={detailsdData.address}\r\n                            onChange={(e) => changeHandler(e, 'address')}\r\n                            disabled={!isDisable}\r\n                        />\r\n                    </Col>\r\n                    <Col xs={24} sm={8}>\r\n                        <h2>PostalCode:</h2>\r\n                        <Input type='text' value={detailsdData.postalCode}\r\n                            onChange={(e) => changeHandler(e, 'postalCode')}\r\n                            disabled={!isDisable}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Divider orientation='left'>\r\n                    <h2>Contact</h2>\r\n                </Divider>\r\n                <Row gutter={[10, 10]}>\r\n                    <Col xs={24} sm={16}>\r\n                        <h2>Email:</h2>\r\n                        <Input type='text' value={detailsdData.email}\r\n                            onChange={(e) => changeHandler(e, 'email')}\r\n                            disabled={!isDisable}\r\n                        />\r\n                    </Col>\r\n                    <Col xs={24} sm={8}>\r\n                        <h2>Phone Number:</h2>\r\n                        <Input type='text' value={detailsdData.phone}\r\n                            onChange={(e) => changeHandler(e, 'phone')}\r\n                            disabled={!isDisable}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row gutter={10, 10}>\r\n                    <Col xs={24} sm={16}>\r\n                        <Button \r\n                        onClick={updateVendor}\r\n                        disabled={!isDisable}\r\n                        >Update</Button>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n            {/* )\r\n            })} */}\r\n        </DetailsDiv>\r\n    )\r\n}\r\nexport default VendorDetails","E:\\salman\\Sales-App\\src\\components\\Details\\customerDetails.js",["195"],"import React, { useEffect, useState } from 'react'\r\nimport { useParams, useHistory } from 'react-router-dom'\r\nimport { getSpecificData, UpdateCustomer } from '../../Utils/utils'\r\nimport { CaretLeftOutlined } from \"@ant-design/icons\";\r\nimport { Goback } from './styles/index'\r\nimport {\r\n    Divider,\r\n    Row,\r\n    Col,\r\n    Input,\r\n    Button,\r\n    Switch\r\n} from 'antd';\r\nconst VendorDetails = () => {\r\n    const [detailsdData, setDetailsData] = useState(\r\n        {\r\n            billToAddress: \"\",\r\n            businessName: \"\",\r\n            city: \"\",\r\n            compId: \"\",\r\n            email: \"\",\r\n            state: '',\r\n            iD: \"\",\r\n            phone: '',\r\n            postalCode: '',\r\n            responsibleName: \"\",\r\n            responsiblePhone: \"\",\r\n            secondaryPhone: \"\"\r\n        }\r\n    )\r\n    const [isDisable, setisDisable] = useState(true)\r\n    const { slug, Cname } = useParams()\r\n    const history = useHistory();\r\n    useEffect(() => {\r\n        getSpecificData(slug, Cname).then(data => {\r\n            setDetailsData(data[0])\r\n        })\r\n        DisableFields(false)\r\n    }, [])\r\n\r\n    const changeHandler = (key, value) => {\r\n        setDetailsData({ ...detailsdData, [value]: key.target.value })\r\n    }\r\n\r\n    const updateCustomer = () => {\r\n        UpdateCustomer(detailsdData, detailsdData.compId)\r\n    }\r\n\r\n    function DisableFields(checked) {\r\n        console.log(`switch to ${checked}`);\r\n        setisDisable(checked)\r\n    }\r\n    // console.log('customerDetails------->', detailsdData, detailsdData.compId)\r\n    return (\r\n        <div>\r\n            <Goback onClick={e => history.goBack()}>\r\n                <CaretLeftOutlined /> GoBack\r\n            </Goback>\r\n            <h2>Customer Details page</h2>\r\n            <label> Update\r\n                <Switch\r\n                    size='small'\r\n                    onChange={DisableFields}\r\n                />\r\n            </label>\r\n            <div>\r\n                <Divider orientation=\"left\">\r\n                    <h2>Name</h2>\r\n                </Divider>\r\n                <Row gutter={[10, 10]}>\r\n                    <Col xs={24} sm={16}>\r\n                        <h2>Name:</h2>\r\n                        {\r\n                            <Input type='text' value={detailsdData.businessName}\r\n                                onChange={(e) => changeHandler(e, 'businessName')}\r\n                                disabled={!isDisable}\r\n                            />\r\n                        }\r\n                    </Col>\r\n\r\n                    <Col xs={24} sm={8}>\r\n                        <h2>Company:</h2>\r\n                        <Input type='text' value={detailsdData.companyName}\r\n                            onChange={(e) => changeHandler(e, 'companyName')}\r\n                            disabled={!isDisable}\r\n                        />\r\n                    </Col>\r\n\r\n                </Row>\r\n                <Divider orientation=\"left\">\r\n                    <h2>Address</h2>\r\n                </Divider>\r\n                <Row gutter={[10, 10]}>\r\n                    <Col xs={24} sm={16}>\r\n                        <h2>State:</h2>\r\n                        <Input type='text' value={detailsdData.state}\r\n                            onChange={(e) => changeHandler(e, 'state')}\r\n                            disabled={!isDisable}\r\n                        />\r\n                    </Col>\r\n                    <Col xs={24} sm={8}>\r\n                        <h2>City:</h2>\r\n                        <Input type='text' value={detailsdData.city}\r\n                            onChange={(e) => changeHandler(e, 'city')}\r\n                            disabled={!isDisable}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row gutter={[10, 10]}>\r\n                    <Col xs={24} sm={16}>\r\n                        <h2>Address:</h2>\r\n                        <Input type='text' value={detailsdData.billToAddress}\r\n                            onChange={(e) => changeHandler(e, 'billToAddress')}\r\n                            disabled={!isDisable}\r\n                        />\r\n                    </Col>\r\n                    <Col xs={24} sm={8}>\r\n                        <h2>PostalCode:</h2>\r\n                        <Input type='text' value={detailsdData.postalCode}\r\n                            onChange={(e) => changeHandler(e, 'postalCode')}\r\n                            disabled={!isDisable}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Divider orientation='left'>\r\n                    <h2>Contact</h2>\r\n                </Divider>\r\n                <Row gutter={[10, 10]}>\r\n                    <Col xs={24} sm={16}>\r\n                        <h2>Email:</h2>\r\n                        <Input type='text' value={detailsdData.email}\r\n                            onChange={(e) => changeHandler(e, 'email')}\r\n                            disabled={!isDisable}\r\n                        />\r\n                    </Col>\r\n                    <Col xs={24} sm={8}>\r\n                        <h2>Phone Number:</h2>\r\n                        <Input type='text' value={detailsdData.phone}\r\n                            onChange={(e) => changeHandler(e, 'phone')}\r\n                            disabled={!isDisable}\r\n                        />\r\n                    </Col>\r\n                    <Col xs={24} sm={8}>\r\n                        <h2>Secondary Phone Number:</h2>\r\n                        <Input type='text' value={detailsdData.secondaryPhone}\r\n                            onChange={(e) => changeHandler(e, 'secondaryPhone')}\r\n                            disabled={!isDisable}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Divider orientation='left'>\r\n                    <h2>Responsible Details</h2>\r\n                </Divider>\r\n                <Row gutter={[10, 10]}>\r\n                    <Col xs={24} sm={16}>\r\n                        <h2>Name:</h2>\r\n                        <Input type='text' value={detailsdData.responsibleName}\r\n                            onChange={(e) => changeHandler(e, 'responsibleName')}\r\n                            disabled={!isDisable}\r\n                        />\r\n                    </Col>\r\n                    <Col xs={24} sm={8}>\r\n                        <h2>Phone Number:</h2>\r\n                        <Input type='text' value={detailsdData.responsiblePhone}\r\n                            onChange={(e) => changeHandler(e, 'responsiblePhone')}\r\n                            disabled={!isDisable}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row gutter={[10, 10]}>\r\n                    <Col xs={24} sm={16}>\r\n                        <Button onClick={updateCustomer}\r\n                            disabled={!isDisable}\r\n                        >Update</Button>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default VendorDetails","E:\\salman\\Sales-App\\src\\Utils\\utils.js",["196","197","198"],"import firebase from '../config/Firebase/firebase'\r\nimport 'antd/dist/antd.css';\r\nimport { message } from 'antd';\r\n\r\nconst createUser = async (email, password, name, img) => {\r\n  console.log(email, password, name, img);\r\n  if (email == \"\" || password == \"\" || name == \"\") {\r\n    message.error('Data is not in correct format')\r\n  }\r\n  else if (img == null) {\r\n    message.error('upload an image')\r\n  }\r\n  else {\r\n    return await firebase.auth()\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then((u) => {\r\n        const storageRef = firebase.storage().ref(`images/${img.name}.jpg`);\r\n        storageRef\r\n          .put(img)\r\n          .then((response) => {\r\n            response.ref.getDownloadURL()\r\n              .then((url) => {\r\n                const userId = u.user.uid;\r\n                firebase.firestore().collection(\"Users\").doc(userId).set({\r\n                  name,\r\n                  email,\r\n                  url,\r\n                  userId\r\n                });\r\n                message.success('Account Created')\r\n              })\r\n              .catch((error) => {\r\n                console.log('Error', error.message)\r\n              })\r\n          })\r\n          .catch((error) => {\r\n            console.log('Error', error.message)\r\n          })\r\n      })\r\n  }\r\n}\r\n\r\nconst loginUser = async (email, password) => {\r\n\r\n  return await firebase.auth()\r\n    .signInWithEmailAndPassword(email, password)\r\n    .then((u) => {\r\n      const userId = u.user.uid\r\n      console.log('login u', u.user.uid)\r\n      localStorage.setItem('userId', userId)\r\n      message.success('WelCome')\r\n      // localStorage.setItem(\"userID\", userId);\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n      message.error(error.message)\r\n      throw error\r\n    });\r\n\r\n};\r\n\r\nconst getUserData = () => {\r\n  const userID = localStorage.getItem('userId')\r\n  // console.log('USER ID============>',userID);\r\n  return firebase\r\n    .firestore()\r\n    .collection(\"Users\")\r\n    .where(\"userId\", \"==\", userID)\r\n    .get()\r\n    .then(function (querySnapshot) {\r\n      const comlist = [];\r\n      querySnapshot.forEach(function (doc) {\r\n        if (doc.exists) {\r\n          const comp = doc.data();\r\n          comlist.push({ ...comp, compId: doc.id });\r\n        } else {\r\n          message.info(\"No such document!\");\r\n        }\r\n      });\r\n      // setCompanyList(comlist);\r\n      // setInitialCompany(comlist);\r\n      // console.log('data-------->', comlist)\r\n      return comlist\r\n    })\r\n    .catch(function (error) {\r\n      console.log(\"Error getting documents: \", error);\r\n    });\r\n\r\n}\r\n\r\nconst createVendor = (vendorDetails, vendorId) => {\r\n  console.log('create vendor function')\r\n  const {\r\n    companyName,\r\n    ownerFirstName,\r\n    ownerLastName,\r\n    address,\r\n    phone,\r\n    email,\r\n    city,\r\n    postalCode\r\n  } = vendorDetails\r\n\r\n  // console.log(companyName, ownerFirstName, ownerLastName, address, phone, email, city, postalCode);\r\n  const vendorObj = {\r\n    companyName,\r\n    ownerFirstName,\r\n    ownerLastName,\r\n    address,\r\n    phone,\r\n    email,\r\n    city,\r\n    postalCode,\r\n    iD:''\r\n  }\r\n\r\n  firebase.firestore().collection(\"Vendor\").add(\r\n    vendorObj\r\n  )\r\n    .then((response) => {\r\n      console.log('respnse', response.id)\r\n      firebase.firestore().collection(\"Vendor\").doc(response.id).update({'iD': response.id})\r\n\r\n      message.success('Vendor Created')\r\n    }).catch((error) => {\r\n      console.log('Error', error.message)\r\n      message.error(error.message)\r\n    })\r\n\r\n}\r\n\r\nconst createNewCustomer = (customerDetails, customerId) => {\r\n\r\n  const {\r\n    businessName,\r\n    billToAddress,\r\n    phone,\r\n    email,\r\n    city,\r\n    responsibleName,\r\n    responsiblePhone,\r\n    secondaryPhone,\r\n    postalCode\r\n  } = customerDetails\r\n\r\n  const customerObj={\r\n    businessName,\r\n    billToAddress,\r\n    phone,\r\n    email,\r\n    city,\r\n    responsibleName,\r\n    responsiblePhone,\r\n    secondaryPhone,\r\n    postalCode,\r\n    iD:''\r\n  }\r\n  // console.log(businessName, ownerFirstName, ownerLastName, billToAddress, phone, email, city, postalCode);\r\n\r\n  firebase.firestore().collection(\"Customer\").add(customerObj)\r\n    .then((response) => {\r\n      console.log('respnse', response.id)\r\n      firebase.firestore().collection(\"Customer\").doc(response.id).update({'iD': response.id})\r\n\r\n      console.log('customer response', response.id);\r\n      message.success('Customer Created')\r\n    }).catch((error) => {\r\n      console.log('Error', error.message)\r\n      message.error(error.message)\r\n    })\r\n}\r\n\r\nconst updateVendor = () => {\r\n  let docRef = firebase.firestore().collection(\"Vendor\").doc();\r\n  // firebase.firestore().collection(\"Vendor\").get().then(function (doc) {\r\n  // let cT = doc.data().companyName;\r\n  // docRef.update({\r\n  //   currentToken: cT,\r\n  // });\r\n  // });\r\n  console.log('update doc------->', docRef)\r\n\r\n};\r\n\r\nconst getSpecificData = (id , Cname) => {\r\n  \r\n  return firebase\r\n    .firestore()\r\n    .collection(Cname)\r\n    .where(\"iD\", \"==\", id)\r\n    .get()\r\n    .then(function (querySnapshot) {\r\n      // console.log('querySnapshot', querySnapshot)\r\n      const comlist = [];\r\n      querySnapshot.forEach(function (doc) {\r\n        if (doc.exists) {\r\n          const comp = doc.data();\r\n          comlist.push({ ...comp, compId: doc.id });\r\n        } else {\r\n          message.info(\"No such document!\");\r\n        }\r\n      });\r\n      // setCompanyList(comlist);\r\n      // setInitialCompany(comlist);\r\n      // console.log('data-------->', comlist)\r\n      return comlist\r\n    })\r\n    .catch(function (error) {\r\n      console.log(\"Error getting documents: \", error);\r\n    });\r\n}\r\n\r\nconst UpdateCustomer = (customerDetail, id) => {\r\n  // console.log('firebase=======>',customerDetail, id)\r\n  firebase.firestore().collection(\"Customer\").doc(id)\r\n          .update({\r\n            businessName: customerDetail.businessName,\r\n            companyName: customerDetail.companyName,\r\n            state: customerDetail.state,\r\n            city: customerDetail.city,\r\n            billToAddress: customerDetail.billToAddress,\r\n            postalCode: customerDetail.postalCode,\r\n            phone:customerDetail.phone,\r\n            email:customerDetail.email,\r\n            secondaryPhone: customerDetail.secondaryPhone,\r\n            responsibleName: customerDetail.responsibleName,\r\n            responsiblePhone: customerDetail.responsiblePhone\r\n          })\r\n          .then(()=>{\r\n            message.success('Data updated')\r\n          })\r\n          .catch((error) => {\r\n            message.error(error.message)\r\n          })\r\n}\r\n\r\nconst UpdateVendor = (vendorDetail, id) => {\r\n  // console.log('vendorDetail, id--------->', vendorDetail, id)\r\n  firebase.firestore().collection(\"Vendor\").doc(id)\r\n          .update({\r\n            address: vendorDetail.address,\r\n            ownerFirstName: vendorDetail.ownerFirstName,\r\n            ownerLastName: vendorDetail.ownerLastName,\r\n            companyName: vendorDetail.companyName,\r\n            state: vendorDetail.state,\r\n            city: vendorDetail.city,\r\n            postalCode: vendorDetail.postalCode,\r\n            phone:vendorDetail.phone,\r\n            email:vendorDetail.email\r\n          })\r\n          .then(()=>{\r\n            message.success('Data updated')\r\n          })\r\n          .catch((error) => {\r\n            message.error(error.message)\r\n          })\r\n}  \r\n\r\n\r\nexport {\r\n  createUser,\r\n  loginUser,\r\n  getUserData,\r\n  createVendor,\r\n  createNewCustomer,\r\n  updateVendor,\r\n  getSpecificData,\r\n  UpdateCustomer,\r\n  UpdateVendor\r\n}","E:\\salman\\Sales-App\\src\\components\\Signup\\style\\index.js",[],"E:\\salman\\Sales-App\\src\\components\\Login\\style\\index.js",[],"E:\\salman\\Sales-App\\src\\context\\UserContext\\UserContext.js",["199"],"import React, { createContext, useReducer } from 'react'\r\nimport UserReducer from './UserReducer'\r\n//Initial State\r\nconst UserInitialState = {\r\n    userData: {\r\n        firstname: 'Muhammad',\r\n        lastname: 'Salman',\r\n        email: 'muhammadsalman0403@gmail.com',\r\n        id: '123456789abcdefgh',\r\n        url: 'https://static.topyaps.com/wp-content/uploads/2018/11/hera-pheri.jpeg'\r\n    }\r\n}\r\n\r\n//Create Context\r\nexport const UserDataContext = createContext(UserInitialState)\r\n\r\n//Create Provider\r\nexport const UserDataProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(UserReducer, UserInitialState)\r\n    return (\r\n        <UserDataContext.Provider value={{\r\n            userData: state.userData\r\n        }}>\r\n            {children}\r\n        </UserDataContext.Provider>\r\n    )\r\n}","E:\\salman\\Sales-App\\src\\config\\Route\\routes.js",[],"E:\\salman\\Sales-App\\src\\components\\Vendor\\schema.js",[],"E:\\salman\\Sales-App\\src\\components\\Cutomer\\validationSchema.js",[],"E:\\salman\\Sales-App\\src\\config\\Firebase\\firebase.js",[],"E:\\salman\\Sales-App\\src\\components\\Header\\style\\index.js",["200"],"import styled from 'styled-components'\r\nimport media from '../../MediaQuery/media'\r\n\r\nexport const Navbar = styled.div`\r\ndisplay: flex;\r\njustify-content: space-between;\r\nalign-items: center;\r\nheight: 50px;\r\nborder-bottom: 1px solid gray;\r\nbox-shadow: 5px 2px 15px #888888;\r\n`\r\nexport const Logo = styled.img`\r\nwidth:50px;\r\nheight: 50px;\r\nmargin-left: 10px;\r\n// justify-content: flex-start;\r\n`\r\nexport const User = styled.div`\r\ndisplay: flex;\r\nalign-items: center;\r\n`\r\nexport const UserName = styled.div`\r\nmargin-right: 10px;\r\n`\r\nexport const UserAvatar = styled.div`\r\nmargin-right: 10px;\r\n`\r\nexport const DropdownDiv = styled.div`\r\ntext-align: center;\r\njustify-content: center;\r\nalign-items: center;\r\nmargin-top: 10px;\r\nwidth:250px;\r\noverflow: hidden;\r\npadding:12px;\r\n`\r\nexport const UsersFirstName = styled.h4`\r\nmargin-top:15px;\r\nword-spacing:1px;\r\n`\r\nexport const UsersEmail = styled.p`\r\n\r\n`\r\nexport const Span = styled.span`\r\nmargin-right: 10px;\r\n`\r\n\r\n\r\n","E:\\salman\\Sales-App\\src\\components\\Vendor\\style\\index.js",[],"E:\\salman\\Sales-App\\src\\components\\FormError\\formError.js",[],"E:\\salman\\Sales-App\\src\\components\\AllVendors\\allVendors.js",["201","202"],"import React, { useState, useEffect } from 'react'\r\nimport firebase from '../../config/Firebase/firebase';\r\nimport { useHistory } from 'react-router-dom'\r\nimport { EmptyDiv } from './style/index'\r\nimport { Empty, Table, Space, Button } from 'antd';\r\nimport loader from '../../assets/loader.gif'\r\nimport {\r\n    TableDiv,\r\n    // Table,\r\n    // TableRow,\r\n    // TableData,\r\n    // TableHeading,\r\n    // TableHead,\r\n    // TableBody,\r\n    LoaderDiv\r\n} from './style/index'\r\n\r\n\r\nconst AllVendors = () => {\r\n    const [allVendors, setAllVendors] = useState()\r\n    const [isVendor, setIsVendor] = useState(false)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const history = useHistory()\r\n\r\n    const getAllVendors = () => {\r\n        setIsLoading(true)\r\n        firebase\r\n            .firestore()\r\n            .collection(\"Vendor\")\r\n            .onSnapshot(function (querySnapshot) {\r\n                const vendorList = [];\r\n                querySnapshot.forEach(function (doc) {\r\n                    console.log('functions Doc', doc.data)\r\n                    if (doc.exists) {\r\n                        const comp = doc.data();\r\n                        vendorList.push({ ...comp, compId: doc.id });\r\n                        setIsVendor(true)\r\n                    } else {\r\n                        // alert(\"No such document!\");\r\n                        // <EmptyDiv>\r\n                        //     <Empty/>\r\n                        // </EmptyDiv>\r\n                        setIsVendor(false)\r\n                    }\r\n                });\r\n                setAllVendors(vendorList);\r\n                setIsLoading(false)\r\n                // setIsVendor(true)\r\n            });\r\n    }\r\n\r\n    const updateVendor = (e) => {\r\n        console.log('update E', e)\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Company Name',\r\n            dataIndex: 'companyName',\r\n            key: 'name',\r\n        },\r\n        {\r\n            title: 'FirstName',\r\n            dataIndex: 'ownerFirstName',\r\n            key: 'firstname',\r\n        },\r\n        {\r\n            title: 'LastName',\r\n            dataIndex: 'ownerLastName',\r\n            key: 'lastname',\r\n        },\r\n        {\r\n            title: 'Phone',\r\n            dataIndex: 'phone',\r\n            key: 'phone',\r\n        },\r\n        {\r\n            title: 'Address',\r\n            dataIndex: 'address',\r\n            key: 'address',\r\n        },\r\n        {\r\n            title: 'Action',\r\n            key: 'action',\r\n            render: (allVendors) => (\r\n              <Space size=\"middle\">\r\n                <Button\r\n                onClick={() =>\r\n                    history.push(`/home/vendor-details/${allVendors.compId}/${'Vendor'}`)}\r\n                >Details</Button>\r\n              </Space>\r\n            ),\r\n          },\r\n    ];\r\n    const checkVendor = () => {\r\n        if (isVendor) {\r\n            return <TableDiv>\r\n                {/* <Table>\r\n                    <TableHead>\r\n                        <TableHeading>Company</TableHeading>\r\n                        <TableHeading>FirstName</TableHeading>\r\n                        <TableHeading>Phone</TableHeading>\r\n                        <TableHeading>City</TableHeading>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {allVendors &&\r\n                            allVendors.map((vendor, index) => {\r\n                                return (\r\n                                    <TableRow>\r\n                                        <TableData>[{vendor.companyName}]</TableData>\r\n                                        <TableData>[{vendor.ownerFirstName}]</TableData>\r\n                                        <TableData>[{vendor.phone}]</TableData>\r\n                                        <TableData>[{vendor.city}]</TableData>\r\n                                      \r\n                                        <TableData>\r\n                                            <button \r\n                                            onClick={() =>\r\n                                                history.push(`/home/vendor-details/${vendor.compId}/${'Vendor'}`)}\r\n                                            >\r\n                                                Details\r\n                                            </button>\r\n                                        </TableData>\r\n                                    </TableRow>\r\n                                );\r\n                            })}\r\n                    </TableBody>\r\n                </Table> */}\r\n                <Table dataSource={allVendors} columns={columns} />;\r\n            </TableDiv>\r\n        }\r\n        else if (!isVendor || isLoading) {\r\n            return <LoaderDiv><img src={loader} /></LoaderDiv>\r\n        }\r\n        return <EmptyDiv> <Empty /> </EmptyDiv>\r\n\r\n\r\n    }\r\n    useEffect(() => {\r\n        getAllVendors()\r\n    }, [])\r\n\r\n    console.log('All vendros', allVendors);\r\n    return (\r\n        <div>\r\n\r\n            {checkVendor()}\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default AllVendors","E:\\salman\\Sales-App\\src\\components\\UserProfile\\style\\index.js",[],"E:\\salman\\Sales-App\\src\\components\\AllCustomers\\allCustomers.js",[],"E:\\salman\\Sales-App\\src\\context\\UserContext\\UserReducer.js",["203"],"export default (state, action) => {\r\n    switch (action.type) {\r\n        default:\r\n            return state;\r\n    }\r\n}","E:\\salman\\Sales-App\\src\\components\\Details\\styles\\index.js",[],"E:\\salman\\Sales-App\\src\\components\\MediaQuery\\media.js",[],"E:\\salman\\Sales-App\\src\\components\\Textbox\\style\\index.js",[],"E:\\salman\\Sales-App\\src\\components\\AllCustomers\\style\\index.js",[],"E:\\salman\\Sales-App\\src\\components\\AllVendors\\style\\index.js",[],"E:\\salman\\Sales-App\\src\\components\\FormError\\style\\index.js",[],{"ruleId":"204","replacedBy":"205"},{"ruleId":"206","replacedBy":"207"},{"ruleId":"208","severity":1,"message":"209","line":6,"column":3,"nodeType":"210","messageId":"211","endLine":6,"endColumn":11},{"ruleId":"208","severity":1,"message":"212","line":7,"column":3,"nodeType":"210","messageId":"211","endLine":7,"endColumn":13},{"ruleId":"208","severity":1,"message":"213","line":24,"column":12,"nodeType":"210","messageId":"211","endLine":24,"endColumn":24},{"ruleId":"208","severity":1,"message":"214","line":24,"column":26,"nodeType":"210","messageId":"211","endLine":24,"endColumn":41},{"ruleId":"208","severity":1,"message":"215","line":14,"column":5,"nodeType":"210","messageId":"211","endLine":14,"endColumn":9},{"ruleId":"208","severity":1,"message":"216","line":22,"column":12,"nodeType":"210","messageId":"211","endLine":22,"endColumn":25},{"ruleId":"208","severity":1,"message":"217","line":23,"column":26,"nodeType":"210","messageId":"211","endLine":23,"endColumn":41},{"ruleId":"208","severity":1,"message":"218","line":36,"column":10,"nodeType":"210","messageId":"211","endLine":36,"endColumn":18},{"ruleId":"219","severity":1,"message":"220","line":65,"column":17,"nodeType":"221","endLine":65,"endColumn":42},{"ruleId":"219","severity":1,"message":"220","line":71,"column":17,"nodeType":"221","endLine":71,"endColumn":20},{"ruleId":"219","severity":1,"message":"220","line":76,"column":17,"nodeType":"221","endLine":76,"endColumn":39},{"ruleId":"219","severity":1,"message":"220","line":93,"column":29,"nodeType":"221","endLine":93,"endColumn":98},{"ruleId":"208","severity":1,"message":"222","line":2,"column":24,"nodeType":"210","messageId":"211","endLine":2,"endColumn":34},{"ruleId":"208","severity":1,"message":"223","line":7,"column":13,"nodeType":"210","messageId":"211","endLine":7,"endColumn":20},{"ruleId":"208","severity":1,"message":"224","line":7,"column":22,"nodeType":"210","messageId":"211","endLine":7,"endColumn":28},{"ruleId":"208","severity":1,"message":"225","line":8,"column":12,"nodeType":"210","messageId":"211","endLine":8,"endColumn":21},{"ruleId":"208","severity":1,"message":"226","line":8,"column":23,"nodeType":"210","messageId":"211","endLine":8,"endColumn":35},{"ruleId":"208","severity":1,"message":"227","line":1,"column":15,"nodeType":"210","messageId":"211","endLine":1,"endColumn":23},{"ruleId":"208","severity":1,"message":"228","line":1,"column":25,"nodeType":"210","messageId":"211","endLine":1,"endColumn":34},{"ruleId":"208","severity":1,"message":"229","line":14,"column":10,"nodeType":"210","messageId":"211","endLine":14,"endColumn":24},{"ruleId":"230","severity":1,"message":"231","line":37,"column":8,"nodeType":"232","endLine":37,"endColumn":10,"suggestions":"233"},{"ruleId":"234","severity":1,"message":"235","line":151,"column":32,"nodeType":"236","messageId":"237","endLine":151,"endColumn":33},{"ruleId":"230","severity":1,"message":"231","line":39,"column":8,"nodeType":"232","endLine":39,"endColumn":10,"suggestions":"238"},{"ruleId":"239","severity":1,"message":"240","line":7,"column":13,"nodeType":"241","messageId":"242","endLine":7,"endColumn":15},{"ruleId":"239","severity":1,"message":"240","line":7,"column":31,"nodeType":"241","messageId":"242","endLine":7,"endColumn":33},{"ruleId":"239","severity":1,"message":"240","line":7,"column":45,"nodeType":"241","messageId":"242","endLine":7,"endColumn":47},{"ruleId":"208","severity":1,"message":"243","line":19,"column":19,"nodeType":"210","messageId":"211","endLine":19,"endColumn":27},{"ruleId":"208","severity":1,"message":"244","line":2,"column":8,"nodeType":"210","messageId":"211","endLine":2,"endColumn":13},{"ruleId":"208","severity":1,"message":"245","line":52,"column":11,"nodeType":"210","messageId":"211","endLine":52,"endColumn":23},{"ruleId":"246","severity":1,"message":"247","line":132,"column":31,"nodeType":"221","endLine":132,"endColumn":51},{"ruleId":"248","severity":1,"message":"249","line":1,"column":1,"nodeType":"250","endLine":6,"endColumn":2},"no-native-reassign",["251"],"no-negated-in-lhs",["252"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'useHistory' is defined but never used.","'errorMessage' is assigned a value but never used.","'setErrorMessage' is assigned a value but never used.","'Span' is defined but never used.","'userFirstName' is assigned a value but never used.","'setUserLastName' is assigned a value but never used.","'userInfo' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'PageHeader' is defined but never used.","'Content' is assigned a value but never used.","'Footer' is assigned a value but never used.","'collapsed' is assigned a value but never used.","'setCollapsed' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'allVendorsName' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'Cname' and 'slug'. Either include them or remove the dependency array.","ArrayExpression",["253"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression",["254"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'dispatch' is assigned a value but never used.","'media' is defined but never used.","'updateVendor' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"255","fix":"256"},{"desc":"255","fix":"257"},"Update the dependencies array to be: [Cname, slug]",{"range":"258","text":"259"},{"range":"260","text":"259"},[1054,1056],"[Cname, slug]",[1113,1115]]