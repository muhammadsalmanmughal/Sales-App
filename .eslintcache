[{"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/index.js":"1","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/App.js":"2","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/reportWebVitals.js":"3","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/config/Route/index.js":"4","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Layout/layout.js":"5","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Signup/signup.js":"6","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Login/Login.js":"7","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Sidebar/sidebar.js":"8","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Header/header.js":"9","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Dashboard/dashboard.js":"10","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/config/Firebase/firebase.js":"11","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Signup/style/index.js":"12","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Login/style/index.js":"13","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/context/UserContext/UserContext.js":"14","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/config/Route/routes.js":"15","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/MediaQuery/media.js":"16","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/context/UserContext/UserReducer.js":"17","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Header/style/index.js":"18","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/Utils/utils.js":"19","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/UserProfile/userProfile.js":"20","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/UserProfile/style/index.js":"21","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Textbox/style/index.js":"22","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Vendor/index.js":"23","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Vendor/style/index.js":"24","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/FormError/formError.js":"25","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/FormError/style/index.js":"26","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/AllVendors/allVendors.js":"27","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/AllVendors/style/index.js":"28","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Cutomer/cutomer.js":"29","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Cutomer/validationSchema.js":"30","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Vendor/schema.js":"31","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/AllCustomers/allCustomers.js":"32","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/AllCustomers/style/index.js":"33","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/PurchaseRequisition/purchaseRequisition.js":"34","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/RFQ/rfq.js":"35","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/PurchaseOrder/purchaseOrder.js":"36"},{"size":500,"mtime":1613196501516,"results":"37","hashOfConfig":"38"},{"size":753,"mtime":1613198421316,"results":"39","hashOfConfig":"38"},{"size":362,"mtime":1613196501516,"results":"40","hashOfConfig":"38"},{"size":659,"mtime":1613196501500,"results":"41","hashOfConfig":"38"},{"size":1860,"mtime":1613892622040,"results":"42","hashOfConfig":"38"},{"size":3112,"mtime":1613225394688,"results":"43","hashOfConfig":"38"},{"size":2449,"mtime":1613224778068,"results":"44","hashOfConfig":"38"},{"size":1324,"mtime":1613196501488,"results":"45","hashOfConfig":"38"},{"size":3401,"mtime":1613696011812,"results":"46","hashOfConfig":"38"},{"size":269,"mtime":1613196501448,"results":"47","hashOfConfig":"38"},{"size":443,"mtime":1613207603188,"results":"48","hashOfConfig":"38"},{"size":2543,"mtime":1613224103600,"results":"49","hashOfConfig":"38"},{"size":2463,"mtime":1613196501480,"results":"50","hashOfConfig":"38"},{"size":783,"mtime":1613196501516,"results":"51","hashOfConfig":"38"},{"size":1213,"mtime":1613892745416,"results":"52","hashOfConfig":"38"},{"size":490,"mtime":1613196501484,"results":"53","hashOfConfig":"38"},{"size":113,"mtime":1613196501516,"results":"54","hashOfConfig":"38"},{"size":909,"mtime":1613275852144,"results":"55","hashOfConfig":"38"},{"size":4860,"mtime":1614009185128,"results":"56","hashOfConfig":"38"},{"size":435,"mtime":1613280527796,"results":"57","hashOfConfig":"38"},{"size":167,"mtime":1613280633076,"results":"58","hashOfConfig":"38"},{"size":212,"mtime":1613282260836,"results":"59","hashOfConfig":"38"},{"size":13255,"mtime":1613916527928,"results":"60","hashOfConfig":"38"},{"size":577,"mtime":1613843826611,"results":"61","hashOfConfig":"38"},{"size":214,"mtime":1613580190494,"results":"62","hashOfConfig":"38"},{"size":93,"mtime":1613843005107,"results":"63","hashOfConfig":"38"},{"size":3851,"mtime":1613917503104,"results":"64","hashOfConfig":"38"},{"size":691,"mtime":1613843933983,"results":"65","hashOfConfig":"38"},{"size":13812,"mtime":1613879761528,"results":"66","hashOfConfig":"38"},{"size":1232,"mtime":1613878059364,"results":"67","hashOfConfig":"38"},{"size":817,"mtime":1613878624005,"results":"68","hashOfConfig":"38"},{"size":3808,"mtime":1614010259832,"results":"69","hashOfConfig":"38"},{"size":691,"mtime":1613878829436,"results":"70","hashOfConfig":"38"},{"size":240,"mtime":1613882549952,"results":"71","hashOfConfig":"38"},{"size":0,"mtime":1613892251396,"results":"72","hashOfConfig":"38"},{"size":222,"mtime":1613892578372,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"9z2nfm",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"76"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"76"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"76"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"76"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"76"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"76"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"76"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"76"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"76"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"76"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"76"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/index.js",[],["158","159"],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/App.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/reportWebVitals.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/config/Route/index.js",["160","161"],"import React from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n  useHistory\n} from 'react-router-dom'\n\nimport Layout from '../../components/Layout/layout'\nimport Login from '../../components/Login/Login'\nimport Signup from '../../components/Signup/signup'\n\n// import './route.css'\nconst MainRouter = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\" exact component={Login} />\n        <Route path=\"/signup\" component={Signup} />\n        <Route path=\"/home\" component={Layout} />\n        {/* <Route render={() => <Redirect to=\"/home\" />} /> */}\n      </Switch>\n    </Router>\n  );\n}\nexport default MainRouter;\n","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Layout/layout.js",["162"],"import React from 'react'\nimport { BrowserRouter as Router, Switch, Route, useHistory } from \"react-router-dom\";\nimport { UserDataProvider } from '../../context/UserContext/UserContext'\nimport SideBar from '../Sidebar/sidebar'\nimport Header from '../Header/header'\nimport Dashboard from '../Dashboard/dashboard'\nimport Vendor from '../Vendor/index'\nimport UserProfile from '../UserProfile/userProfile'\nimport Customer from '../Cutomer/cutomer'\nimport PurchaseRequisition from '../PurchaseRequisition/purchaseRequisition'\nimport RFQ from '../RFQ/rfq'\nimport PurchaseOrder from '../PurchaseOrder/purchaseOrder'\n\nimport './layout.css'\n\nfunction Layout() {\n    const history = useHistory()\n    const token = localStorage.getItem('Authorization')\n    if (!token) {\n        history.replace('/')\n        return null\n    }\n    return (\n        <UserDataProvider>\n            <Header />\n            <div className='main'>\n                {/* <Router> */}\n                <div className='sidebar'>\n                    <SideBar />\n                </div>\n                <div className='content'>\n                    <Switch>\n                        <Route path=\"/home/dashboard\" component={Dashboard} />\n                        <Route path=\"/home/user-profile\" component={UserProfile} />\n                        <Route path=\"/home/vendor\" component={Vendor} />\n                        <Route path=\"/home/customer\" component={Customer} />\n                        <Route path=\"/home/purchase-requisition\" component={PurchaseRequisition}/>\n                        <Route path=\"/home/request-for-qutation\" component={RFQ}/>\n                        <Route path=\"/home/purchase-order\" component={PurchaseOrder}/>\n                    </Switch>\n                </div>\n                {/* </Router> */}\n\n            </div>\n        </UserDataProvider>\n    )\n}\nexport default Layout","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Signup/signup.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Login/Login.js",["163","164"],"import React, { useState } from 'react'\nimport { loginUser } from '../../Utils/utils';\nimport { useHistory } from \"react-router-dom\";\nimport 'antd/dist/antd.css';\nimport { message } from 'antd';\nimport {\n    LoginContainer,\n    LoginDiv,\n    LoginHeading,\n    LoginForm,\n    UserEmailTextbox,\n    PasswordTextbox,\n    PrimaryButton,\n    TextWelcome,\n    Paragraph,\n    BreakLine,\n    Link\n} from './style/index'\n\nexport default function Login() {\n    const history = useHistory();\n    const [email, setUserEmail] = useState();\n    const [password, setPassword] = useState();\n    const [errorMessage, setErrorMessage] = useState(false)\n\n    if (localStorage.getItem('Authorization')) {\n        history.replace('/home')\n        // return\n    }\n\n    const onLogin = () => {\n        if (!email || !password) {\n            message.error('Enter valid credentials')\n        } else {\n            loginUser(email, password)\n                .then((res) => {\n                    // let token = res.auth.\n                    let token = 'dummy_token'\n                    localStorage.setItem('Authorization', token)\n                    history.replace('/home')\n                });\n        }\n    }\n    return (\n        <div>\n            <LoginContainer>\n                <LoginDiv>\n                    <TextWelcome>\n                        Welcome\n                    </TextWelcome>\n                    <LoginHeading>\n                        Login to Sales-App\n                    </LoginHeading>\n                    <LoginForm>\n                        <UserEmailTextbox\n                            type='text'\n                            placeholder='Email'\n                            onChange={e => setUserEmail(e.target.value)}\n                        />\n                        <PasswordTextbox\n                            type='password'\n                            placeholder='Password'\n                            onChange={e => setPassword(e.target.value)}\n                        />\n                        <PrimaryButton onClick={onLogin}>Continue</PrimaryButton>\n                    </LoginForm>\n                    <BreakLine />\n                    <Paragraph>\n                        Don't have an account?\n                   <Link onClick={() => history.push(\"/signup\")}>\n                            SignUp\n                   </Link>\n                    </Paragraph>\n                </LoginDiv>\n            </LoginContainer>\n        </div>\n    )\n}","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Sidebar/sidebar.js",["165","166","167","168","169"],"import React, { useState } from 'react'\nimport { Layout, Menu, PageHeader } from 'antd';\n// import './sidebar.css'\nimport routes from '../../config/Route/routes'\nimport { Link } from 'react-router-dom';\nconst SideBar = () => {\n    const { Content, Footer, Sider } = Layout;\n    const [collapsed, setCollapsed] = useState()\n    // const onCollapse = collapsed => {\n    //     console.log(collapsed);\n    //     setCollapsed(collapsed)\n    // };\n\n    return (\n        <Layout style={{ minHeight: '100vh' }}>\n            <Sider\n                breakpoint=\"lg\"\n                collapsedWidth=\"0\"\n                onBreakpoint={broken => {\n                    console.log(broken);\n                }}\n                onCollapse={(collapsed, type) => {\n                    console.log(collapsed, type);\n                }}\n            >\n                <div className=\"logo\" />\n                <Menu theme=\"dark\" mode=\"inline\" >\n                    {\n                        routes.map((link, index) => {\n                            return <Menu.Item key={index} >\n                                <Link to={`/home${link.path}`}>{link.name}</Link>\n                            </Menu.Item>\n                        })\n                    }\n\n\n                </Menu>\n            </Sider>\n        </Layout>\n\n    )\n}\nexport default SideBar","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Header/header.js",["170","171","172","173","174","175","176","177"],"import React, { useState } from 'react'\nimport firebase from '../../config/Firebase/firebase'\nimport { useHistory } from 'react-router-dom'\nimport { getUserData } from '../../Utils/utils'\nimport {\n    Navbar,\n    Logo,\n    User,\n    UserName,\n    UserAvatar,\n    DropdownDiv,\n    UsersFirstName,\n    UsersEmail,\n    Span\n} from './style/index'\nimport { Avatar, Menu, Dropdown, Divider } from 'antd';\nimport { UserOutlined, LogoutOutlined, } from \"@ant-design/icons\";\nimport 'antd/dist/antd.css';\n\n\nconst Header = () => {\n    const [userFirstName, setUserFirstName] = useState('')\n    const [userLastName, setUserLastName] = useState('')\n    const [userEmail, setUserEmail] = useState('')\n    const [userImage, setUserImage] = useState(null)\n    const history = useHistory();\n    const onLogout = () => {\n        firebase.auth().signOut()\n            .then(() => {\n                localStorage.removeItem('Authorization')\n                localStorage.removeItem('userId')\n                history.replace('/')\n            })\n    }\n    \n   const userInfo = getUserData().then((data)=>{\n    //    console.log('user data ===========> $',data[0].name);\n       setUserFirstName(data[0].name)\n       setUserEmail(data[0].email)\n      setUserImage(data[0].url)\n    //    console.log('user data ===========> $',data[0].email);\n    //    console.log('user data ===========> $',data[0].name);\n   });\n   \n//    console.log('User data form header', userInfo)\n    const showProfile = () => {\n        // console.log('userData funtion', getUserData())\n        history.replace('/home/user-profile')\n    }\n   \n    const menu = (\n        <Menu>\n\n            <DropdownDiv>\n                <Avatar\n                    src={userImage}\n                    size={64}\n                    icon={!userImage ? <UserOutlined /> : ''}\n                />\n                <UsersFirstName>Hello {userLastName ? userLastName : 'User'}</UsersFirstName>\n                <UsersEmail>{userEmail}</UsersEmail>\n                <Divider />\n            </DropdownDiv>\n            <Menu.Item>\n                <a onClick={showProfile}>\n                    <UserOutlined />\n                    Profile\n            </a>\n            </Menu.Item>\n            <Menu.Item>\n                <a>\n                    3rd menu item\n            </a>\n            </Menu.Item>\n            <Menu.Item>\n                <a onClick={onLogout}>\n\n                    <LogoutOutlined />\n                Logout\n                </a>\n            </Menu.Item>\n        </Menu>\n    );\n    return (\n        <div>\n            <Navbar>\n                <Logo src='https://1000logos.net/wp-content/uploads/2017/08/CAT-logo.png' />\n                {/* <h5>Logo</h5> */}\n                <User>\n                    <UserName>User First Name</UserName>\n                    <UserAvatar>\n                        <Dropdown overlay={menu}>\n                            <a className=\"ant-dropdown-link\" onClick={(e) => e.preventDefault()}>\n                                <Avatar\n                                    src={userImage}\n                                    size='large'\n                                    icon={!userImage ? <UserOutlined /> : ''}\n                                />\n                            </a>\n                        </Dropdown>\n                    </UserAvatar>\n                </User>\n            </Navbar>\n        </div>\n    )\n}\nexport default Header\n","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Dashboard/dashboard.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/config/Firebase/firebase.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Signup/style/index.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Login/style/index.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/context/UserContext/UserContext.js",["178"],"import React, { createContext, useReducer } from 'react'\nimport UserReducer from './UserReducer'\n//Initial State\nconst UserInitialState = {\n    userData: {\n        firstname: 'Muhammad',\n        lastname: 'Salman',\n        email: 'muhammadsalman0403@gmail.com',\n        id: '123456789abcdefgh',\n        url: 'https://static.topyaps.com/wp-content/uploads/2018/11/hera-pheri.jpeg'\n    }\n}\n\n//Create Context\nexport const UserDataContext = createContext(UserInitialState)\n\n//Create Provider\nexport const UserDataProvider = ({ children }) => {\n    const [state, dispatch] = useReducer(UserReducer, UserInitialState)\n    return (\n        <UserDataContext.Provider value={{\n            userData: state.userData\n        }}>\n            {children}\n        </UserDataContext.Provider>\n    )\n}","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/config/Route/routes.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/MediaQuery/media.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/context/UserContext/UserReducer.js",["179"],"export default (state, action) => {\n    switch (action.type) {\n        default:\n            return state;\n    }\n}","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Header/style/index.js",["180"],"import styled from 'styled-components'\nimport media from '../../MediaQuery/media'\n\nexport const Navbar = styled.div`\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\nheight: 50px;\nborder-bottom: 1px solid gray;\nbox-shadow: 5px 2px 15px #888888;\n`\nexport const Logo = styled.img`\nwidth:50px;\nheight: 50px;\nmargin-left: 10px;\n// justify-content: flex-start;\n`\nexport const User = styled.div`\ndisplay: flex;\nalign-items: center;\n`\nexport const UserName = styled.div`\nmargin-right: 10px;\n`\nexport const UserAvatar = styled.div`\nmargin-right: 10px;\n`\nexport const DropdownDiv = styled.div`\ntext-align: center;\njustify-content: center;\nalign-items: center;\nmargin-top: 10px;\nwidth:250px;\noverflow: hidden;\npadding:12px;\n`\nexport const UsersFirstName = styled.h4`\nmargin-top:15px;\nword-spacing:1px;\n`\nexport const UsersEmail = styled.p`\n\n`\nexport const Span = styled.span`\nmargin-right: 10px;\n`\n\n\n","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/Utils/utils.js",["181","182","183"],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/UserProfile/userProfile.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/UserProfile/style/index.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Textbox/style/index.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Vendor/index.js",["184"],"import React, { useState, useEffect } from 'react'\nimport { useFormik } from 'formik'\nimport { v4 as uuidv4 } from 'uuid';\nimport { validationSchema } from './schema'\nimport { createVendor, updateVendor } from '../../Utils/utils'\nimport { Label } from '../Textbox/style/index'\nimport { VendorMainDiv, FormDiv, VendorIdDiv, VendorIdSpan } from './style/index'\nimport ErrorText from '../FormError/formError'\nimport AllVendors from '../AllVendors/allVendors';\nimport {\n    Divider,\n    Tabs,\n    Row,\n    Col,\n    // Form,\n    Input,\n    Tooltip,\n    Button\n} from 'antd';\nconst initialValues = {\n    companyName: '',\n    ownerFirstName: '',\n    ownerLastName: '',\n    address: '',\n    phone: '',\n    email: '',\n    // country: '',\n    city: '',\n    postalCode: ''\n}\n// const validate = values => {\n//     const errors = {}\n//     if (!values.companyName) {\n//         errors.companyName = 'Field Required'\n//     }\n//     else if (values.companyName.length < 4) {\n//         errors.companyName = 'Company name is too short'\n//     }\n//     if (!values.ownerFirstName || values.ownerFirstName < 5) {\n//         errors.ownerFirstName = 'Invalid Name'\n//     }\n//     if (!values.ownerLastName || values.ownerLastName < 5) {\n//         errors.ownerLastName = 'Invalid Name'\n//     }\n//     if (!values.address) {\n//         errors.address = 'Field Required'\n//     }\n//     else if(values.address. length < 15){\n//         errors.address = 'Enter valid address'\n//     }\n//     if (!values.phone) {\n//         errors.phone = 'Field Required'\n//     }\n//     else if(values.phone.length < 11){\n//         errors.phone = 'Invalid phone number'\n//     }\n//     if (!values.email) {\n//         errors.email = 'Field Required'\n//     }\n//     else if (/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(values.email)) {\n//         errors.email = 'Invalid email format'\n//     }\n//     // if(!values.country){\n//     //     errors.country = 'Required'\n//     // }else if(values.country  )\n//     if (!values.city) {\n//         errors.city = 'Field Required'\n//     }\n//     else if (values.city.length < 7 || values.city.length > 15) {\n//         errors.city = 'Invalid city name'\n//     }\n//     if (!values.postalCode || values.postalCode.length < 5) {\n//         errors.postalCode = 'Enter valid postal code'\n//     }\n//     return errors\n// }\nconst Vendor = () => {\n\n    const [vendorId, setVendorId] = useState('')\n\n    const venId = () => {\n        setVendorId(uuidv4())\n    }\n    const onSubmit = (values,onSubmitProps) => {\n        // console.log('values from function', values);\n        // console.log('postal code====>', values.companyName);\n        createVendor(values, vendorId)\n        onSubmitProps.resetForm()\n    }\n    useEffect(() => {\n        venId()\n        updateVendor()\n    }, [])\n\n    const formik = useFormik({\n        initialValues,\n        onSubmit,\n        validationSchema\n    })\n\n\n    const { TabPane } = Tabs;\n    function callback(key) {\n        console.log(key);\n    }\n    // console.log('Formik visited fiedls', formik.touched);\n    return (\n        <div>\n            <h1>Vendor</h1>\n            <Divider />\n            <Tabs defaultActiveKey=\"1\" onChange={callback}>\n                <TabPane tab=\"Create Vendor\" key=\"1\">\n                    <VendorMainDiv>\n                        <form\n                            onSubmit={formik.handleSubmit}\n                        >\n                            <FormDiv>\n                                <VendorIdDiv >\n                                    <Label>\n                                        <Tooltip placement=\"topLeft\" title='Generate automatically for new vendor'>\n                                            <VendorIdSpan>Vendor ID:</VendorIdSpan>\n                                            {vendorId}\n                                        </Tooltip>\n                                    </Label>\n                                </VendorIdDiv>\n                                <Row gutter={[10, 10]}>\n                                    <Col xs={24} sm={8}>\n                                        <Label>\n                                            Company Name:\n                                <Input\n                                                type='text'\n                                                name='companyName'\n                                                // value={formik.values.companyName}\n                                                // onBlur={formik.handleBlur}\n                                                // onChange={formik.handleChange}\n                                                {...formik.getFieldProps('companyName')}\n                                            />\n                                        </Label>\n                                        {formik.touched.companyName && formik.errors.companyName\n                                            ? <ErrorText text={formik.errors.companyName} />\n                                            : null}\n                                    </Col>\n                                    <Col xs={24} sm={8}>\n                                        <Label>\n                                            Owner First Name:\n                                <Input\n                                                type='text'\n                                                name='ownerFirstName'\n                                                // value={formik.values.ownerFirstName}\n                                                // onBlur={formik.handleBlur}\n                                                // onChange={formik.handleChange}\n                                                {...formik.getFieldProps('ownerFirstName')}\n                                            />\n                                        </Label>\n                                        {formik.touched.ownerFirstName && formik.errors.ownerFirstName\n                                            ? <ErrorText text={formik.errors.ownerFirstName} />\n                                            : null}\n                                    </Col>\n                                    <Col xs={24} sm={8}>\n                                        <Label>Owner Last Name:\n                                    <Input\n                                                type='text'\n                                                name='ownerLastName'\n                                                // value={formik.values.ownerLastName}\n                                                // onBlur={formik.handleBlur}\n                                                // onChange={formik.handleChange}\n                                                {...formik.getFieldProps('ownerLastName')}\n\n                                            />\n                                        </Label>\n                                        {formik.touched.ownerLastName && formik.errors.ownerLastName\n                                            ? <ErrorText text={formik.errors.ownerLastName} />\n                                            : null}\n                                    </Col>\n                                    <Col xs={24} sm={24}>\n                                        <Label>Address:\n                                    <Input\n                                                type='text'\n                                                name='address'\n                                                // value={formik.values.address}\n                                                // onBlur={formik.handleBlur}\n                                                // onChange={formik.handleChange}\n                                                {...formik.getFieldProps('address')}\n                                            />\n                                        </Label>\n                                        {formik.touched.address && formik.errors.address\n                                            ? <ErrorText text={formik.errors.address} />\n                                            : null}\n                                    </Col>\n                                    <Col xs={24} sm={6}>\n                                        <Label>Phone#:\n                                    <Input\n                                                type='number'\n                                                name='phone'\n                                                // value={formik.values.phone}\n                                                // onBlur={formik.handleBlur}\n                                                // onChange={formik.handleChange}\n                                                {...formik.getFieldProps('phone')}\n                                            // max={11}\n                                            />\n                                        </Label>\n                                        {formik.touched.phone && formik.errors.phone\n                                            ? <ErrorText text={formik.errors.phone} />\n                                            : null}\n                                    </Col>\n                                    <Col xs={24} sm={6}>\n                                        <Label>Email:\n                                    <Input\n                                                type='email'\n                                                name='email'\n                                                // value={formik.values.email}\n                                                // onBlur={formik.handleBlur}\n                                                // onChange={formik.handleChange}\n                                                {...formik.getFieldProps('email')}\n                                            />\n                                        </Label>\n                                        {formik.touched.email && formik.errors.email\n                                            ? <ErrorText text={formik.errors.email} />\n                                            : null}\n                                    </Col>\n                                    {/* <Col xs={24} sm={6}>\n                                        <Label>Coutnry:\n                                    <Input\n                                                type='text'\n                                                name='country'\n                                                value={formik.values.country}\n                                                onChange={formik.handleChange}\n                                            />\n                                        </Label>\n                                    </Col> */}\n                                    <Col xs={24} sm={6}>\n                                        <Label>City:\n                                    <Input\n                                                type='text'\n                                                name='city'\n                                                // value={formik.values.city}\n                                                // onBlur={formik.handleBlur}\n                                                // onChange={formik.handleChange}\n                                                {...formik.getFieldProps('city')}\n                                            />\n                                        </Label>\n                                        {formik.touched.city && formik.errors.city\n                                            ? <ErrorText text={formik.errors.city} />\n                                            : null}\n                                    </Col>\n                                    <Col xs={24} sm={6}>\n                                        <Label>Postl Code:\n                                    <Input\n                                                type='number'\n                                                name='postalCode'\n                                                // value={formik.values.postalCode}\n                                                // onBlur={formik.handleBlur}\n                                                // onChange={formik.handleChange}\n                                                {...formik.getFieldProps('postalCode')}\n                                            />\n                                        </Label>\n                                        {formik.touched.postalCode && formik.errors.postalCode\n                                            ? <ErrorText text={formik.errors.postalCode} />\n                                            : null}\n                                    </Col>\n\n                                    {/* <Col style={style} span={8}>col-10</Col> */}\n                                </Row>\n                                <Col xs={24} sm={16}>\n                                    <button type='submit' disabled={!formik.isValid}>Submit</button>\n                                </Col>\n                            </FormDiv>\n                        </form>\n                    </VendorMainDiv>\n                </TabPane>\n                <TabPane tab=\"All Vendors\" key=\"2\">\n                    <AllVendors />\n\n                </TabPane>\n\n            </Tabs>\n        </div >\n    )\n}\nexport default Vendor","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Vendor/style/index.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/FormError/formError.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/FormError/style/index.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/AllVendors/allVendors.js",["185"],"import React, { useState, useEffect } from 'react'\nimport firebase from '../../config/Firebase/firebase';\nimport { EmptyDiv } from './style/index'\nimport { Empty } from 'antd';\nimport loader from '../../assets/loader.gif'\nimport {\n    TableDiv,\n    Table,\n    TableRow,\n    TableData,\n    TableHeading,\n    TableHead,\n    TableBody,\n    LoaderDiv\n} from './style/index'\n\n\nconst AllVendors = () => {\n    const [allVendors, setAllVendors] = useState()\n    const [isVendor, setIsVendor] = useState(false)\n    const [isLoading, setIsLoading]= useState(false)\n    const getAllVendors = () => {\n        setIsLoading(true)\n        firebase\n            .firestore()\n            .collection(\"Vendor\")\n            .onSnapshot(function (querySnapshot) {\n                const vendorList = [];\n                querySnapshot.forEach(function (doc) {\n                    console.log('functions Doc', doc.data)\n                    if (doc.exists) {\n                        const comp = doc.data();\n                        vendorList.push({ ...comp, compId: doc.id });\n                        setIsVendor(true)\n                    } else {\n                        // alert(\"No such document!\");\n                        // <EmptyDiv>\n                        //     <Empty/>\n                        // </EmptyDiv>\n                        setIsVendor(false)\n                    }\n                });\n                setAllVendors(vendorList);\n                setIsLoading(false)\n                // setIsVendor(true)\n            });\n    }\n\n    const updateVendor = (e) => {\n        console.log('update E', e)\n    }\n    const checkVendor = () => {\n        if (isVendor) {\n            return <TableDiv>\n                <Table>\n                    <TableHead>\n                        <TableHeading>Company</TableHeading>\n                        <TableHeading>FirstName</TableHeading>\n                        <TableHeading>LastName</TableHeading>\n                        <TableHeading>Email</TableHeading>\n                        <TableHeading>Phone</TableHeading>\n                        <TableHeading>City</TableHeading>\n                        <TableHeading>Address</TableHeading>\n                        <TableHeading>PostalCode</TableHeading>\n                    </TableHead>\n                    <TableBody>\n                        {allVendors &&\n                            allVendors.map((vendor, index) => {\n                                return (\n                                    <TableRow>\n                                        <TableData>[{vendor.companyName}]</TableData>\n                                        <TableData>[{vendor.ownerFirstName}]</TableData>\n                                        <TableData>[{vendor.ownerLastName}]</TableData>\n                                        <TableData>[{vendor.email}]</TableData>\n                                        <TableData>[{vendor.phone}]</TableData>\n                                        <TableData>[{vendor.city}]</TableData>\n                                        <TableData>[{vendor.address}]</TableData>\n                                        <TableData>[{vendor.postalCode}]</TableData>\n                                        <TableData><button onClick={() => updateVendor(vendor)}>Update</button></TableData>\n                                    </TableRow>\n                                );\n                            })}\n                    </TableBody>\n                </Table>\n            </TableDiv>\n        }\n        else if(!isVendor || isLoading){\n            return <LoaderDiv><img src={loader}/></LoaderDiv>\n        }\n        return <EmptyDiv> <Empty/> </EmptyDiv>\n        \n\n    }\n    useEffect(() => {\n        getAllVendors()\n    }, [])\n\n    console.log('All vendros', allVendors);\n    return (\n        <div>\n\n{checkVendor()}\n\n        </div>\n    )\n}\nexport default AllVendors","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/AllVendors/style/index.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Cutomer/cutomer.js",["186","187"],"import React, { useState, useEffect } from 'react'\nimport { useFormik } from 'formik'\nimport { v4 as uuidv4 } from 'uuid';\nimport { Label } from '../Textbox/style/index'\nimport { validationSchema } from './validationSchema'\nimport {createNewCustomer} from '../../Utils/utils'\nimport ErrorText from '../FormError/formError'\nimport AllCustomers from '../AllCustomers/allCustomers';\nimport { VendorMainDiv, FormDiv, VendorIdDiv, VendorIdSpan, EmptyDiv } from '../Vendor/style/index'\nimport {\n    Divider,\n    Tabs,\n    Row,\n    Col,\n    Input,\n    Tooltip,\n    Button\n} from 'antd';\n\nconst { TabPane } = Tabs;\n\n\nconst CreateCustomer = () => {\n\n    const [customerId, setCustomerId] = useState('')\n\n    const cusId = () => {\n        setCustomerId(uuidv4())\n    }\n\n    useEffect(() => {\n        cusId()\n    }, [])\n\n    \nconst onSubmit = (values, onSubmitProps) => {\n    // console.log('values from function', values);\n    // console.log('postal code====>', values.companyName);\n    // console.log('vendor id from cubmit function', vendorId);\n    createNewCustomer(values, customerId)\n    onSubmitProps.resetForm()\n}\n\n    const initialValues = {\n        businessName: '',\n        billToAddress: '',\n        city: '',\n        state: '',\n        postalCode: '',\n        phone: '',\n        email: '',\n        responsibleName: '',\n        responsiblePhone: '',\n        secondaryPhone: ''\n    }\n    const formik = useFormik({\n        initialValues,\n        onSubmit,\n        validationSchema,\n        cusId\n    })\n\n    function callback(key) {\n        console.log(key);\n    }\n    console.log('Formik ', formik);\n\n    return (\n        <div>\n            <h1>Customer</h1>\n            <Divider />\n            <Tabs defaultActiveKey=\"1\" onChange={callback}>\n\n                <TabPane tab=\"Create Customer\" key=\"1\">\n                    <VendorMainDiv>\n                        {/* <button onClick={venId}>Vendor id</button> */}\n                        <form\n                            onSubmit={formik.handleSubmit}\n                        >\n                            <FormDiv>\n                                <VendorIdDiv >\n                                    <Label>\n                                    <Tooltip placement=\"topLeft\" title='Generate automatically for new customer'>\n                                        <VendorIdSpan>Customer ID:</VendorIdSpan>\n                                        {customerId}\n                                    </Tooltip>\n                                    </Label>\n                                </VendorIdDiv>\n                                <Row gutter={[10, 10]}>\n                                    <Col xs={24} sm={24}>\n                                        <Label>\n                                            Business Name:\n                                         <Input\n                                                type='text'\n                                                name='businessName'\n                                                // value={formik.values.companyName}\n                                                // onBlur={formik.handleBlur}\n                                                // onChange={formik.handleChange}\n                                                {...formik.getFieldProps('businessName')}\n                                            />\n                                        </Label>\n                                        {formik.touched.businessName && formik.errors.businessName\n                                            ? <ErrorText text={formik.errors.businessName} />\n                                            : null}\n                                    </Col>\n                                    <Col xs={24} sm={24}>\n                                        <Label>\n                                            Bill To Address:\n                                <Input\n                                                type='text'\n                                                name='billToAddress'\n                                                // value={formik.values.billToAddress}\n                                                // onBlur={formik.handleBlur}\n                                                // onChange={formik.handleChange}\n                                                {...formik.getFieldProps('billToAddress')}\n                                            />\n                                        </Label>\n                                        {formik.touched.billToAddress && formik.errors.billToAddress\n                                            ? <ErrorText text={formik.errors.billToAddress} />\n                                            : null}\n                                    </Col>\n                                    <Col xs={24} sm={8}>\n                                        <Label>City:\n                                    <Input\n                                                type='text'\n                                                name='city'\n                                                // value={formik.values.city}\n                                                // onBlur={formik.handleBlur}\n                                                // onChange={formik.handleChange}\n                                                {...formik.getFieldProps('city')}\n\n                                            />\n                                        </Label>\n                                        {formik.touched.city && formik.errors.city\n                                            ? <ErrorText text={formik.errors.city} />\n                                            : null}\n                                    </Col>\n                                    <Col xs={24} sm={8}>\n                                        <Label>State:\n                                    <Input\n                                                type='text'\n                                                name='state'\n                                                // value={formik.values.state}\n                                                // onBlur={formik.handleBlur}\n                                                // onChange={formik.handleChange}\n                                                {...formik.getFieldProps('state')}\n                                            />\n                                        </Label>\n                                        {formik.touched.state && formik.errors.state\n                                            ? <ErrorText text={formik.errors.state} />\n                                            : null}\n                                    </Col>\n                                    <Col xs={24} sm={8}>\n                                        <Label>Postl Code:\n                                    <Input\n                                                type='number'\n                                                name='postalCode'\n                                                // value={formik.values.postalCode}\n                                                // onBlur={formik.handleBlur}\n                                                // onChange={formik.handleChange}\n                                                {...formik.getFieldProps('postalCode')}\n                                            />\n                                        </Label>\n                                        {formik.touched.postalCode && formik.errors.postalCode\n                                            ? <ErrorText text={formik.errors.postalCode} />\n                                            : null}\n                                    </Col>\n                                    <Col xs={24} sm={8}>\n                                        <Label>Phone#:\n                                    <Input\n                                                type='number'\n                                                name='phone'\n                                                // value={formik.values.phone}\n                                                // onBlur={formik.handleBlur}\n                                                // onChange={formik.handleChange}\n                                                {...formik.getFieldProps('phone')}\n                                            // max={11}\n                                            />\n                                        </Label>\n                                        {formik.touched.phone && formik.errors.phone\n                                            ? <ErrorText text={formik.errors.phone} />\n                                            : null}\n                                    </Col>\n                                    <Col xs={24} sm={16}>\n                                        <Label>Email:\n                                    <Input\n                                                type='email'\n                                                name='email'\n                                                // value={formik.values.email}\n                                                // onBlur={formik.handleBlur}\n                                                // onChange={formik.handleChange}\n                                                {...formik.getFieldProps('email')}\n                                            />\n                                        </Label>\n                                        {formik.touched.email && formik.errors.email\n                                            ? <ErrorText text={formik.errors.email} />\n                                            : null}\n                                    </Col>\n                                    <Col xs={24} sm={6}>\n                                        <Label>Responsible Name:\n                                    <Input\n                                                type='text'\n                                                name='responsibleName'\n                                                value={formik.values.responsibleName}\n                                                onChange={formik.handleChange}\n                                            />\n                                        </Label>\n                                        {formik.touched.responsibleName && formik.errors.responsibleName\n                                            ? <ErrorText text={formik.errors.responsibleName} />\n                                            : null}\n                                    </Col>\n                                    <Col xs={24} sm={6}>\n                                        <Label>Responsible Phone:\n                                    <Input\n                                                type='text'\n                                                name='responsiblePhone'\n                                                value={formik.values.responsiblePhone}\n                                                onChange={formik.handleChange}\n                                            />\n                                        </Label>\n                                        {formik.touched.responsiblePhone && formik.errors.responsiblePhone\n                                            ? <ErrorText text={formik.errors.responsiblePhone} />\n                                            : null}\n                                    </Col>\n                                    <Col xs={24} sm={6}>\n                                        <Label>Secondary Phone:\n                                    <Input\n                                                type='text'\n                                                name='secondaryPhone'\n                                                value={formik.values.secondaryPhone}\n                                                onChange={formik.handleChange}\n                                            />\n                                        </Label>\n                                        {formik.touched.secondaryPhone && formik.errors.secondaryPhone\n                                            ? <ErrorText text={formik.errors.secondaryPhone} />\n                                            : null}\n                                    </Col>\n\n                                    <Col xs={24} sm={6}>\n                                        <Label>City:\n                                    <Input\n                                                type='text'\n                                                name='city'\n                                                // value={formik.values.city}\n                                                // onBlur={formik.handleBlur}\n                                                // onChange={formik.handleChange}\n                                                {...formik.getFieldProps('city')}\n                                            />\n                                        </Label>\n                                        {formik.touched.city && formik.errors.city\n                                            ? <ErrorText text={formik.errors.city} />\n                                            : null}\n                                    </Col>\n                                   \n\n                                    {/* <Col style={style} span={8}>col-10</Col> */}\n                                </Row>\n                                <Col xs={24} sm={16}>\n                                    <button type='submit' disabled={!formik.isValid}>Create Customer</button>\n                                </Col>\n                            </FormDiv>\n                        </form>\n                    </VendorMainDiv>\n\n                </TabPane>\n\n                <TabPane tab=\"All Customer\" key=\"2\">\n                  <AllCustomers/>\n             </TabPane>\n\n            </Tabs>\n        </div>\n    )\n}\nexport default CreateCustomer","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Cutomer/validationSchema.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Vendor/schema.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/AllCustomers/allCustomers.js",["188","189"],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/AllCustomers/style/index.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/PurchaseRequisition/purchaseRequisition.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/RFQ/rfq.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/PurchaseOrder/purchaseOrder.js",[],{"ruleId":"190","replacedBy":"191"},{"ruleId":"192","replacedBy":"193"},{"ruleId":"194","severity":1,"message":"195","line":6,"column":3,"nodeType":"196","messageId":"197","endLine":6,"endColumn":11},{"ruleId":"194","severity":1,"message":"198","line":7,"column":3,"nodeType":"196","messageId":"197","endLine":7,"endColumn":13},{"ruleId":"194","severity":1,"message":"199","line":2,"column":27,"nodeType":"196","messageId":"197","endLine":2,"endColumn":33},{"ruleId":"194","severity":1,"message":"200","line":24,"column":12,"nodeType":"196","messageId":"197","endLine":24,"endColumn":24},{"ruleId":"194","severity":1,"message":"201","line":24,"column":26,"nodeType":"196","messageId":"197","endLine":24,"endColumn":41},{"ruleId":"194","severity":1,"message":"202","line":2,"column":24,"nodeType":"196","messageId":"197","endLine":2,"endColumn":34},{"ruleId":"194","severity":1,"message":"203","line":7,"column":13,"nodeType":"196","messageId":"197","endLine":7,"endColumn":20},{"ruleId":"194","severity":1,"message":"204","line":7,"column":22,"nodeType":"196","messageId":"197","endLine":7,"endColumn":28},{"ruleId":"194","severity":1,"message":"205","line":8,"column":12,"nodeType":"196","messageId":"197","endLine":8,"endColumn":21},{"ruleId":"194","severity":1,"message":"206","line":8,"column":23,"nodeType":"196","messageId":"197","endLine":8,"endColumn":35},{"ruleId":"194","severity":1,"message":"207","line":14,"column":5,"nodeType":"196","messageId":"197","endLine":14,"endColumn":9},{"ruleId":"194","severity":1,"message":"208","line":22,"column":12,"nodeType":"196","messageId":"197","endLine":22,"endColumn":25},{"ruleId":"194","severity":1,"message":"209","line":23,"column":26,"nodeType":"196","messageId":"197","endLine":23,"endColumn":41},{"ruleId":"194","severity":1,"message":"210","line":36,"column":10,"nodeType":"196","messageId":"197","endLine":36,"endColumn":18},{"ruleId":"211","severity":1,"message":"212","line":65,"column":17,"nodeType":"213","endLine":65,"endColumn":42},{"ruleId":"211","severity":1,"message":"212","line":71,"column":17,"nodeType":"213","endLine":71,"endColumn":20},{"ruleId":"211","severity":1,"message":"212","line":76,"column":17,"nodeType":"213","endLine":76,"endColumn":39},{"ruleId":"211","severity":1,"message":"212","line":93,"column":29,"nodeType":"213","endLine":93,"endColumn":98},{"ruleId":"194","severity":1,"message":"214","line":19,"column":19,"nodeType":"196","messageId":"197","endLine":19,"endColumn":27},{"ruleId":"215","severity":1,"message":"216","line":1,"column":1,"nodeType":"217","endLine":6,"endColumn":2},{"ruleId":"194","severity":1,"message":"218","line":2,"column":8,"nodeType":"196","messageId":"197","endLine":2,"endColumn":13},{"ruleId":"219","severity":1,"message":"220","line":7,"column":13,"nodeType":"221","messageId":"222","endLine":7,"endColumn":15},{"ruleId":"219","severity":1,"message":"220","line":7,"column":31,"nodeType":"221","messageId":"222","endLine":7,"endColumn":33},{"ruleId":"219","severity":1,"message":"220","line":7,"column":45,"nodeType":"221","messageId":"222","endLine":7,"endColumn":47},{"ruleId":"194","severity":1,"message":"223","line":18,"column":5,"nodeType":"196","messageId":"197","endLine":18,"endColumn":11},{"ruleId":"224","severity":1,"message":"225","line":88,"column":31,"nodeType":"213","endLine":88,"endColumn":50},{"ruleId":"194","severity":1,"message":"226","line":9,"column":61,"nodeType":"196","messageId":"197","endLine":9,"endColumn":69},{"ruleId":"194","severity":1,"message":"223","line":17,"column":5,"nodeType":"196","messageId":"197","endLine":17,"endColumn":11},{"ruleId":"194","severity":1,"message":"227","line":5,"column":8,"nodeType":"196","messageId":"197","endLine":5,"endColumn":14},{"ruleId":"194","severity":1,"message":"228","line":14,"column":5,"nodeType":"196","messageId":"197","endLine":14,"endColumn":14},"no-native-reassign",["229"],"no-negated-in-lhs",["230"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'useHistory' is defined but never used.","'Router' is defined but never used.","'errorMessage' is assigned a value but never used.","'setErrorMessage' is assigned a value but never used.","'PageHeader' is defined but never used.","'Content' is assigned a value but never used.","'Footer' is assigned a value but never used.","'collapsed' is assigned a value but never used.","'setCollapsed' is assigned a value but never used.","'Span' is defined but never used.","'userFirstName' is assigned a value but never used.","'setUserLastName' is assigned a value but never used.","'userInfo' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'dispatch' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'media' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Button' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'EmptyDiv' is defined but never used.","'loader' is defined but never used.","'LoaderDiv' is defined but never used.","no-global-assign","no-unsafe-negation"]