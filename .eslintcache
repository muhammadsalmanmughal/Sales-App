[{"E:\\salman\\Sales-App\\src\\index.js":"1","E:\\salman\\Sales-App\\src\\reportWebVitals.js":"2","E:\\salman\\Sales-App\\src\\App.js":"3","E:\\salman\\Sales-App\\src\\config\\Route\\index.js":"4","E:\\salman\\Sales-App\\src\\components\\Signup\\signup.js":"5","E:\\salman\\Sales-App\\src\\components\\Login\\Login.js":"6","E:\\salman\\Sales-App\\src\\components\\Layout\\layout.js":"7","E:\\salman\\Sales-App\\src\\components\\Signup\\style\\index.js":"8","E:\\salman\\Sales-App\\src\\components\\Login\\style\\index.js":"9","E:\\salman\\Sales-App\\src\\Utils\\utils.js":"10","E:\\salman\\Sales-App\\src\\components\\PurchaseOrder\\purchaseOrder.js":"11","E:\\salman\\Sales-App\\src\\components\\Sidebar\\sidebar.js":"12","E:\\salman\\Sales-App\\src\\components\\Details\\customerDetails.js":"13","E:\\salman\\Sales-App\\src\\components\\Header\\header.js":"14","E:\\salman\\Sales-App\\src\\components\\UserProfile\\userProfile.js":"15","E:\\salman\\Sales-App\\src\\components\\Cutomer\\cutomer.js":"16","E:\\salman\\Sales-App\\src\\components\\Cutomer\\updateCustomer.js":"17","E:\\salman\\Sales-App\\src\\components\\Dashboard\\dashboard.js":"18","E:\\salman\\Sales-App\\src\\components\\Vendor\\index.js":"19","E:\\salman\\Sales-App\\src\\context\\UserContext\\UserContext.js":"20","E:\\salman\\Sales-App\\src\\components\\RequestForQuotation\\requestForQuotation.js":"21","E:\\salman\\Sales-App\\src\\components\\Details\\vendorDetails.js":"22","E:\\salman\\Sales-App\\src\\context\\Random\\random.js":"23","E:\\salman\\Sales-App\\src\\config\\Route\\routes.js":"24","E:\\salman\\Sales-App\\src\\components\\Cutomer\\validationSchema.js":"25","E:\\salman\\Sales-App\\src\\context\\UserContext\\UserReducer.js":"26","E:\\salman\\Sales-App\\src\\components\\MediaQuery\\media.js":"27","E:\\salman\\Sales-App\\src\\components\\Vendor\\schema.js":"28","E:\\salman\\Sales-App\\src\\config\\Firebase\\firebase.js":"29","E:\\salman\\Sales-App\\src\\components\\Vendor\\style\\index.js":"30","E:\\salman\\Sales-App\\src\\components\\Header\\style\\index.js":"31","E:\\salman\\Sales-App\\src\\components\\UserProfile\\style\\index.js":"32","E:\\salman\\Sales-App\\src\\components\\FormError\\formError.js":"33","E:\\salman\\Sales-App\\src\\components\\RequestForQuotation\\style\\index.js":"34","E:\\salman\\Sales-App\\src\\components\\Details\\styles\\index.js":"35","E:\\salman\\Sales-App\\src\\components\\Textbox\\style\\index.js":"36","E:\\salman\\Sales-App\\src\\components\\AllCustomers\\allCustomers.js":"37","E:\\salman\\Sales-App\\src\\components\\AllVendors\\allVendors.js":"38","E:\\salman\\Sales-App\\src\\components\\FormError\\style\\index.js":"39","E:\\salman\\Sales-App\\src\\components\\AllCustomers\\style\\index.js":"40","E:\\salman\\Sales-App\\src\\components\\AllVendors\\style\\index.js":"41","E:\\salman\\Sales-App\\src\\components\\CustomerOrder\\customerOrder.js":"42"},{"size":517,"mtime":1614839078761,"results":"43","hashOfConfig":"44"},{"size":375,"mtime":1614839078761,"results":"45","hashOfConfig":"44"},{"size":784,"mtime":1614839078683,"results":"46","hashOfConfig":"44"},{"size":686,"mtime":1614839078746,"results":"47","hashOfConfig":"44"},{"size":3208,"mtime":1614839078746,"results":"48","hashOfConfig":"44"},{"size":2526,"mtime":1614839078730,"results":"49","hashOfConfig":"44"},{"size":2580,"mtime":1615364208939,"results":"50","hashOfConfig":"44"},{"size":2673,"mtime":1614839078746,"results":"51","hashOfConfig":"44"},{"size":2588,"mtime":1614839078730,"results":"52","hashOfConfig":"44"},{"size":7596,"mtime":1615359000976,"results":"53","hashOfConfig":"44"},{"size":234,"mtime":1614839078730,"results":"54","hashOfConfig":"44"},{"size":1366,"mtime":1614839078746,"results":"55","hashOfConfig":"44"},{"size":6988,"mtime":1615369259093,"results":"56","hashOfConfig":"44"},{"size":3508,"mtime":1614839078730,"results":"57","hashOfConfig":"44"},{"size":453,"mtime":1614839078746,"results":"58","hashOfConfig":"44"},{"size":11465,"mtime":1614839078699,"results":"59","hashOfConfig":"44"},{"size":205,"mtime":1614839078699,"results":"60","hashOfConfig":"44"},{"size":861,"mtime":1615359000976,"results":"61","hashOfConfig":"44"},{"size":10806,"mtime":1615359001063,"results":"62","hashOfConfig":"44"},{"size":809,"mtime":1614839078761,"results":"63","hashOfConfig":"44"},{"size":4858,"mtime":1615361367643,"results":"64","hashOfConfig":"44"},{"size":6055,"mtime":1615359000992,"results":"65","hashOfConfig":"44"},{"size":529,"mtime":1615359001063,"results":"66","hashOfConfig":"44"},{"size":1246,"mtime":1615363891879,"results":"67","hashOfConfig":"44"},{"size":1247,"mtime":1614839078699,"results":"68","hashOfConfig":"44"},{"size":118,"mtime":1614839078761,"results":"69","hashOfConfig":"44"},{"size":512,"mtime":1614839078730,"results":"70","hashOfConfig":"44"},{"size":829,"mtime":1614839078746,"results":"71","hashOfConfig":"44"},{"size":460,"mtime":1614839078746,"results":"72","hashOfConfig":"44"},{"size":425,"mtime":1614839078746,"results":"73","hashOfConfig":"44"},{"size":957,"mtime":1614839078730,"results":"74","hashOfConfig":"44"},{"size":174,"mtime":1614839078746,"results":"75","hashOfConfig":"44"},{"size":224,"mtime":1614839078730,"results":"76","hashOfConfig":"44"},{"size":800,"mtime":1615276006083,"results":"77","hashOfConfig":"44"},{"size":154,"mtime":1614840757754,"results":"78","hashOfConfig":"44"},{"size":222,"mtime":1614839078746,"results":"79","hashOfConfig":"44"},{"size":4430,"mtime":1615364204105,"results":"80","hashOfConfig":"44"},{"size":5027,"mtime":1615359000976,"results":"81","hashOfConfig":"44"},{"size":97,"mtime":1614839078730,"results":"82","hashOfConfig":"44"},{"size":730,"mtime":1614839078699,"results":"83","hashOfConfig":"44"},{"size":730,"mtime":1614840552724,"results":"84","hashOfConfig":"44"},{"size":1032,"mtime":1615369315915,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"1gkmbzl",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"88"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"88"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"88"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"88"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"88"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"88"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"88"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"88"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"88"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"88"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"88"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"88"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"173","messages":"174","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"88"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\salman\\Sales-App\\src\\index.js",[],["184","185"],"E:\\salman\\Sales-App\\src\\reportWebVitals.js",[],"E:\\salman\\Sales-App\\src\\App.js",[],"E:\\salman\\Sales-App\\src\\config\\Route\\index.js",["186","187"],"import React from 'react'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n  useHistory\r\n} from 'react-router-dom'\r\n\r\nimport Layout from '../../components/Layout/layout'\r\nimport Login from '../../components/Login/Login'\r\nimport Signup from '../../components/Signup/signup'\r\n\r\n// import './route.css'\r\nconst MainRouter = () => {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Login} />\r\n        <Route path=\"/signup\" component={Signup} />\r\n        <Route path=\"/home\" component={Layout} />\r\n        {/* <Route render={() => <Redirect to=\"/home\" />} /> */}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\nexport default MainRouter;\r\n","E:\\salman\\Sales-App\\src\\components\\Signup\\signup.js",[],"E:\\salman\\Sales-App\\src\\components\\Login\\Login.js",["188","189"],"import React, { useState } from 'react'\r\nimport { loginUser } from '../../Utils/utils';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport 'antd/dist/antd.css';\r\nimport { message } from 'antd';\r\nimport {\r\n    LoginContainer,\r\n    LoginDiv,\r\n    LoginHeading,\r\n    LoginForm,\r\n    UserEmailTextbox,\r\n    PasswordTextbox,\r\n    PrimaryButton,\r\n    TextWelcome,\r\n    Paragraph,\r\n    BreakLine,\r\n    Link\r\n} from './style/index'\r\n\r\nexport default function Login() {\r\n    const history = useHistory();\r\n    const [email, setUserEmail] = useState();\r\n    const [password, setPassword] = useState();\r\n    const [errorMessage, setErrorMessage] = useState(false)\r\n\r\n    if (localStorage.getItem('Authorization')) {\r\n        history.replace('/home')\r\n        // return\r\n    }\r\n\r\n    const onLogin = () => {\r\n        if (!email || !password) {\r\n            message.error('Enter valid credentials')\r\n        } else {\r\n            loginUser(email, password)\r\n                .then((res) => {\r\n                    // let token = res.auth.\r\n                    let token = 'dummy_token'\r\n                    localStorage.setItem('Authorization', token)\r\n                    history.replace('/home')\r\n                });\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <LoginContainer>\r\n                <LoginDiv>\r\n                    <TextWelcome>\r\n                        Welcome\r\n                    </TextWelcome>\r\n                    <LoginHeading>\r\n                        Login to Sales-App\r\n                    </LoginHeading>\r\n                    <LoginForm>\r\n                        <UserEmailTextbox\r\n                            type='text'\r\n                            placeholder='Email'\r\n                            onChange={e => setUserEmail(e.target.value)}\r\n                        />\r\n                        <PasswordTextbox\r\n                            type='password'\r\n                            placeholder='Password'\r\n                            onChange={e => setPassword(e.target.value)}\r\n                        />\r\n                        <PrimaryButton onClick={onLogin}>Continue</PrimaryButton>\r\n                    </LoginForm>\r\n                    <BreakLine />\r\n                    <Paragraph>\r\n                        Don't have an account?\r\n                   <Link onClick={() => history.push(\"/signup\")}>\r\n                            SignUp\r\n                   </Link>\r\n                    </Paragraph>\r\n                </LoginDiv>\r\n            </LoginContainer>\r\n        </div>\r\n    )\r\n}","E:\\salman\\Sales-App\\src\\components\\Layout\\layout.js",["190"],"E:\\salman\\Sales-App\\src\\components\\Signup\\style\\index.js",[],"E:\\salman\\Sales-App\\src\\components\\Login\\style\\index.js",[],"E:\\salman\\Sales-App\\src\\Utils\\utils.js",["191","192","193"],"import firebase from '../config/Firebase/firebase'\r\nimport 'antd/dist/antd.css';\r\nimport { message } from 'antd';\r\n\r\nconst createUser = async (email, password, name, img) => {\r\n  console.log(email, password, name, img);\r\n  if (email == \"\" || password == \"\" || name == \"\") {\r\n    message.error('Data is not in correct format')\r\n  }\r\n  else if (img == null) {\r\n    message.error('upload an image')\r\n  }\r\n  else {\r\n    return await firebase.auth()\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then((u) => {\r\n        const storageRef = firebase.storage().ref(`images/${img.name}.jpg`);\r\n        storageRef\r\n          .put(img)\r\n          .then((response) => {\r\n            response.ref.getDownloadURL()\r\n              .then((url) => {\r\n                const userId = u.user.uid;\r\n                firebase.firestore().collection(\"Users\").doc(userId).set({\r\n                  name,\r\n                  email,\r\n                  url,\r\n                  userId\r\n                });\r\n                message.success('Account Created')\r\n              })\r\n              .catch((error) => {\r\n                console.log('Error', error.message)\r\n              })\r\n          })\r\n          .catch((error) => {\r\n            console.log('Error', error.message)\r\n          })\r\n      })\r\n  }\r\n}\r\n\r\nconst loginUser = async (email, password) => {\r\n\r\n  return await firebase.auth()\r\n    .signInWithEmailAndPassword(email, password)\r\n    .then((u) => {\r\n      const userId = u.user.uid\r\n      console.log('login u', u.user.uid)\r\n      localStorage.setItem('userId', userId)\r\n      message.success('WelCome')\r\n      // localStorage.setItem(\"userID\", userId);\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n      message.error(error.message)\r\n      throw error\r\n    });\r\n\r\n};\r\n\r\nconst getUserData = () => {\r\n  const userID = localStorage.getItem('userId')\r\n  // console.log('USER ID============>',userID);\r\n  return firebase\r\n    .firestore()\r\n    .collection(\"Users\")\r\n    .where(\"userId\", \"==\", userID)\r\n    .get()\r\n    .then(function (querySnapshot) {\r\n      const comlist = [];\r\n      querySnapshot.forEach(function (doc) {\r\n        if (doc.exists) {\r\n          const comp = doc.data();\r\n          comlist.push({ ...comp, compId: doc.id });\r\n        } else {\r\n          message.info(\"No such document!\");\r\n        }\r\n      });\r\n      // setCompanyList(comlist);\r\n      // setInitialCompany(comlist);\r\n      // console.log('data-------->', comlist)\r\n      return comlist\r\n    })\r\n    .catch(function (error) {\r\n      console.log(\"Error getting documents: \", error);\r\n    });\r\n\r\n}\r\n\r\nconst createVendor = (vendorDetails, vendorId) => {\r\n  console.log('create vendor function')\r\n  const {\r\n    companyName,\r\n    ownerFirstName,\r\n    ownerLastName,\r\n    address,\r\n    phone,\r\n    email,\r\n    city,\r\n    postalCode\r\n  } = vendorDetails\r\n\r\n  // console.log(companyName, ownerFirstName, ownerLastName, address, phone, email, city, postalCode);\r\n  const vendorObj = {\r\n    companyName,\r\n    ownerFirstName,\r\n    ownerLastName,\r\n    address,\r\n    phone,\r\n    email,\r\n    city,\r\n    postalCode,\r\n    iD:''\r\n  }\r\n\r\n  firebase.firestore().collection(\"Vendor\").add(\r\n    vendorObj\r\n  )\r\n    .then((response) => {\r\n      console.log('respnse', response.id)\r\n      firebase.firestore().collection(\"Vendor\").doc(response.id).update({'iD': response.id})\r\n\r\n      message.success('Vendor Created')\r\n    }).catch((error) => {\r\n      console.log('Error', error.message)\r\n      message.error(error.message)\r\n    })\r\n\r\n}\r\n\r\nconst createNewCustomer = (customerDetails, customerId) => {\r\n\r\n  const {\r\n    businessName,\r\n    billToAddress,\r\n    phone,\r\n    email,\r\n    city,\r\n    responsibleName,\r\n    responsiblePhone,\r\n    secondaryPhone,\r\n    postalCode\r\n  } = customerDetails\r\n\r\n  const customerObj={\r\n    businessName,\r\n    billToAddress,\r\n    phone,\r\n    email,\r\n    city,\r\n    responsibleName,\r\n    responsiblePhone,\r\n    secondaryPhone,\r\n    postalCode,\r\n    iD:''\r\n  }\r\n  // console.log(businessName, ownerFirstName, ownerLastName, billToAddress, phone, email, city, postalCode);\r\n\r\n  firebase.firestore().collection(\"Customer\").add(customerObj)\r\n    .then((response) => {\r\n      console.log('respnse', response.id)\r\n      firebase.firestore().collection(\"Customer\").doc(response.id).update({'iD': response.id})\r\n\r\n      console.log('customer response', response.id);\r\n      message.success('Customer Created')\r\n    }).catch((error) => {\r\n      console.log('Error', error.message)\r\n      message.error(error.message)\r\n    })\r\n}\r\n\r\nconst getSpecificData = (id , Cname) => {\r\n  \r\n  return firebase\r\n    .firestore()\r\n    .collection(Cname)\r\n    .where(\"iD\", \"==\", id)\r\n    .get()\r\n    .then(function (querySnapshot) {\r\n      // console.log('querySnapshot', querySnapshot)\r\n      const comlist = [];\r\n      querySnapshot.forEach(function (doc) {\r\n        if (doc.exists) {\r\n          const comp = doc.data();\r\n          comlist.push({ ...comp, compId: doc.id });\r\n        } else {\r\n          message.info(\"No such document!\");\r\n        }\r\n      });\r\n      // setCompanyList(comlist);\r\n      // setInitialCompany(comlist);\r\n      // console.log('data-------->', comlist)\r\n      return comlist\r\n    })\r\n    .catch(function (error) {\r\n      console.log(\"Error getting documents: \", error);\r\n    });\r\n}\r\n\r\nconst UpdateCustomer = (customerDetail, id) => {\r\n  // console.log('firebase=======>',customerDetail, id)\r\n  firebase.firestore().collection(\"Customer\").doc(id)\r\n          .update({\r\n            businessName: customerDetail.businessName,\r\n            companyName: customerDetail.companyName,\r\n            state: customerDetail.state,\r\n            city: customerDetail.city,\r\n            billToAddress: customerDetail.billToAddress,\r\n            postalCode: customerDetail.postalCode,\r\n            phone:customerDetail.phone,\r\n            email:customerDetail.email,\r\n            secondaryPhone: customerDetail.secondaryPhone,\r\n            responsibleName: customerDetail.responsibleName,\r\n            responsiblePhone: customerDetail.responsiblePhone\r\n          })\r\n          .then(()=>{\r\n            message.success('Data updated')\r\n          })\r\n          .catch((error) => {\r\n            message.error(error.message)\r\n          })\r\n}\r\n\r\nconst UpdateVendor = (vendorDetail, id) => {\r\n  // console.log('vendorDetail, id--------->', vendorDetail, id)\r\n  firebase.firestore().collection(\"Vendor\").doc(id)\r\n          .update({\r\n            address: vendorDetail.address,\r\n            ownerFirstName: vendorDetail.ownerFirstName,\r\n            ownerLastName: vendorDetail.ownerLastName,\r\n            companyName: vendorDetail.companyName,\r\n            state: vendorDetail.state,\r\n            city: vendorDetail.city,\r\n            postalCode: vendorDetail.postalCode,\r\n            phone:vendorDetail.phone,\r\n            email:vendorDetail.email\r\n          })\r\n          .then(()=>{\r\n            message.success('Data updated')\r\n          })\r\n          .catch((error) => {\r\n            message.error(error.message)\r\n          })\r\n}  \r\n\r\nconst CreateRFQ = (newList,RFQiD,fullDate,selectVednor)=>{\r\nconsole.log('Create Rfq Utils',newList,RFQiD,fullDate,selectVednor)\r\nconst RfqObj={\r\n  newList,\r\n  RFQiD,\r\n  fullDate,\r\n  selectVednor\r\n}\r\nfirebase.firestore().collection('RFQ').add(RfqObj)\r\n.then((response)=>{\r\n  console.log('Firebase response RFQ', response)\r\n})\r\n.catch((error)=>{\r\n  console.log('Error MEssage', error.message)\r\n})\r\n}\r\n\r\nexport {\r\n  createUser,\r\n  loginUser,\r\n  getUserData,\r\n  createVendor,\r\n  createNewCustomer,\r\n  getSpecificData,\r\n  UpdateCustomer,\r\n  UpdateVendor,\r\n  CreateRFQ\r\n}","E:\\salman\\Sales-App\\src\\components\\PurchaseOrder\\purchaseOrder.js",[],"E:\\salman\\Sales-App\\src\\components\\Sidebar\\sidebar.js",["194","195","196","197","198"],"import React, { useState } from 'react'\r\nimport { Layout, Menu, PageHeader } from 'antd';\r\n// import './sidebar.css'\r\nimport routes from '../../config/Route/routes'\r\nimport { Link } from 'react-router-dom';\r\nconst SideBar = () => {\r\n    const { Content, Footer, Sider } = Layout;\r\n    const [collapsed, setCollapsed] = useState()\r\n    // const onCollapse = collapsed => {\r\n    //     console.log(collapsed);\r\n    //     setCollapsed(collapsed)\r\n    // };\r\n\r\n    return (\r\n        <Layout style={{ minHeight: '100vh' }}>\r\n            <Sider\r\n                breakpoint=\"lg\"\r\n                collapsedWidth=\"0\"\r\n                onBreakpoint={broken => {\r\n                    console.log(broken);\r\n                }}\r\n                onCollapse={(collapsed, type) => {\r\n                    console.log(collapsed, type);\r\n                }}\r\n            >\r\n                <div className=\"logo\" />\r\n                <Menu theme=\"dark\" mode=\"inline\" >\r\n                    {\r\n                        routes.map((link, index) => {\r\n                            return <Menu.Item key={index} >\r\n                                <Link to={`/home${link.path}`}>{link.name}</Link>\r\n                            </Menu.Item>\r\n                        })\r\n                    }\r\n\r\n\r\n                </Menu>\r\n            </Sider>\r\n        </Layout>\r\n\r\n    )\r\n}\r\nexport default SideBar","E:\\salman\\Sales-App\\src\\components\\Details\\customerDetails.js",["199"],"E:\\salman\\Sales-App\\src\\components\\Header\\header.js",["200","201","202","203","204","205","206","207"],"import React, { useState } from 'react'\r\nimport firebase from '../../config/Firebase/firebase'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { getUserData } from '../../Utils/utils'\r\nimport {\r\n    Navbar,\r\n    Logo,\r\n    User,\r\n    UserName,\r\n    UserAvatar,\r\n    DropdownDiv,\r\n    UsersFirstName,\r\n    UsersEmail,\r\n    Span\r\n} from './style/index'\r\nimport { Avatar, Menu, Dropdown, Divider } from 'antd';\r\nimport { UserOutlined, LogoutOutlined, } from \"@ant-design/icons\";\r\nimport 'antd/dist/antd.css';\r\n\r\n\r\nconst Header = () => {\r\n    const [userFirstName, setUserFirstName] = useState('')\r\n    const [userLastName, setUserLastName] = useState('')\r\n    const [userEmail, setUserEmail] = useState('')\r\n    const [userImage, setUserImage] = useState(null)\r\n    const history = useHistory();\r\n    const onLogout = () => {\r\n        firebase.auth().signOut()\r\n            .then(() => {\r\n                localStorage.removeItem('Authorization')\r\n                localStorage.removeItem('userId')\r\n                history.replace('/')\r\n            })\r\n    }\r\n    \r\n   const userInfo = getUserData().then((data)=>{\r\n    //    console.log('user data ===========> $',data[0].name);\r\n       setUserFirstName(data[0].name)\r\n       setUserEmail(data[0].email)\r\n      setUserImage(data[0].url)\r\n    //    console.log('user data ===========> $',data[0].email);\r\n    //    console.log('user data ===========> $',data[0].name);\r\n   });\r\n   \r\n//    console.log('User data form header', userInfo)\r\n    const showProfile = () => {\r\n        // console.log('userData funtion', getUserData())\r\n        history.replace('/home/user-profile')\r\n    }\r\n   \r\n    const menu = (\r\n        <Menu>\r\n\r\n            <DropdownDiv>\r\n                <Avatar\r\n                    src={userImage}\r\n                    size={64}\r\n                    icon={!userImage ? <UserOutlined /> : ''}\r\n                />\r\n                <UsersFirstName>Hello {userLastName ? userLastName : 'User'}</UsersFirstName>\r\n                <UsersEmail>{userEmail}</UsersEmail>\r\n                <Divider />\r\n            </DropdownDiv>\r\n            <Menu.Item>\r\n                <a onClick={showProfile}>\r\n                    <UserOutlined />\r\n                    Profile\r\n            </a>\r\n            </Menu.Item>\r\n            <Menu.Item>\r\n                <a>\r\n                    3rd menu item\r\n            </a>\r\n            </Menu.Item>\r\n            <Menu.Item>\r\n                <a onClick={onLogout}>\r\n\r\n                    <LogoutOutlined />\r\n                Logout\r\n                </a>\r\n            </Menu.Item>\r\n        </Menu>\r\n    );\r\n    return (\r\n        <div>\r\n            <Navbar>\r\n                <Logo src='https://1000logos.net/wp-content/uploads/2017/08/CAT-logo.png' />\r\n                {/* <h5>Logo</h5> */}\r\n                <User>\r\n                    <UserName>User First Name</UserName>\r\n                    <UserAvatar>\r\n                        <Dropdown overlay={menu}>\r\n                            <a className=\"ant-dropdown-link\" onClick={(e) => e.preventDefault()}>\r\n                                <Avatar\r\n                                    src={userImage}\r\n                                    size='large'\r\n                                    icon={!userImage ? <UserOutlined /> : ''}\r\n                                />\r\n                            </a>\r\n                        </Dropdown>\r\n                    </UserAvatar>\r\n                </User>\r\n            </Navbar>\r\n        </div>\r\n    )\r\n}\r\nexport default Header\r\n","E:\\salman\\Sales-App\\src\\components\\UserProfile\\userProfile.js",[],"E:\\salman\\Sales-App\\src\\components\\Cutomer\\cutomer.js",[],"E:\\salman\\Sales-App\\src\\components\\Cutomer\\updateCustomer.js",["208","209"],"import React,{useState, useEffect} from 'react'\r\n\r\nconst UpdateCustomer = () => {\r\n    return(\r\n        <div>\r\n            <h2> update Customer</h2>\r\n        </div>\r\n    )\r\n}\r\nexport default UpdateCustomer","E:\\salman\\Sales-App\\src\\components\\Dashboard\\dashboard.js",["210","211"],"import React,{useContext} from 'react'\r\nimport {VendorCustomerContext} from '../../context/Random/random'\r\n\r\nimport './Styled/index.css'\r\nconst Dashboard = () => {\r\nconst value = useContext(VendorCustomerContext)\r\nconst {vendors, setVendors} = useContext(VendorCustomerContext)\r\nconst {customers} = useContext(VendorCustomerContext)\r\nconsole.log('Context Dashboard------>', value)\r\n\r\nfunction changeVendor(){\r\n    setVendors('vendor data is changed')\r\n}\r\n    return (\r\n        <div>\r\n\r\n            <h1>Dashboard</h1>\r\n            {/* <button onClick={changeVendor} > logout </button> */}\r\n            {value.vendors.map((items,key)=>{\r\n                return <p>{items.companyName}</p>\r\n            })}\r\n\r\n            {customers.map((items,key)=>{\r\n                return <p>{items.phone}</p>\r\n            })}\r\n        </div>\r\n    )\r\n}\r\nexport default Dashboard","E:\\salman\\Sales-App\\src\\components\\Vendor\\index.js",["212","213","214","215"],"import React, { useState, useEffect } from 'react'\r\nimport { useFormik } from 'formik'\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { validationSchema } from './schema'\r\nimport { createVendor, updateVendor } from '../../Utils/utils'\r\nimport { Label } from '../Textbox/style/index'\r\nimport { VendorMainDiv, FormDiv} from './style/index'\r\nimport ErrorText from '../FormError/formError'\r\nimport AllVendors from '../AllVendors/allVendors';\r\nimport {\r\n    Divider,\r\n    Tabs,\r\n    Row,\r\n    Col,\r\n    // Form,\r\n    Input\r\n} from 'antd';\r\nconst initialValues = {\r\n    companyName: '',\r\n    ownerFirstName: '',\r\n    ownerLastName: '',\r\n    address: '',\r\n    phone: '',\r\n    email: '',\r\n    // country: '',\r\n    city: '',\r\n    postalCode: ''\r\n}\r\n// const validate = values => {\r\n//     const errors = {}\r\n//     if (!values.companyName) {\r\n//         errors.companyName = 'Field Required'\r\n//     }\r\n//     else if (values.companyName.length < 4) {\r\n//         errors.companyName = 'Company name is too short'\r\n//     }\r\n//     if (!values.ownerFirstName || values.ownerFirstName < 5) {\r\n//         errors.ownerFirstName = 'Invalid Name'\r\n//     }\r\n//     if (!values.ownerLastName || values.ownerLastName < 5) {\r\n//         errors.ownerLastName = 'Invalid Name'\r\n//     }\r\n//     if (!values.address) {\r\n//         errors.address = 'Field Required'\r\n//     }\r\n//     else if(values.address. length < 15){\r\n//         errors.address = 'Enter valid address'\r\n//     }\r\n//     if (!values.phone) {\r\n//         errors.phone = 'Field Required'\r\n//     }\r\n//     else if(values.phone.length < 11){\r\n//         errors.phone = 'Invalid phone number'\r\n//     }\r\n//     if (!values.email) {\r\n//         errors.email = 'Field Required'\r\n//     }\r\n//     else if (/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(values.email)) {\r\n//         errors.email = 'Invalid email format'\r\n//     }\r\n//     // if(!values.country){\r\n//     //     errors.country = 'Required'\r\n//     // }else if(values.country  )\r\n//     if (!values.city) {\r\n//         errors.city = 'Field Required'\r\n//     }\r\n//     else if (values.city.length < 7 || values.city.length > 15) {\r\n//         errors.city = 'Invalid city name'\r\n//     }\r\n//     if (!values.postalCode || values.postalCode.length < 5) {\r\n//         errors.postalCode = 'Enter valid postal code'\r\n//     }\r\n//     return errors\r\n// }\r\nconst Vendor = () => {\r\n\r\n    const [vendorId, setVendorId] = useState('')\r\n\r\n    // const venId = () => {\r\n    //     setVendorId(uuidv4())\r\n    // }\r\n    const onSubmit = (values,onSubmitProps) => {\r\n        createVendor(values, vendorId)\r\n        onSubmitProps.resetForm()\r\n    }\r\n    // useEffect(() => {\r\n    //     venId()\r\n    //     updateVendor()\r\n    // }, [])\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        onSubmit,\r\n        validationSchema\r\n    })\r\n\r\n\r\n    const { TabPane } = Tabs;\r\n    function callback(key) {\r\n        console.log(key);\r\n    }\r\n    // console.log('Formik visited fiedls', formik.touched);\r\n    return (\r\n        <div>\r\n            <h1>Vendor</h1>\r\n            <Divider />\r\n            <Tabs defaultActiveKey=\"1\" onChange={callback}>\r\n                <TabPane tab=\"Create Vendor\" key=\"1\">\r\n                    <VendorMainDiv>\r\n                        <form\r\n                            onSubmit={formik.handleSubmit}\r\n                        >\r\n                            <FormDiv>\r\n                               \r\n                                <Row gutter={[10, 10]}>\r\n                                    <Col xs={24} sm={8}>\r\n                                        <Label>\r\n                                            Company Name:\r\n                                <Input\r\n                                                type='text'\r\n                                                name='companyName'\r\n                                                {...formik.getFieldProps('companyName')}\r\n                                            />\r\n                                        </Label>\r\n                                        {formik.touched.companyName && formik.errors.companyName\r\n                                            ? <ErrorText text={formik.errors.companyName} />\r\n                                            : null}\r\n                                    </Col>\r\n                                    <Col xs={24} sm={8}>\r\n                                        <Label>\r\n                                            Owner First Name:\r\n                                <Input\r\n                                                type='text'\r\n                                                name='ownerFirstName'\r\n                                                {...formik.getFieldProps('ownerFirstName')}\r\n                                            />\r\n                                        </Label>\r\n                                        {formik.touched.ownerFirstName && formik.errors.ownerFirstName\r\n                                            ? <ErrorText text={formik.errors.ownerFirstName} />\r\n                                            : null}\r\n                                    </Col>\r\n                                    <Col xs={24} sm={8}>\r\n                                        <Label>Owner Last Name:\r\n                                    <Input\r\n                                                type='text'\r\n                                                name='ownerLastName'\r\n                                                {...formik.getFieldProps('ownerLastName')}\r\n\r\n                                            />\r\n                                        </Label>\r\n                                        {formik.touched.ownerLastName && formik.errors.ownerLastName\r\n                                            ? <ErrorText text={formik.errors.ownerLastName} />\r\n                                            : null}\r\n                                    </Col>\r\n                                    <Col xs={24} sm={24}>\r\n                                        <Label>Address:\r\n                                    <Input\r\n                                                type='text'\r\n                                                name='address'\r\n                                                {...formik.getFieldProps('address')}\r\n                                            />\r\n                                        </Label>\r\n                                        {formik.touched.address && formik.errors.address\r\n                                            ? <ErrorText text={formik.errors.address} />\r\n                                            : null}\r\n                                    </Col>\r\n                                    <Col xs={24} sm={6}>\r\n                                        <Label>Phone#:\r\n                                    <Input\r\n                                                type='number'\r\n                                                name='phone'\r\n                                                {...formik.getFieldProps('phone')}\r\n                                            />\r\n                                        </Label>\r\n                                        {formik.touched.phone && formik.errors.phone\r\n                                            ? <ErrorText text={formik.errors.phone} />\r\n                                            : null}\r\n                                    </Col>\r\n                                    <Col xs={24} sm={6}>\r\n                                        <Label>Email:\r\n                                    <Input\r\n                                                type='email'\r\n                                                name='email'\r\n                                                {...formik.getFieldProps('email')}\r\n                                            />\r\n                                        </Label>\r\n                                        {formik.touched.email && formik.errors.email\r\n                                            ? <ErrorText text={formik.errors.email} />\r\n                                            : null}\r\n                                    </Col>\r\n                                    {/* <Col xs={24} sm={6}>\r\n                                        <Label>Coutnry:\r\n                                    <Input\r\n                                                type='text'\r\n                                                name='country'\r\n                                                value={formik.values.country}\r\n                                                onChange={formik.handleChange}\r\n                                            />\r\n                                        </Label>\r\n                                    </Col> */}\r\n                                    <Col xs={24} sm={6}>\r\n                                        <Label>City:\r\n                                    <Input\r\n                                                type='text'\r\n                                                name='city'\r\n                                                {...formik.getFieldProps('city')}\r\n                                            />\r\n                                        </Label>\r\n                                        {formik.touched.city && formik.errors.city\r\n                                            ? <ErrorText text={formik.errors.city} />\r\n                                            : null}\r\n                                    </Col>\r\n                                    <Col xs={24} sm={6}>\r\n                                        <Label>Postl Code:\r\n                                    <Input\r\n                                                type='number'\r\n                                                name='postalCode'\r\n                                                {...formik.getFieldProps('postalCode')}\r\n                                            />\r\n                                        </Label>\r\n                                        {formik.touched.postalCode && formik.errors.postalCode\r\n                                            ? <ErrorText text={formik.errors.postalCode} />\r\n                                            : null}\r\n                                    </Col>\r\n\r\n                                </Row>\r\n                                <Col xs={24} sm={16}>\r\n                                    <button type='submit' disabled={!formik.isValid}>Submit</button>\r\n                                </Col>\r\n                            </FormDiv>\r\n                        </form>\r\n                    </VendorMainDiv>\r\n                </TabPane>\r\n                <TabPane tab=\"All Vendors\" key=\"2\">\r\n                    <AllVendors />\r\n\r\n                </TabPane>\r\n\r\n            </Tabs>\r\n        </div >\r\n    )\r\n}\r\nexport default Vendor","E:\\salman\\Sales-App\\src\\context\\UserContext\\UserContext.js",["216"],"import React, { createContext, useReducer } from 'react'\r\nimport UserReducer from './UserReducer'\r\n//Initial State\r\nconst UserInitialState = {\r\n    userData: {\r\n        firstname: 'Muhammad',\r\n        lastname: 'Salman',\r\n        email: 'muhammadsalman0403@gmail.com',\r\n        id: '123456789abcdefgh',\r\n        url: 'https://static.topyaps.com/wp-content/uploads/2018/11/hera-pheri.jpeg'\r\n    }\r\n}\r\n\r\n//Create Context\r\nexport const UserDataContext = createContext(UserInitialState)\r\n\r\n//Create Provider\r\nexport const UserDataProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(UserReducer, UserInitialState)\r\n    return (\r\n        <UserDataContext.Provider value={{\r\n            userData: state.userData\r\n        }}>\r\n            {children}\r\n        </UserDataContext.Provider>\r\n    )\r\n}","E:\\salman\\Sales-App\\src\\components\\RequestForQuotation\\requestForQuotation.js",["217","218","219","220","221","222","223","224","225"],"E:\\salman\\Sales-App\\src\\components\\Details\\vendorDetails.js",["226","227"],"import React, { useEffect, useState } from 'react'\r\nimport { useParams, useHistory } from 'react-router-dom'\r\nimport { getSpecificData, UpdateVendor } from '../../Utils/utils'\r\nimport { CaretLeftOutlined } from \"@ant-design/icons\";\r\nimport { Goback, DetailsDiv } from './styles/index'\r\nimport {\r\n    Divider,\r\n    Row,\r\n    Col,\r\n    Input,\r\n    Button,\r\n    Switch\r\n} from 'antd';\r\nconst VendorDetails = () => {\r\n    const [isDisable, setisDisable] = useState(true)\r\n    const [detailsdData, setDetailsData] = useState(\r\n        {\r\n            ownerFirstName: \"\",\r\n            ownerLastName: '',\r\n            companyName: \"\",\r\n            city: \"\",\r\n            address: \"\",\r\n            email: \"\",\r\n            state: '',\r\n            iD: \"\",\r\n            phone: '',\r\n            postalCode: ''\r\n        }\r\n    )\r\n    const { slug, Cname } = useParams()\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        getSpecificData(slug, Cname).then(data => {\r\n            setDetailsData(data[0])\r\n        })\r\n        DisableFields(false)\r\n    }, [])\r\n\r\n    function DisableFields(checked) {\r\n        console.log(`switch to ${checked}`);\r\n        setisDisable(checked)\r\n    }\r\n    const changeHandler = (key, value) => {\r\n        setDetailsData({ ...detailsdData, [value]: key.target.value })\r\n    }\r\n    const updateVendor = () => {\r\n        UpdateVendor(detailsdData, detailsdData.compId)\r\n    }\r\n    return (\r\n        <DetailsDiv>\r\n            <Goback onClick={e => history.goBack()}>\r\n                <CaretLeftOutlined /> GoBack\r\n            </Goback>\r\n            <h2>Vendor Details page</h2>\r\n            <label> Update\r\n                <Switch\r\n                    size='small'\r\n                    onChange={DisableFields}\r\n                />\r\n            </label>\r\n\r\n            <div>\r\n                <Divider orientation=\"left\">\r\n                    <h2>Name</h2>\r\n                </Divider>\r\n                <Row gutter={[10, 10]}>\r\n                    <Col xs={24} sm={8}>\r\n                        <h2>FirstName:</h2>\r\n                        {\r\n                            <Input type='text' value={detailsdData.ownerFirstName}\r\n                                onChange={(e) => changeHandler(e, 'ownerFirstName')}\r\n                                disabled={!isDisable}\r\n                            />\r\n                        }\r\n                    </Col>\r\n                    <Col xs={24} sm={8}>\r\n                        <h2>LastName:</h2>\r\n                        {\r\n                            <Input type='text' value={detailsdData.ownerLastName}\r\n                                onChange={(e) => changeHandler(e, 'ownerLastName')}\r\n                                disabled={!isDisable}\r\n                            />\r\n                        }\r\n                    </Col>\r\n                    <Col xs={24} sm={8}>\r\n                        <h2>Company:</h2>\r\n                        <Input type='text' value={detailsdData.companyName}\r\n                            onChange={(e) => changeHandler(e, 'companyName')}\r\n                            disabled={!isDisable}\r\n                        />\r\n                    </Col>\r\n\r\n                </Row>\r\n                <Divider orientation=\"left\">\r\n                    <h2>Address</h2>\r\n                </Divider>\r\n                <Row gutter={[10, 10]}>\r\n                    <Col xs={24} sm={16}>\r\n                        <h2>State:</h2>\r\n                        <Input type='text' value={detailsdData.state}\r\n                            onChange={(e) => changeHandler(e, 'state')}\r\n                            disabled={!isDisable}\r\n                        />\r\n                    </Col>\r\n                    <Col xs={24} sm={8}>\r\n                        <h2>City:</h2>\r\n                        <Input type='text' value={detailsdData.city}\r\n                            onChange={(e) => changeHandler(e, 'city')}\r\n                            disabled={!isDisable}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row gutter={[10, 10]}>\r\n                    <Col xs={24} sm={16}>\r\n                        <h2>Address:</h2>\r\n                        <Input type='text' value={detailsdData.address}\r\n                            onChange={(e) => changeHandler(e, 'address')}\r\n                            disabled={!isDisable}\r\n                        />\r\n                    </Col>\r\n                    <Col xs={24} sm={8}>\r\n                        <h2>PostalCode:</h2>\r\n                        <Input type='text' value={detailsdData.postalCode}\r\n                            onChange={(e) => changeHandler(e, 'postalCode')}\r\n                            disabled={!isDisable}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Divider orientation='left'>\r\n                    <h2>Contact</h2>\r\n                </Divider>\r\n                <Row gutter={[10, 10]}>\r\n                    <Col xs={24} sm={16}>\r\n                        <h2>Email:</h2>\r\n                        <Input type='text' value={detailsdData.email}\r\n                            onChange={(e) => changeHandler(e, 'email')}\r\n                            disabled={!isDisable}\r\n                        />\r\n                    </Col>\r\n                    <Col xs={24} sm={8}>\r\n                        <h2>Phone Number:</h2>\r\n                        <Input type='text' value={detailsdData.phone}\r\n                            onChange={(e) => changeHandler(e, 'phone')}\r\n                            disabled={!isDisable}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row gutter={10, 10}>\r\n                    <Col xs={24} sm={16}>\r\n                        <Button \r\n                        onClick={updateVendor}\r\n                        disabled={!isDisable}\r\n                        >Update</Button>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n            {/* )\r\n            })} */}\r\n        </DetailsDiv>\r\n    )\r\n}\r\nexport default VendorDetails","E:\\salman\\Sales-App\\src\\context\\Random\\random.js",[],"E:\\salman\\Sales-App\\src\\config\\Route\\routes.js",[],"E:\\salman\\Sales-App\\src\\components\\Cutomer\\validationSchema.js",[],"E:\\salman\\Sales-App\\src\\context\\UserContext\\UserReducer.js",["228"],"export default (state, action) => {\r\n    switch (action.type) {\r\n        default:\r\n            return state;\r\n    }\r\n}","E:\\salman\\Sales-App\\src\\components\\MediaQuery\\media.js",[],"E:\\salman\\Sales-App\\src\\components\\Vendor\\schema.js",[],"E:\\salman\\Sales-App\\src\\config\\Firebase\\firebase.js",[],"E:\\salman\\Sales-App\\src\\components\\Vendor\\style\\index.js",[],"E:\\salman\\Sales-App\\src\\components\\Header\\style\\index.js",["229"],"import styled from 'styled-components'\r\nimport media from '../../MediaQuery/media'\r\n\r\nexport const Navbar = styled.div`\r\ndisplay: flex;\r\njustify-content: space-between;\r\nalign-items: center;\r\nheight: 50px;\r\nborder-bottom: 1px solid gray;\r\nbox-shadow: 5px 2px 15px #888888;\r\n`\r\nexport const Logo = styled.img`\r\nwidth:50px;\r\nheight: 50px;\r\nmargin-left: 10px;\r\n// justify-content: flex-start;\r\n`\r\nexport const User = styled.div`\r\ndisplay: flex;\r\nalign-items: center;\r\n`\r\nexport const UserName = styled.div`\r\nmargin-right: 10px;\r\n`\r\nexport const UserAvatar = styled.div`\r\nmargin-right: 10px;\r\n`\r\nexport const DropdownDiv = styled.div`\r\ntext-align: center;\r\njustify-content: center;\r\nalign-items: center;\r\nmargin-top: 10px;\r\nwidth:250px;\r\noverflow: hidden;\r\npadding:12px;\r\n`\r\nexport const UsersFirstName = styled.h4`\r\nmargin-top:15px;\r\nword-spacing:1px;\r\n`\r\nexport const UsersEmail = styled.p`\r\n\r\n`\r\nexport const Span = styled.span`\r\nmargin-right: 10px;\r\n`\r\n\r\n\r\n","E:\\salman\\Sales-App\\src\\components\\UserProfile\\style\\index.js",[],"E:\\salman\\Sales-App\\src\\components\\FormError\\formError.js",[],"E:\\salman\\Sales-App\\src\\components\\RequestForQuotation\\style\\index.js",[],"E:\\salman\\Sales-App\\src\\components\\Details\\styles\\index.js",[],"E:\\salman\\Sales-App\\src\\components\\Textbox\\style\\index.js",[],"E:\\salman\\Sales-App\\src\\components\\AllCustomers\\allCustomers.js",["230"],"E:\\salman\\Sales-App\\src\\components\\AllVendors\\allVendors.js",["231","232","233","234"],"import React, { useState, useEffect, useContext } from 'react'\r\nimport firebase from '../../config/Firebase/firebase';\r\nimport { useHistory } from 'react-router-dom'\r\nimport { EmptyDiv } from './style/index'\r\nimport { Empty, Table, Space, Button } from 'antd';\r\nimport loader from '../../assets/loader.gif'\r\nimport { VendorCustomerContext } from '../../context/Random/random'\r\nimport {TableDiv,LoaderDiv} from './style/index'\r\n\r\nconst AllVendors = () => {\r\n    const [isVendor, setIsVendor] = useState(false)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const history = useHistory()\r\n\r\n    const value = useContext(VendorCustomerContext)\r\n    const { vendors, setVendors } = useContext(VendorCustomerContext)\r\n\r\n    const getAllVendors = () => {\r\n        setIsLoading(true)\r\n        firebase\r\n            .firestore()\r\n            .collection(\"Vendor\")\r\n            .onSnapshot(function (querySnapshot) {\r\n                const vendorList = [];\r\n                querySnapshot.forEach(function (doc) {\r\n                    console.log('functions Doc', doc.data)\r\n                    if (doc.exists) {\r\n                        const comp = doc.data();\r\n                        vendorList.push({ ...comp, compId: doc.id });\r\n                        setIsVendor(true)\r\n                    } else {\r\n                        // alert(\"No such document!\");\r\n                        // <EmptyDiv>\r\n                        //     <Empty/>\r\n                        // </EmptyDiv>\r\n                        setIsVendor(false)\r\n                    }\r\n                });\r\n                setVendors(vendorList)\r\n                setIsLoading(false)\r\n                // setIsVendor(true)\r\n            });\r\n    }\r\n\r\n    const updateVendor = (e) => {\r\n        console.log('update E', e)\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Company Name',\r\n            dataIndex: 'companyName',\r\n            key: 'name',\r\n        },\r\n        {\r\n            title: 'FirstName',\r\n            dataIndex: 'ownerFirstName',\r\n            key: 'firstname',\r\n        },\r\n        {\r\n            title: 'LastName',\r\n            dataIndex: 'ownerLastName',\r\n            key: 'lastname',\r\n        },\r\n        {\r\n            title: 'Phone',\r\n            dataIndex: 'phone',\r\n            key: 'phone',\r\n        },\r\n        {\r\n            title: 'Address',\r\n            dataIndex: 'address',\r\n            key: 'address',\r\n        },\r\n        {\r\n            title: 'Action',\r\n            key: 'action',\r\n            render: (vendors) => (\r\n              <Space size=\"middle\">\r\n                <Button\r\n                onClick={() =>\r\n                    history.push(`/home/vendor-details/${vendors.compId}/${'Vendor'}`)}\r\n                >Details</Button>\r\n              </Space>\r\n            ),\r\n          },\r\n    ];\r\n    const checkVendor = () => {\r\n        if (isVendor) {\r\n            return <TableDiv>\r\n                {/* <Table>\r\n                    <TableHead>\r\n                        <TableHeading>Company</TableHeading>\r\n                        <TableHeading>FirstName</TableHeading>\r\n                        <TableHeading>Phone</TableHeading>\r\n                        <TableHeading>City</TableHeading>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {allVendors &&\r\n                            allVendors.map((vendor, index) => {\r\n                                return (\r\n                                    <TableRow>\r\n                                        <TableData>[{vendor.companyName}]</TableData>\r\n                                        <TableData>[{vendor.ownerFirstName}]</TableData>\r\n                                        <TableData>[{vendor.phone}]</TableData>\r\n                                        <TableData>[{vendor.city}]</TableData>\r\n                                      \r\n                                        <TableData>\r\n                                            <button \r\n                                            onClick={() =>\r\n                                                history.push(`/home/vendor-details/${vendor.compId}/${'Vendor'}`)}\r\n                                            >\r\n                                                Details\r\n                                            </button>\r\n                                        </TableData>\r\n                                    </TableRow>\r\n                                );\r\n                            })}\r\n                    </TableBody>\r\n                </Table> */}\r\n                <Table dataSource={vendors} columns={columns} />;\r\n            </TableDiv>\r\n        }\r\n        else if (!isVendor || isLoading) {\r\n            return <LoaderDiv><img src={loader} /></LoaderDiv>\r\n        }\r\n        return <EmptyDiv> <Empty /> </EmptyDiv>\r\n\r\n\r\n    }\r\n    useEffect(() => {\r\n        getAllVendors()\r\n    }, [])\r\n\r\n    console.log('All vendros', vendors);\r\n    return (\r\n        <div>\r\n\r\n            {checkVendor()}\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default AllVendors","E:\\salman\\Sales-App\\src\\components\\FormError\\style\\index.js",[],"E:\\salman\\Sales-App\\src\\components\\AllCustomers\\style\\index.js",[],"E:\\salman\\Sales-App\\src\\components\\AllVendors\\style\\index.js",[],"E:\\salman\\Sales-App\\src\\components\\CustomerOrder\\customerOrder.js",["235","236"],{"ruleId":"237","replacedBy":"238"},{"ruleId":"239","replacedBy":"240"},{"ruleId":"241","severity":1,"message":"242","line":6,"column":3,"nodeType":"243","messageId":"244","endLine":6,"endColumn":11},{"ruleId":"241","severity":1,"message":"245","line":7,"column":3,"nodeType":"243","messageId":"244","endLine":7,"endColumn":13},{"ruleId":"241","severity":1,"message":"246","line":24,"column":12,"nodeType":"243","messageId":"244","endLine":24,"endColumn":24},{"ruleId":"241","severity":1,"message":"247","line":24,"column":26,"nodeType":"243","messageId":"244","endLine":24,"endColumn":41},{"ruleId":"241","severity":1,"message":"248","line":3,"column":10,"nodeType":"243","messageId":"244","endLine":3,"endColumn":26},{"ruleId":"249","severity":1,"message":"250","line":7,"column":13,"nodeType":"251","messageId":"252","endLine":7,"endColumn":15},{"ruleId":"249","severity":1,"message":"250","line":7,"column":31,"nodeType":"251","messageId":"252","endLine":7,"endColumn":33},{"ruleId":"249","severity":1,"message":"250","line":7,"column":45,"nodeType":"251","messageId":"252","endLine":7,"endColumn":47},{"ruleId":"241","severity":1,"message":"253","line":2,"column":24,"nodeType":"243","messageId":"244","endLine":2,"endColumn":34},{"ruleId":"241","severity":1,"message":"254","line":7,"column":13,"nodeType":"243","messageId":"244","endLine":7,"endColumn":20},{"ruleId":"241","severity":1,"message":"255","line":7,"column":22,"nodeType":"243","messageId":"244","endLine":7,"endColumn":28},{"ruleId":"241","severity":1,"message":"256","line":8,"column":12,"nodeType":"243","messageId":"244","endLine":8,"endColumn":21},{"ruleId":"241","severity":1,"message":"257","line":8,"column":23,"nodeType":"243","messageId":"244","endLine":8,"endColumn":35},{"ruleId":"258","severity":1,"message":"259","line":39,"column":8,"nodeType":"260","endLine":39,"endColumn":10,"suggestions":"261"},{"ruleId":"241","severity":1,"message":"262","line":14,"column":5,"nodeType":"243","messageId":"244","endLine":14,"endColumn":9},{"ruleId":"241","severity":1,"message":"263","line":22,"column":12,"nodeType":"243","messageId":"244","endLine":22,"endColumn":25},{"ruleId":"241","severity":1,"message":"264","line":23,"column":26,"nodeType":"243","messageId":"244","endLine":23,"endColumn":41},{"ruleId":"241","severity":1,"message":"265","line":36,"column":10,"nodeType":"243","messageId":"244","endLine":36,"endColumn":18},{"ruleId":"266","severity":1,"message":"267","line":65,"column":17,"nodeType":"268","endLine":65,"endColumn":42},{"ruleId":"266","severity":1,"message":"267","line":71,"column":17,"nodeType":"268","endLine":71,"endColumn":20},{"ruleId":"266","severity":1,"message":"267","line":76,"column":17,"nodeType":"268","endLine":76,"endColumn":39},{"ruleId":"266","severity":1,"message":"267","line":93,"column":29,"nodeType":"268","endLine":93,"endColumn":98},{"ruleId":"241","severity":1,"message":"269","line":1,"column":15,"nodeType":"243","messageId":"244","endLine":1,"endColumn":23},{"ruleId":"241","severity":1,"message":"270","line":1,"column":25,"nodeType":"243","messageId":"244","endLine":1,"endColumn":34},{"ruleId":"241","severity":1,"message":"271","line":7,"column":8,"nodeType":"243","messageId":"244","endLine":7,"endColumn":15},{"ruleId":"241","severity":1,"message":"272","line":11,"column":10,"nodeType":"243","messageId":"244","endLine":11,"endColumn":22},{"ruleId":"241","severity":1,"message":"270","line":1,"column":27,"nodeType":"243","messageId":"244","endLine":1,"endColumn":36},{"ruleId":"241","severity":1,"message":"273","line":3,"column":16,"nodeType":"243","messageId":"244","endLine":3,"endColumn":22},{"ruleId":"241","severity":1,"message":"274","line":5,"column":24,"nodeType":"243","messageId":"244","endLine":5,"endColumn":36},{"ruleId":"241","severity":1,"message":"275","line":77,"column":22,"nodeType":"243","messageId":"244","endLine":77,"endColumn":33},{"ruleId":"241","severity":1,"message":"276","line":19,"column":19,"nodeType":"243","messageId":"244","endLine":19,"endColumn":27},{"ruleId":"241","severity":1,"message":"277","line":6,"column":3,"nodeType":"243","messageId":"244","endLine":6,"endColumn":11},{"ruleId":"241","severity":1,"message":"278","line":7,"column":3,"nodeType":"243","messageId":"244","endLine":7,"endColumn":10},{"ruleId":"241","severity":1,"message":"279","line":8,"column":3,"nodeType":"243","messageId":"244","endLine":8,"endColumn":23},{"ruleId":"241","severity":1,"message":"280","line":9,"column":3,"nodeType":"243","messageId":"244","endLine":9,"endColumn":11},{"ruleId":"241","severity":1,"message":"281","line":10,"column":3,"nodeType":"243","messageId":"244","endLine":10,"endColumn":15},{"ruleId":"241","severity":1,"message":"282","line":14,"column":3,"nodeType":"243","messageId":"244","endLine":14,"endColumn":10},{"ruleId":"241","severity":1,"message":"283","line":22,"column":10,"nodeType":"243","messageId":"244","endLine":22,"endColumn":18},{"ruleId":"241","severity":1,"message":"284","line":35,"column":11,"nodeType":"243","messageId":"244","endLine":35,"endColumn":17},{"ruleId":"241","severity":1,"message":"285","line":61,"column":9,"nodeType":"243","messageId":"244","endLine":61,"endColumn":19},{"ruleId":"258","severity":1,"message":"259","line":38,"column":8,"nodeType":"260","endLine":38,"endColumn":10,"suggestions":"286"},{"ruleId":"287","severity":1,"message":"288","line":149,"column":32,"nodeType":"289","messageId":"290","endLine":149,"endColumn":33},{"ruleId":"291","severity":1,"message":"292","line":1,"column":1,"nodeType":"293","endLine":6,"endColumn":2},{"ruleId":"241","severity":1,"message":"294","line":2,"column":8,"nodeType":"243","messageId":"244","endLine":2,"endColumn":13},{"ruleId":"258","severity":1,"message":"295","line":97,"column":8,"nodeType":"260","endLine":97,"endColumn":10,"suggestions":"296"},{"ruleId":"241","severity":1,"message":"297","line":15,"column":11,"nodeType":"243","messageId":"244","endLine":15,"endColumn":16},{"ruleId":"241","severity":1,"message":"298","line":45,"column":11,"nodeType":"243","messageId":"244","endLine":45,"endColumn":23},{"ruleId":"299","severity":1,"message":"300","line":125,"column":31,"nodeType":"268","endLine":125,"endColumn":51},{"ruleId":"258","severity":1,"message":"301","line":133,"column":8,"nodeType":"260","endLine":133,"endColumn":10,"suggestions":"302"},{"ruleId":"241","severity":1,"message":"303","line":23,"column":11,"nodeType":"243","messageId":"244","endLine":23,"endColumn":18},{"ruleId":"258","severity":1,"message":"259","line":28,"column":8,"nodeType":"260","endLine":28,"endColumn":10,"suggestions":"304"},"no-native-reassign",["305"],"no-negated-in-lhs",["306"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'useHistory' is defined but never used.","'errorMessage' is assigned a value but never used.","'setErrorMessage' is assigned a value but never used.","'UserDataProvider' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'PageHeader' is defined but never used.","'Content' is assigned a value but never used.","'Footer' is assigned a value but never used.","'collapsed' is assigned a value but never used.","'setCollapsed' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'Cname' and 'slug'. Either include them or remove the dependency array.","ArrayExpression",["307"],"'Span' is defined but never used.","'userFirstName' is assigned a value but never used.","'setUserLastName' is assigned a value but never used.","'userInfo' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useState' is defined but never used.","'useEffect' is defined but never used.","'vendors' is assigned a value but never used.","'changeVendor' is defined but never used.","'uuidv4' is defined but never used.","'updateVendor' is defined but never used.","'setVendorId' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'ListItem' is defined but never used.","'ItemDiv' is defined but never used.","'QuantityAndButtonDiv' is defined but never used.","'Quantity' is defined but never used.","'DeleteButton' is defined but never used.","'message' is defined but never used.","'generate' is defined but never used.","'Option' is assigned a value but never used.","'deleteItem' is assigned a value but never used.",["308"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'media' is defined but never used.","React Hook useEffect has a missing dependency: 'getAllCustomers'. Either include it or remove the dependency array.",["309"],"'value' is assigned a value but never used.","'updateVendor' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useEffect has a missing dependency: 'getAllVendors'. Either include it or remove the dependency array.",["310"],"'history' is assigned a value but never used.",["311"],"no-global-assign","no-unsafe-negation",{"desc":"312","fix":"313"},{"desc":"312","fix":"314"},{"desc":"315","fix":"316"},{"desc":"317","fix":"318"},{"desc":"312","fix":"319"},"Update the dependencies array to be: [Cname, slug]",{"range":"320","text":"321"},{"range":"322","text":"321"},"Update the dependencies array to be: [getAllCustomers]",{"range":"323","text":"324"},"Update the dependencies array to be: [getAllVendors]",{"range":"325","text":"326"},{"range":"327","text":"321"},[1113,1115],"[Cname, slug]",[1056,1058],[4258,4260],"[getAllCustomers]",[4863,4865],"[getAllVendors]",[821,823]]