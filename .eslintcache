[{"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/index.js":"1","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/reportWebVitals.js":"2","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/App.js":"3","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/config/Route/index.js":"4","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Signup/signup.js":"5","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Layout/layout.js":"6","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Login/Login.js":"7","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/Utils/utils.js":"8","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Sidebar/sidebar.js":"9","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/PurchaseOrder/purchaseOrder.js":"10","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/UserProfile/userProfile.js":"11","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/RequestForQuotation/requestForQuotation.js":"12","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Signup/style/index.js":"13","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Cutomer/cutomer.js":"14","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Details/customerDetails.js":"15","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/CustomerOrder/customerOrder.js":"16","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Vendor/index.js":"17","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Dashboard/dashboard.js":"18","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Details/vendorDetails.js":"19","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Login/style/index.js":"20","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/context/Random/random.js":"21","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/context/UserContext/UserContext.js":"22","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Header/header.js":"23","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Inventory/inventory.js":"24","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/config/Route/routes.js":"25","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/MediaQuery/media.js":"26","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/UserProfile/style/index.js":"27","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/config/Firebase/firebase.js":"28","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Vendor/style/index.js":"29","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Vendor/schema.js":"30","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/FormError/formError.js":"31","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Cutomer/validationSchema.js":"32","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Details/styles/index.js":"33","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/AllCustomers/allCustomers.js":"34","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/RequestForQuotation/style/index.js":"35","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Textbox/style/index.js":"36","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/AllVendors/allVendors.js":"37","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Header/style/index.js":"38","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/FormError/style/index.js":"39","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/AllVendors/style/index.js":"40","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/AllCustomers/style/index.js":"41","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Cutomer/updateCustomer.js":"42","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/NavigationLinks/navLinks.js":"43","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/PurchaseOrder/purchaseOrderDetails.js":"44","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/Utils/skeleton.js":"45"},{"size":500,"mtime":1613196501516,"results":"46","hashOfConfig":"47"},{"size":362,"mtime":1613196501516,"results":"48","hashOfConfig":"47"},{"size":845,"mtime":1617027514898,"results":"49","hashOfConfig":"47"},{"size":633,"mtime":1616911959100,"results":"50","hashOfConfig":"47"},{"size":3112,"mtime":1613225394688,"results":"51","hashOfConfig":"47"},{"size":2957,"mtime":1619434797577,"results":"52","hashOfConfig":"47"},{"size":2461,"mtime":1616488290961,"results":"53","hashOfConfig":"47"},{"size":12900,"mtime":1619524803069,"results":"54","hashOfConfig":"47"},{"size":1121,"mtime":1616911082909,"results":"55","hashOfConfig":"47"},{"size":13900,"mtime":1619523502044,"results":"56","hashOfConfig":"47"},{"size":435,"mtime":1613280527796,"results":"57","hashOfConfig":"47"},{"size":4125,"mtime":1618833860797,"results":"58","hashOfConfig":"47"},{"size":2543,"mtime":1613224103600,"results":"59","hashOfConfig":"47"},{"size":11182,"mtime":1616239681167,"results":"60","hashOfConfig":"47"},{"size":6808,"mtime":1616851639054,"results":"61","hashOfConfig":"47"},{"size":4634,"mtime":1615657328140,"results":"62","hashOfConfig":"47"},{"size":10564,"mtime":1615335500921,"results":"63","hashOfConfig":"47"},{"size":212,"mtime":1616852644549,"results":"64","hashOfConfig":"47"},{"size":5893,"mtime":1615335396409,"results":"65","hashOfConfig":"47"},{"size":2463,"mtime":1613196501480,"results":"66","hashOfConfig":"47"},{"size":599,"mtime":1617027500298,"results":"67","hashOfConfig":"47"},{"size":396,"mtime":1616492007748,"results":"68","hashOfConfig":"47"},{"size":4523,"mtime":1616851711440,"results":"69","hashOfConfig":"47"},{"size":8987,"mtime":1619428978453,"results":"70","hashOfConfig":"47"},{"size":1333,"mtime":1617640680928,"results":"71","hashOfConfig":"47"},{"size":490,"mtime":1613196501484,"results":"72","hashOfConfig":"47"},{"size":167,"mtime":1613280633076,"results":"73","hashOfConfig":"47"},{"size":443,"mtime":1613207603188,"results":"74","hashOfConfig":"47"},{"size":407,"mtime":1614357627506,"results":"75","hashOfConfig":"47"},{"size":817,"mtime":1613878624005,"results":"76","hashOfConfig":"47"},{"size":214,"mtime":1613580190494,"results":"77","hashOfConfig":"47"},{"size":1232,"mtime":1613878059364,"results":"78","hashOfConfig":"47"},{"size":147,"mtime":1614901810352,"results":"79","hashOfConfig":"47"},{"size":4325,"mtime":1615390061601,"results":"80","hashOfConfig":"47"},{"size":761,"mtime":1615333849513,"results":"81","hashOfConfig":"47"},{"size":212,"mtime":1613282260836,"results":"82","hashOfConfig":"47"},{"size":3791,"mtime":1617537861359,"results":"83","hashOfConfig":"47"},{"size":909,"mtime":1613275852144,"results":"84","hashOfConfig":"47"},{"size":93,"mtime":1613843005107,"results":"85","hashOfConfig":"47"},{"size":691,"mtime":1613843933983,"results":"86","hashOfConfig":"47"},{"size":691,"mtime":1613878829436,"results":"87","hashOfConfig":"47"},{"size":196,"mtime":1618404765149,"results":"88","hashOfConfig":"47"},{"size":989,"mtime":1618405189748,"results":"89","hashOfConfig":"47"},{"size":5481,"mtime":1619523975134,"results":"90","hashOfConfig":"47"},{"size":2564,"mtime":1618671488462,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"1g41l0r",{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"94"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"94"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"94"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"94"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"94"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"94"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"94"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"94"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"94"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"94"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"94"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"94"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"94"},"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/index.js",[],["196","197"],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/reportWebVitals.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/App.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/config/Route/index.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Signup/signup.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Layout/layout.js",["198","199"],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Login/Login.js",["200","201","202"],"import React, { useState, useContext } from 'react'\nimport { loginUser } from '../../Utils/utils';\nimport { useHistory } from \"react-router-dom\";\nimport 'antd/dist/antd.css';\nimport { message } from 'antd';\n\nimport {\n    LoginContainer,\n    LoginDiv,\n    LoginHeading,\n    LoginForm,\n    UserEmailTextbox,\n    PasswordTextbox,\n    PrimaryButton,\n    TextWelcome,\n    Paragraph,\n    BreakLine,\n    Link\n} from './style/index'\n\nexport default function Login() {\n    const history = useHistory();\n    const [email, setUserEmail] = useState();\n    const [password, setPassword] = useState();\n    const [errorMessage, setErrorMessage] = useState(false)\n\n    if (localStorage.getItem('Authorization')) {\n        history.replace('/home')\n        // return\n    }\n    const onLogin = () => {\n        if (!email || !password) {\n            message.error('Enter valid credentials')\n        } else {\n            loginUser(email, password)\n                .then((res) => {\n                    // let token = res.auth.\n                    let token = 'dummy_token'\n                    localStorage.setItem('Authorization', token)\n                    history.replace('/home')\n                });\n        }\n    }\n    return (\n        <div>\n            <LoginContainer>\n                <LoginDiv>\n                    <TextWelcome>\n                        Welcome\n                    </TextWelcome>\n                    <LoginHeading>\n                        Login to Sales-App\n                    </LoginHeading>\n                    <LoginForm>\n                        <UserEmailTextbox\n                            type='text'\n                            placeholder='Email'\n                            onChange={e => setUserEmail(e.target.value)}\n                        />\n                        <PasswordTextbox\n                            type='password'\n                            placeholder='Password'\n                            onChange={e => setPassword(e.target.value)}\n                        />\n                        <PrimaryButton onClick={onLogin}>Continue</PrimaryButton>\n                    </LoginForm>\n                    <BreakLine />\n                    <Paragraph>\n                        Don't have an account?\n                   <Link onClick={() => history.push(\"/signup\")}>\n                            SignUp\n                   </Link>\n                    </Paragraph>\n                </LoginDiv>\n            </LoginContainer>\n        </div>\n    )\n}","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/Utils/utils.js",["203","204","205","206"],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Sidebar/sidebar.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/PurchaseOrder/purchaseOrder.js",["207","208","209","210"],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/UserProfile/userProfile.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/RequestForQuotation/requestForQuotation.js",["211","212","213"],"import React, { useState, useContext } from 'react'\nimport { Label } from '../Textbox/style/index'\nimport { VendorCustomerContext } from '../../context/Random/random'\nimport { CreateRFQ } from '../../Utils/utils'\nimport {\n  ListItem,\n  ItemDiv,\n  QuantityAndButtonDiv,\n  Quantity,\n  DeleteButton\n} from './style/index'\nimport {\n  Divider,\n  message,\n  Row,\n  Col,\n  Input,\n  Button,\n  Radio,\n  Select\n} from 'antd'\n\nconst RequestForQuatation = () => {\n  const [items, setItems] = useState()\n  const [quantity, setQuantity] = useState()\n  const [itemsList, setItemsList] = useState([])\n  const [radioValue, setRadioValue] = useState('A-class');\n  // const { vendors } = useContext(VendorCustomerContext)\n\n  const shortid = require('shortid')\n  const RFQiD = shortid.generate()\n\n  const selectQuality = e => {\n    setRadioValue(e.target.value);\n  };\nconsole.log('items',items);\nconsole.log('quantity',quantity);\n\nconst utc = new Date().toJSON().slice(0, 10).replace(/-/g, '/');\n\n  const CreateList = () => {\n    if (items == null) {\n      message.error('Items can not left Empty')\n    }\n    else if (isNaN(quantity) || quantity.length > 2) {\n      message.error('Quantity amount not support')\n    }\n\n    else {\n      setItemsList([...itemsList, { items, quantity, radioValue }])\n      setItems('')\n      setQuantity('')\n    }\n  }\n  const deleteItem = (id) => {\n    const newList = [...itemsList]\n    newList.splice(id, 1)\n    setItemsList(newList);\n  }\n\n  const generateRFQ = () => {\n      CreateRFQ(itemsList, RFQiD, utc)\n      setItemsList([])\n  }\n  console.log('itemList', itemsList);\n  return (\n    <div>\n      <h1>Request For Quotation</h1>\n      <Divider />\n      <Row gutter={[10, 10]}>\n        <Col xs={24} sm={8}>\n          <h4>\n            RFQ-ID:{RFQiD}\n          </h4>\n        </Col>\n        <Col xs={24} sm={12}>\n          <h4>Date: {utc}</h4>\n        </Col>\n      </Row>\n      <Row gutter={[10, 10]}>\n        \n        <Col xs={24} sm={12}>\n          {/* <h4>RFQ-ID: <Id /></h4> */}\n        </Col>\n      </Row>\n      <Row gutter={[10, 10]}>\n        <Col xs={24} sm={24}>\n          <Label> Compnay Address:\n            <Input\n              type='text'\n              disabled\n            />\n          </Label>\n        </Col>\n      </Row>\n      <Divider>Add Items with quantity</Divider>\n      <Row gutter={[10, 10]}>\n        <Col xs={24} sm={8}>\n          <Input\n            type='text'\n            placeholder='Enter item name'\n            value={items}\n            onChange={e => setItems(e.target.value)}\n            maxLength={20}\n          />\n        </Col>\n        <Col xs={24} sm={4}>\n          <Input\n            type='number'\n            placeholder='Enter number of Quantity'\n            value={quantity}\n            onChange={e => setQuantity(e.target.value)}\n            maxLength={2}\n          />\n        </Col>\n        <Col xs={24} sm={6}>\n          <Radio.Group onChange={selectQuality} value={radioValue}>\n            <Radio value={'A-class'}>A</Radio>\n            <Radio value={'B-class'}>B</Radio>\n            <Radio value={'C-class'}>C</Radio>\n          </Radio.Group>\n        </Col>\n        <Col xs={24} sm={4}>\n\n          <Button onClick={CreateList}>Add</Button>\n        </Col>\n\n      </Row>\n\n      <ul>\n        {\n          itemsList.map((item, key) => {\n            return (\n              <>\n                <ListItem key={key} xs={24} sm={12}>\n                  <ItemDiv>\n                    {item.items}\n                  </ItemDiv>\n                  <QuantityAndButtonDiv>\n                    <Quantity>\n                      {item.quantity}/\n                      {item.radioValue}\n                    </Quantity>\n                    <DeleteButton>\n                      <Button danger onClick={() => deleteItem(key)}>Delete</Button>\n                    </DeleteButton>\n                  </QuantityAndButtonDiv>\n\n                </ListItem>\n              </>\n            )\n          })\n        }\n      </ul>\n      <Row>\n        <Col xs={24} sm={12}>\n          <Button onClick={generateRFQ}>Create RFQ</Button>\n        </Col>\n      </Row>\n    </div>\n  )\n}\nexport default RequestForQuatation","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Signup/style/index.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Cutomer/cutomer.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Details/customerDetails.js",["214"],"import React, { useEffect, useState } from 'react'\nimport { useParams, useHistory } from 'react-router-dom'\nimport { getSpecificData, UpdateCustomer } from '../../Utils/utils'\nimport { CaretLeftOutlined } from \"@ant-design/icons\";\nimport { Goback } from './styles/index'\nimport {\n    Divider,\n    Row,\n    Col,\n    Input,\n    Button,\n    Switch\n} from 'antd';\nconst VendorDetails = () => {\n    const [detailsdData, setDetailsData] = useState(\n        {\n            billToAddress: \"\",\n            businessName: \"\",\n            city: \"\",\n            compId: \"\",\n            email: \"\",\n            state: '',\n            iD: \"\",\n            phone: '',\n            postalCode: '',\n            responsibleName: \"\",\n            responsiblePhone: \"\",\n            secondaryPhone: \"\"\n        }\n    )\n    const [isDisable, setisDisable] = useState(true)\n    const { slug, Cname } = useParams()\n    const history = useHistory();\n    useEffect(() => {\n        getSpecificData(slug, Cname).then(data => {\n            setDetailsData(data[0])\n        })\n        DisableFields(false)\n    }, [])\n\n    const changeHandler = (key, value) => {\n        setDetailsData({ ...detailsdData, [value]: key.target.value })\n    }\n\n    const updateCustomer = () => {\n        UpdateCustomer(detailsdData, detailsdData.compId)\n    }\n\n    function DisableFields(checked) {\n        console.log(`switch to ${checked}`);\n        setisDisable(checked)\n    }\n    // console.log('customerDetails------->', detailsdData, detailsdData.compId)\n    return (\n        <div>\n            <Goback onClick={e => history.goBack()}>\n                <CaretLeftOutlined /> GoBack\n            </Goback>\n            <h2>Customer Details page</h2>\n            <label> Update\n                <Switch\n                    size='small'\n                    onChange={DisableFields}\n                />\n            </label>\n            <div>\n                <Divider orientation=\"left\">\n                    <h2>Name</h2>\n                </Divider>\n                <Row gutter={[10, 10]}>\n                    <Col xs={24} sm={16}>\n                        <h2>Name:</h2>\n                        {\n                            <Input type='text' value={detailsdData.businessName}\n                                onChange={(e) => changeHandler(e, 'businessName')}\n                                disabled={!isDisable}\n                            />\n                        }\n                    </Col>\n\n                    <Col xs={24} sm={8}>\n                        <h2>Company:</h2>\n                        <Input type='text' value={detailsdData.companyName}\n                            onChange={(e) => changeHandler(e, 'companyName')}\n                            disabled={!isDisable}\n                        />\n                    </Col>\n\n                </Row>\n                <Divider orientation=\"left\">\n                    <h2>Address</h2>\n                </Divider>\n                <Row gutter={[10, 10]}>\n                    <Col xs={24} sm={16}>\n                        <h2>State:</h2>\n                        <Input type='text' value={detailsdData.state}\n                            onChange={(e) => changeHandler(e, 'state')}\n                            disabled={!isDisable}\n                        />\n                    </Col>\n                    <Col xs={24} sm={8}>\n                        <h2>City:</h2>\n                        <Input type='text' value={detailsdData.city}\n                            onChange={(e) => changeHandler(e, 'city')}\n                            disabled={!isDisable}\n                        />\n                    </Col>\n                </Row>\n                <Row gutter={[10, 10]}>\n                    <Col xs={24} sm={16}>\n                        <h2>Address:</h2>\n                        <Input type='text' value={detailsdData.billToAddress}\n                            onChange={(e) => changeHandler(e, 'billToAddress')}\n                            disabled={!isDisable}\n                        />\n                    </Col>\n                    <Col xs={24} sm={8}>\n                        <h2>PostalCode:</h2>\n                        <Input type='text' value={detailsdData.postalCode}\n                            onChange={(e) => changeHandler(e, 'postalCode')}\n                            disabled={!isDisable}\n                        />\n                    </Col>\n                </Row>\n                <Divider orientation='left'>\n                    <h2>Contact</h2>\n                </Divider>\n                <Row gutter={[10, 10]}>\n                    <Col xs={24} sm={16}>\n                        <h2>Email:</h2>\n                        <Input type='text' value={detailsdData.email}\n                            onChange={(e) => changeHandler(e, 'email')}\n                            disabled={!isDisable}\n                        />\n                    </Col>\n                    <Col xs={24} sm={8}>\n                        <h2>Phone Number:</h2>\n                        <Input type='text' value={detailsdData.phone}\n                            onChange={(e) => changeHandler(e, 'phone')}\n                            disabled={!isDisable}\n                        />\n                    </Col>\n                    <Col xs={24} sm={8}>\n                        <h2>Secondary Phone Number:</h2>\n                        <Input type='text' value={detailsdData.secondaryPhone}\n                            onChange={(e) => changeHandler(e, 'secondaryPhone')}\n                            disabled={!isDisable}\n                        />\n                    </Col>\n                </Row>\n                <Divider orientation='left'>\n                    <h2>Responsible Details</h2>\n                </Divider>\n                <Row gutter={[10, 10]}>\n                    <Col xs={24} sm={16}>\n                        <h2>Name:</h2>\n                        <Input type='text' value={detailsdData.responsibleName}\n                            onChange={(e) => changeHandler(e, 'responsibleName')}\n                            disabled={!isDisable}\n                        />\n                    </Col>\n                    <Col xs={24} sm={8}>\n                        <h2>Phone Number:</h2>\n                        <Input type='text' value={detailsdData.responsiblePhone}\n                            onChange={(e) => changeHandler(e, 'responsiblePhone')}\n                            disabled={!isDisable}\n                        />\n                    </Col>\n                </Row>\n                <Row gutter={[10, 10]}>\n                    <Col xs={24} sm={16}>\n                        <Button onClick={updateCustomer}\n                            disabled={!isDisable}\n                        >Update</Button>\n                    </Col>\n                </Row>\n            </div>\n        </div>\n    )\n}\nexport default VendorDetails","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/CustomerOrder/customerOrder.js",["215"],"import React, { useEffect, useState } from 'react'\nimport { useParams, useHistory } from 'react-router-dom'\nimport { getSpecificData } from '../../Utils/utils'\nimport { CaretLeftOutlined } from \"@ant-design/icons\";\nimport { Goback } from '../Details/styles/index'\nimport {\n    Divider,\n    Row,\n    Col,\n    Input,\n    Button\n} from 'antd';\nconst CustomerOrder = () => {\n    const [detailsdData, setDetailsData] = useState(\n        {\n            billToAddress: \"\",\n            businessName: \"\",\n            city: \"\",\n            compId: \"\",\n            email: \"\",\n            state: '',\n            iD: \"\",\n            phone: '',\n            postalCode: '',\n            responsibleName: \"\",\n            responsiblePhone: \"\",\n            secondaryPhone: \"\"\n        }\n    )\n    const [orderDetails, setOrderDetails] = useState()\n    const { slug, Cname } = useParams()\n    const history = useHistory();\n    useEffect(() => {\n        getSpecificData(slug, Cname).then(data => {\n            setDetailsData(data[0])\n        })\n    }, [])\n    const utc = new Date().toJSON().slice(0, 10).replace(/-/g, '/');\n\n    const CreateCustomerOrder = () => {\n        console.log(detailsdData && detailsdData, orderDetails)\n        setOrderDetails('')\n    }\n\n    return (\n        <div>\n            <Goback onClick={e => history.goBack()}>\n                <CaretLeftOutlined /> GoBack\n            </Goback>\n            <Row gutter={[10, 10]}>\n                <Col xs={24} sm={12}>\n                    <h2>\n                        Customer Order\n            </h2>\n                </Col>\n                <Col xs={24} sm={12}>\n                    <h3>\n                        Date: {utc}\n                    </h3>\n                </Col>\n            </Row>\n            <Divider />\n            <Row gutter={[10, 10]}>\n                <Col xs={24} sm={8}>\n                    <h4>Name:</h4>\n                    {\n                        <Input type='text' value={detailsdData.businessName}\n                            disabled\n                        />\n                    }\n                </Col>\n                <Col xs={24} sm={8}>\n                    <h4>Company Name:</h4>\n                    {\n                        <Input type='text' value={detailsdData.companyName}\n                            disabled\n                        />\n                    }\n                </Col>\n                <Col xs={24} sm={8}>\n                    <h4>Phone:</h4>\n                    {\n                        <Input type='text' value={detailsdData.phone}\n                            disabled\n                        />\n                    }\n                </Col>\n            </Row>\n            <Row gutter={[10, 10]}>\n                <Col xs={24} sm={24}>\n                    <h4>Address:</h4>\n                    {\n                        <Input type='text' value={detailsdData.billToAddress}\n                            disabled\n                        />\n                    }\n                </Col>\n            </Row>\n            <Row gutter={[10, 10]}>\n                <Col xs={24} sm={8}>\n                    <h4>State</h4>\n                    {\n                        <Input type='text' value={detailsdData.state}\n                            disabled\n                        />\n                    }\n                </Col>\n                <Col xs={24} sm={8}>\n                    <h4>City</h4>\n                    {\n                        <Input type='text' value={detailsdData.city}\n                            disabled\n                        />\n                    }\n                </Col>\n                <Col xs={24} sm={8}>\n                    <h4>Postal Code</h4>\n                    {\n                        <Input type='text' value={detailsdData.postalCode}\n                            disabled\n                        />\n                    }\n                </Col>\n            </Row>\n            <Row gutter={[10, 10]}>\n                <Col xs={24} sm={24}>\n                    <h4>Discription</h4>\n                    {\n                        <Input.TextArea\n                            value={orderDetails}\n                            rows={7}\n                            onChange={e => setOrderDetails(e.target.value)} />\n                    }\n                </Col>\n            </Row>\n            <Row gutter={[10, 10]}>\n                <Col xs={24} sm={16}>\n                    <Button \n                    disabled={!orderDetails}\n                    onClick={CreateCustomerOrder}>\n                        CreateCustomerOrder\n    </Button>\n                </Col>\n            </Row>\n        </div>\n    )\n}\nexport default CustomerOrder","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Vendor/index.js",["216","217","218","219"],"import React, { useState, useEffect } from 'react'\nimport { useFormik } from 'formik'\nimport { v4 as uuidv4 } from 'uuid';\nimport { validationSchema } from './schema'\nimport { createVendor, updateVendor } from '../../Utils/utils'\nimport { Label } from '../Textbox/style/index'\nimport { VendorMainDiv, FormDiv} from './style/index'\nimport ErrorText from '../FormError/formError'\nimport AllVendors from '../AllVendors/allVendors';\nimport {\n    Divider,\n    Tabs,\n    Row,\n    Col,\n    // Form,\n    Input\n} from 'antd';\nconst initialValues = {\n    companyName: '',\n    ownerFirstName: '',\n    ownerLastName: '',\n    address: '',\n    phone: '',\n    email: '',\n    // country: '',\n    city: '',\n    postalCode: ''\n}\n// const validate = values => {\n//     const errors = {}\n//     if (!values.companyName) {\n//         errors.companyName = 'Field Required'\n//     }\n//     else if (values.companyName.length < 4) {\n//         errors.companyName = 'Company name is too short'\n//     }\n//     if (!values.ownerFirstName || values.ownerFirstName < 5) {\n//         errors.ownerFirstName = 'Invalid Name'\n//     }\n//     if (!values.ownerLastName || values.ownerLastName < 5) {\n//         errors.ownerLastName = 'Invalid Name'\n//     }\n//     if (!values.address) {\n//         errors.address = 'Field Required'\n//     }\n//     else if(values.address. length < 15){\n//         errors.address = 'Enter valid address'\n//     }\n//     if (!values.phone) {\n//         errors.phone = 'Field Required'\n//     }\n//     else if(values.phone.length < 11){\n//         errors.phone = 'Invalid phone number'\n//     }\n//     if (!values.email) {\n//         errors.email = 'Field Required'\n//     }\n//     else if (/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(values.email)) {\n//         errors.email = 'Invalid email format'\n//     }\n//     // if(!values.country){\n//     //     errors.country = 'Required'\n//     // }else if(values.country  )\n//     if (!values.city) {\n//         errors.city = 'Field Required'\n//     }\n//     else if (values.city.length < 7 || values.city.length > 15) {\n//         errors.city = 'Invalid city name'\n//     }\n//     if (!values.postalCode || values.postalCode.length < 5) {\n//         errors.postalCode = 'Enter valid postal code'\n//     }\n//     return errors\n// }\nconst Vendor = () => {\n\n    const [vendorId, setVendorId] = useState('')\n\n    // const venId = () => {\n    //     setVendorId(uuidv4())\n    // }\n    const onSubmit = (values,onSubmitProps) => {\n        createVendor(values, vendorId)\n        onSubmitProps.resetForm()\n    }\n    // useEffect(() => {\n    //     venId()\n    //     updateVendor()\n    // }, [])\n\n    const formik = useFormik({\n        initialValues,\n        onSubmit,\n        validationSchema\n    })\n\n\n    const { TabPane } = Tabs;\n    function callback(key) {\n        console.log(key);\n    }\n    // console.log('Formik visited fiedls', formik.touched);\n    return (\n        <div>\n            <h1>Vendor</h1>\n            <Divider />\n            <Tabs defaultActiveKey=\"1\" onChange={callback}>\n                <TabPane tab=\"Create Vendor\" key=\"1\">\n                    <VendorMainDiv>\n                        <form\n                            onSubmit={formik.handleSubmit}\n                        >\n                            <FormDiv>\n                               \n                                <Row gutter={[10, 10]}>\n                                    <Col xs={24} sm={8}>\n                                        <Label>\n                                            Company Name:\n                                <Input\n                                                type='text'\n                                                name='companyName'\n                                                {...formik.getFieldProps('companyName')}\n                                            />\n                                        </Label>\n                                        {formik.touched.companyName && formik.errors.companyName\n                                            ? <ErrorText text={formik.errors.companyName} />\n                                            : null}\n                                    </Col>\n                                    <Col xs={24} sm={8}>\n                                        <Label>\n                                            Owner First Name:\n                                <Input\n                                                type='text'\n                                                name='ownerFirstName'\n                                                {...formik.getFieldProps('ownerFirstName')}\n                                            />\n                                        </Label>\n                                        {formik.touched.ownerFirstName && formik.errors.ownerFirstName\n                                            ? <ErrorText text={formik.errors.ownerFirstName} />\n                                            : null}\n                                    </Col>\n                                    <Col xs={24} sm={8}>\n                                        <Label>Owner Last Name:\n                                    <Input\n                                                type='text'\n                                                name='ownerLastName'\n                                                {...formik.getFieldProps('ownerLastName')}\n\n                                            />\n                                        </Label>\n                                        {formik.touched.ownerLastName && formik.errors.ownerLastName\n                                            ? <ErrorText text={formik.errors.ownerLastName} />\n                                            : null}\n                                    </Col>\n                                    <Col xs={24} sm={24}>\n                                        <Label>Address:\n                                    <Input\n                                                type='text'\n                                                name='address'\n                                                {...formik.getFieldProps('address')}\n                                            />\n                                        </Label>\n                                        {formik.touched.address && formik.errors.address\n                                            ? <ErrorText text={formik.errors.address} />\n                                            : null}\n                                    </Col>\n                                    <Col xs={24} sm={6}>\n                                        <Label>Phone#:\n                                    <Input\n                                                type='number'\n                                                name='phone'\n                                                {...formik.getFieldProps('phone')}\n                                            />\n                                        </Label>\n                                        {formik.touched.phone && formik.errors.phone\n                                            ? <ErrorText text={formik.errors.phone} />\n                                            : null}\n                                    </Col>\n                                    <Col xs={24} sm={6}>\n                                        <Label>Email:\n                                    <Input\n                                                type='email'\n                                                name='email'\n                                                {...formik.getFieldProps('email')}\n                                            />\n                                        </Label>\n                                        {formik.touched.email && formik.errors.email\n                                            ? <ErrorText text={formik.errors.email} />\n                                            : null}\n                                    </Col>\n                                    {/* <Col xs={24} sm={6}>\n                                        <Label>Coutnry:\n                                    <Input\n                                                type='text'\n                                                name='country'\n                                                value={formik.values.country}\n                                                onChange={formik.handleChange}\n                                            />\n                                        </Label>\n                                    </Col> */}\n                                    <Col xs={24} sm={6}>\n                                        <Label>City:\n                                    <Input\n                                                type='text'\n                                                name='city'\n                                                {...formik.getFieldProps('city')}\n                                            />\n                                        </Label>\n                                        {formik.touched.city && formik.errors.city\n                                            ? <ErrorText text={formik.errors.city} />\n                                            : null}\n                                    </Col>\n                                    <Col xs={24} sm={6}>\n                                        <Label>Postl Code:\n                                    <Input\n                                                type='number'\n                                                name='postalCode'\n                                                {...formik.getFieldProps('postalCode')}\n                                            />\n                                        </Label>\n                                        {formik.touched.postalCode && formik.errors.postalCode\n                                            ? <ErrorText text={formik.errors.postalCode} />\n                                            : null}\n                                    </Col>\n\n                                </Row>\n                                <Col xs={24} sm={16}>\n                                    <button type='submit' disabled={!formik.isValid}>Submit</button>\n                                </Col>\n                            </FormDiv>\n                        </form>\n                    </VendorMainDiv>\n                </TabPane>\n                <TabPane tab=\"All Vendors\" key=\"2\">\n                    <AllVendors />\n\n                </TabPane>\n\n            </Tabs>\n        </div >\n    )\n}\nexport default Vendor","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Dashboard/dashboard.js",["220"],"import React,{useContext} from 'react'\n\nimport './Styled/index.css'\nconst Dashboard = () => {\n\n    return (\n        <div>\n\n            <h1>Dashboard</h1>\n          \n        </div>\n    )\n}\nexport default Dashboard","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Details/vendorDetails.js",["221","222"],"import React, { useEffect, useState } from 'react'\nimport { useParams, useHistory } from 'react-router-dom'\nimport { getSpecificData, UpdateVendor } from '../../Utils/utils'\nimport { CaretLeftOutlined } from \"@ant-design/icons\";\nimport { Goback, DetailsDiv } from './styles/index'\nimport {\n    Divider,\n    Row,\n    Col,\n    Input,\n    Button,\n    Switch\n} from 'antd';\nconst VendorDetails = () => {\n    const [isDisable, setisDisable] = useState(true)\n    const [detailsdData, setDetailsData] = useState(\n        {\n            ownerFirstName: \"\",\n            ownerLastName: '',\n            companyName: \"\",\n            city: \"\",\n            address: \"\",\n            email: \"\",\n            state: '',\n            iD: \"\",\n            phone: '',\n            postalCode: ''\n        }\n    )\n    const { slug, Cname } = useParams()\n    const history = useHistory();\n\n    useEffect(() => {\n        getSpecificData(slug, Cname).then(data => {\n            setDetailsData(data[0])\n        })\n        DisableFields(false)\n    }, [])\n\n    function DisableFields(checked) {\n        console.log(`switch to ${checked}`);\n        setisDisable(checked)\n    }\n    const changeHandler = (key, value) => {\n        setDetailsData({ ...detailsdData, [value]: key.target.value })\n    }\n    const updateVendor = () => {\n        UpdateVendor(detailsdData, detailsdData.compId)\n    }\n    return (\n        <DetailsDiv>\n            <Goback onClick={e => history.goBack()}>\n                <CaretLeftOutlined /> GoBack\n            </Goback>\n            <h2>Vendor Details page</h2>\n            <label> Update\n                <Switch\n                    size='small'\n                    onChange={DisableFields}\n                />\n            </label>\n\n            <div>\n                <Divider orientation=\"left\">\n                    <h2>Name</h2>\n                </Divider>\n                <Row gutter={[10, 10]}>\n                    <Col xs={24} sm={8}>\n                        <h2>FirstName:</h2>\n                        {\n                            <Input type='text' value={detailsdData.ownerFirstName}\n                                onChange={(e) => changeHandler(e, 'ownerFirstName')}\n                                disabled={!isDisable}\n                            />\n                        }\n                    </Col>\n                    <Col xs={24} sm={8}>\n                        <h2>LastName:</h2>\n                        {\n                            <Input type='text' value={detailsdData.ownerLastName}\n                                onChange={(e) => changeHandler(e, 'ownerLastName')}\n                                disabled={!isDisable}\n                            />\n                        }\n                    </Col>\n                    <Col xs={24} sm={8}>\n                        <h2>Company:</h2>\n                        <Input type='text' value={detailsdData.companyName}\n                            onChange={(e) => changeHandler(e, 'companyName')}\n                            disabled={!isDisable}\n                        />\n                    </Col>\n\n                </Row>\n                <Divider orientation=\"left\">\n                    <h2>Address</h2>\n                </Divider>\n                <Row gutter={[10, 10]}>\n                    <Col xs={24} sm={16}>\n                        <h2>State:</h2>\n                        <Input type='text' value={detailsdData.state}\n                            onChange={(e) => changeHandler(e, 'state')}\n                            disabled={!isDisable}\n                        />\n                    </Col>\n                    <Col xs={24} sm={8}>\n                        <h2>City:</h2>\n                        <Input type='text' value={detailsdData.city}\n                            onChange={(e) => changeHandler(e, 'city')}\n                            disabled={!isDisable}\n                        />\n                    </Col>\n                </Row>\n                <Row gutter={[10, 10]}>\n                    <Col xs={24} sm={16}>\n                        <h2>Address:</h2>\n                        <Input type='text' value={detailsdData.address}\n                            onChange={(e) => changeHandler(e, 'address')}\n                            disabled={!isDisable}\n                        />\n                    </Col>\n                    <Col xs={24} sm={8}>\n                        <h2>PostalCode:</h2>\n                        <Input type='text' value={detailsdData.postalCode}\n                            onChange={(e) => changeHandler(e, 'postalCode')}\n                            disabled={!isDisable}\n                        />\n                    </Col>\n                </Row>\n                <Divider orientation='left'>\n                    <h2>Contact</h2>\n                </Divider>\n                <Row gutter={[10, 10]}>\n                    <Col xs={24} sm={16}>\n                        <h2>Email:</h2>\n                        <Input type='text' value={detailsdData.email}\n                            onChange={(e) => changeHandler(e, 'email')}\n                            disabled={!isDisable}\n                        />\n                    </Col>\n                    <Col xs={24} sm={8}>\n                        <h2>Phone Number:</h2>\n                        <Input type='text' value={detailsdData.phone}\n                            onChange={(e) => changeHandler(e, 'phone')}\n                            disabled={!isDisable}\n                        />\n                    </Col>\n                </Row>\n                <Row gutter={10, 10}>\n                    <Col xs={24} sm={16}>\n                        <Button \n                        onClick={updateVendor}\n                        disabled={!isDisable}\n                        >Update</Button>\n                    </Col>\n                </Row>\n            </div>\n            {/* )\n            })} */}\n        </DetailsDiv>\n    )\n}\nexport default VendorDetails","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Login/style/index.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/context/Random/random.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/context/UserContext/UserContext.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Header/header.js",["223","224","225","226","227","228","229","230"],"import React, { useState, useContext, useEffect } from 'react'\nimport firebase from '../../config/Firebase/firebase'\nimport { useHistory } from 'react-router-dom'\nimport { message } from 'antd';\nimport { UserContext } from '../../context/UserContext/UserContext'\nimport {\n    Navbar,\n    Logo,\n    User,\n    UserName,\n    UserAvatar,\n    DropdownDiv,\n    UsersFirstName,\n    UsersEmail,\n    Span\n} from './style/index'\nimport { Avatar, Menu, Dropdown, Divider } from 'antd';\nimport { UserOutlined, LogoutOutlined, } from \"@ant-design/icons\";\nimport 'antd/dist/antd.css';\n\n\nconst Header = () => {\n    const [userFirstName, setUserFirstName] = useState('')\n    const [userLastName, setUserLastName] = useState('')\n    const [userEmail, setUserEmail] = useState('')\n    const [userImage, setUserImage] = useState(null)\n\n    const { user, setUser } = useContext(UserContext)\n\n    const history = useHistory();\n\n    const onLogout = () => {\n        firebase.auth().signOut()\n            .then(() => {\n                localStorage.removeItem('Authorization')\n                localStorage.removeItem('userId')\n                history.replace('/')\n            })\n    }\n\n    // const userInfo = getUserData().then((data) => {\n    //     console.log('user data ===========> $', data[0]);\n    //     // setUser(data[0])\n    //     // setUserFirstName(data[0].name)\n    //     // setUserEmail(data[0].email)\n    //     // setUserImage(data[0].url)\n    // });\n\n\n    const getUserData = () => {\n        const userID = localStorage.getItem('userId')\n        // console.log('USER ID============>',userID);\n        firebase\n            .firestore()\n            .collection(\"Users\")\n            .where(\"userId\", \"==\", userID)\n            .get()\n            .then(function (querySnapshot) {\n                const comlist = [];\n                querySnapshot.forEach(function (doc) {\n                    if (doc.exists) {\n                        const comp = doc.data();\n                        comlist.push({ ...comp, compId: doc.id });\n                    } else {\n                        message.info(\"No such document!\");\n                    }\n                });\n                setUser(comlist)\n            })\n            .catch(function (error) {\n                console.log(\"Error getting documents: \", error);\n            });\n\n    }\n    useEffect(() => {\n        getUserData()\n    }, [])\n    \n    const showProfile = () => {\n        history.replace('/home/user-profile')\n    }\n    useEffect(()=>{\n        user&&user.map((item, key)=>{\n            setUserLastName(item.name)\n            setUserFirstName(item.name)\n            setUserImage(item.url)\n            setUserEmail(item.email)\n        })\n    },[user])\n  \n\n    const menu = (\n        <Menu>\n                    <>          \n            <DropdownDiv>\n                <Avatar\n                    src={userImage}\n                    size={64}\n                    icon={!userImage ? <UserOutlined /> : ''}\n                />\n                <UsersFirstName>Hello {userLastName ? userLastName : 'User'}</UsersFirstName>\n                <UsersEmail>{userEmail}</UsersEmail>\n                <Divider />\n            </DropdownDiv>\n            <Menu.Item>\n                <a onClick={showProfile}>\n                    <UserOutlined />\n                    Profile\n            </a>\n            </Menu.Item>\n            <Menu.Item>\n                <a>\n                    3rd menu item\n            </a>\n            </Menu.Item>\n            <Menu.Item>\n                <a onClick={onLogout}>\n\n                    <LogoutOutlined />\n                Logout\n                </a>\n            </Menu.Item>\n            </>\n        </Menu>\n    );\n    return (\n        <div>\n            <Navbar>\n                <Logo src='https://1000logos.net/wp-content/uploads/2017/08/CAT-logo.png' />\n                <User>\n                    <UserName>User First Name</UserName>\n                    <UserAvatar>\n                        <Dropdown overlay={menu}>\n                            <a className=\"ant-dropdown-link\" onClick={(e) => e.preventDefault()}>\n                                <Avatar\n                                    src={userImage}\n                                    size='large'\n                                    icon={!userImage ? <UserOutlined /> : ''}\n                                />\n                            </a>\n                        </Dropdown>\n                    </UserAvatar>\n                </User>\n            </Navbar>\n        </div>\n    )\n}\nexport default Header\n","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Inventory/inventory.js",["231","232","233","234","235"],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/config/Route/routes.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/MediaQuery/media.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/UserProfile/style/index.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/config/Firebase/firebase.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Vendor/style/index.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Vendor/schema.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/FormError/formError.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Cutomer/validationSchema.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Details/styles/index.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/AllCustomers/allCustomers.js",["236"],"import React, { useState, useEffect, useContext } from 'react'\nimport firebase from '../../config/Firebase/firebase';\nimport { useHistory } from 'react-router-dom'\nimport { EmptyDiv } from './style/index'\nimport { Empty, Button } from 'antd';\nimport {VendorCustomerContext} from '../../context/Random/random'\nimport {\n    TableDiv,\n    Table,\n    TableRow,\n    TableData,\n    TableHeading,\n    TableHead,\n    TableBody\n} from './style/index'\n\n\nconst AllCustomers = () => {\n    const [isCustomer, setIsCustomer] = useState(false)\n    const history = useHistory()\n\n    const value = useContext(VendorCustomerContext)\n    const { customers, setCustomers } = useContext(VendorCustomerContext)\n    console.log('all customers', value)\n\n    const getAllCustomers = () => {\n        firebase\n            .firestore()\n            .collection(\"Customer\")\n            .onSnapshot(function (querySnapshot) {\n                const customerList = [];\n                querySnapshot.forEach(function (doc) {\n                    console.log('functions Doc', doc.data)\n                    if (doc.exists) {\n                        const comp = doc.data();\n                        customerList.push({ ...comp, compId: doc.id });\n                        setIsCustomer(true)\n                    } else {\n                        setIsCustomer(false)\n                    }\n                });\n                setCustomers(customerList)\n            });\n    }\n    \n    const checkCustomer = () => {\n        if (isCustomer) {\n            return <TableDiv>\n                <Table>\n                    <TableHead>\n                        <TableHeading>BusinessName</TableHeading>\n                        <TableHeading>BillToAddress</TableHeading>\n                        <TableHeading>Phone</TableHeading>\n                        <TableHeading>Email</TableHeading>\n                        <TableHeading>City</TableHeading>\n                    </TableHead>\n                    <TableBody>\n                        {customers &&\n                            customers.map((customer, index) => {\n                                return (\n                                    <TableRow>\n                                        <TableData>[{customer.businessName}]</TableData>\n                                        <TableData>[{customer.billToAddress}]</TableData>\n                                        <TableData>[{customer.phone}]</TableData>\n                                        <TableData>[{customer.email}]</TableData>\n                                        <TableData>[{customer.city}]</TableData>\n                                        <TableData>\n                                            {/* <button onClick={() => history.push(`/home/update-customer/:${customer.compId}`)}>\n                                                Update customer\n                                            </button> */}\n                                        </TableData>\n                                        <TableData>\n                                            <Button onClick={() =>\n                                                history.push(`/home/customer-details/${customer.compId}/${'Customer'}`)\n                                            } >\n                                                customer Details\n                                            </Button>\n                                        </TableData>\n                                        <TableData>\n                                            <Button onClick={() =>\n                                                history.push(`/home/customer-order/${customer.compId}/${'Customer'}`)\n                                            } >\n                                                customer order\n                                            </Button>\n                                        </TableData>\n                                    </TableRow>\n                                );\n                            })}\n                    </TableBody>\n                </Table>\n            </TableDiv>\n        }\n        return <EmptyDiv> <Empty /> </EmptyDiv>\n    }\n    useEffect(() => {\n        getAllCustomers()\n    }, [])\n\n    // console.log('All Customers', allCustomers);\n    return (\n        <div>\n            {checkCustomer()}\n        </div>\n    )\n}\nexport default AllCustomers","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/RequestForQuotation/style/index.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Textbox/style/index.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/AllVendors/allVendors.js",["237","238","239","240","241","242","243","244","245","246","247"],"import React, { useState, useEffect, useContext } from 'react'\nimport firebase from '../../config/Firebase/firebase';\nimport {getAllVendors} from '../../Utils/utils'\nimport { useHistory } from 'react-router-dom'\nimport { EmptyDiv } from './style/index'\nimport { Empty, Table, Space, Button } from 'antd';\nimport loader from '../../assets/loader.gif'\n\nimport { VendorCustomerContext } from '../../context/Random/random'\nimport { TableDiv, LoaderDiv } from './style/index'\n\nconst AllVendors = () => {\n    const [isVendor, setIsVendor] = useState(false)\n    const [isLoading, setIsLoading] = useState(false)\n    const history = useHistory()\n    const [allVendors, setAllVendors] = useState()\n\n    const value = useContext(VendorCustomerContext)\n    const { vendors, setVendors } = useContext(VendorCustomerContext)\n    console.log('vendors',vendors);\n\n    // const getAllVendors = () => {\n    //     setIsLoading(true)\n    //     firebase\n    //         .firestore()\n    //         .collection(\"Vendor\")\n    //         .onSnapshot(function (querySnapshot) {\n    //             const vendorList = [];\n    //             querySnapshot.forEach(function (doc) {\n    //                 console.log('functions Doc', doc.data)\n    //                 if (doc.exists) {\n    //                     const comp = doc.data();\n    //                     vendorList.push({ ...comp, compId: doc.id });\n    //                     setIsVendor(true)\n    //                 } else {\n    //                     // alert(\"No such document!\");\n    //                     // <EmptyDiv>\n    //                     //     <Empty/>\n    //                     // </EmptyDiv>\n    //                     setIsVendor(false)\n                        \n    //                 }\n    //             });\n    //             setAllVendors(vendorList)\n    //             setVendors(vendorList)\n    //             setIsLoading(false)\n    //             // setIsVendor(true)\n    //         });\n    // }\n \nconsole.log('All Vendors from context-------->', vendors);\n    const updateVendor = (e) => {\n        console.log('update E', e)\n    }\n\n    const columns = [\n        {\n            title: 'Company Name',\n            dataIndex: 'companyName',\n            key: 'name',\n        },\n        {\n            title: 'FirstName',\n            dataIndex: 'ownerFirstName',\n            key: 'firstname',\n        },\n        {\n            title: 'LastName',\n            dataIndex: 'ownerLastName',\n            key: 'lastname',\n        },\n        {\n            title: 'Phone',\n            dataIndex: 'phone',\n            key: 'phone',\n        },\n        {\n            title: 'Address',\n            dataIndex: 'address',\n            key: 'address',\n        },\n        {\n            title: 'Action',\n            key: 'action',\n            render: (allVendors) => (\n                <Space size=\"middle\">\n                    <Button\n                        onClick={() =>\n                            history.push(`/home/vendor-details/${allVendors.compId}/${'Vendor'}`)}\n                    >Details</Button>\n                </Space>\n            ),\n        },\n    ];\n    const checkVendor = () => {\n        if (isVendor) {\n            return <TableDiv>\n                <Table dataSource={allVendors} columns={columns} />;\n            </TableDiv>\n        }\n        // else if (!isVendor || isLoading) {\n        //     return <LoaderDiv><img src={loader} /></LoaderDiv>\n        // }\n        // return <EmptyDiv> <Empty /> </EmptyDiv>\n\n\n    }\n    useEffect(() => {\n        getAllVendors().then(data => {\n            console.log('then all vendors', data);\n            setAllVendors(data)\n        })\n    }, [])\n\n    console.log('All vendros', vendors);\n    return (\n        <div>\n\n            {checkVendor()}\n\n\n        </div>\n    )\n}\nexport default AllVendors","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Header/style/index.js",["248"],"import styled from 'styled-components'\nimport media from '../../MediaQuery/media'\n\nexport const Navbar = styled.div`\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\nheight: 50px;\nborder-bottom: 1px solid gray;\nbox-shadow: 5px 2px 15px #888888;\n`\nexport const Logo = styled.img`\nwidth:50px;\nheight: 50px;\nmargin-left: 10px;\n// justify-content: flex-start;\n`\nexport const User = styled.div`\ndisplay: flex;\nalign-items: center;\n`\nexport const UserName = styled.div`\nmargin-right: 10px;\n`\nexport const UserAvatar = styled.div`\nmargin-right: 10px;\n`\nexport const DropdownDiv = styled.div`\ntext-align: center;\njustify-content: center;\nalign-items: center;\nmargin-top: 10px;\nwidth:250px;\noverflow: hidden;\npadding:12px;\n`\nexport const UsersFirstName = styled.h4`\nmargin-top:15px;\nword-spacing:1px;\n`\nexport const UsersEmail = styled.p`\n\n`\nexport const Span = styled.span`\nmargin-right: 10px;\n`\n\n\n","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/FormError/style/index.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/AllVendors/style/index.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/AllCustomers/style/index.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/Cutomer/updateCustomer.js",["249","250"],"import React,{useState, useEffect} from 'react'\n\nconst UpdateCustomer = () => {\n    return(\n        <div>\n            <h2> update Customer</h2>\n        </div>\n    )\n}\nexport default UpdateCustomer","/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/NavigationLinks/navLinks.js",[],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/components/PurchaseOrder/purchaseOrderDetails.js",["251"],"/home/salman/Salman/My Data/university/FYP 2/sales-app/src/Utils/skeleton.js",["252"],"import React from \"react\";\nimport {\nSkeleton, Row, Col, Space\n} from 'antd'\n\n const TableSkeleton = () => {\n    return(\n        <div>\n              <Row gutter={[10, 10]}>\n                <Col>\n                    <Skeleton.Input style={{ width: 200 }} active={true} size='default' line />\n                </Col>\n                <Col>\n                    <Skeleton.Input style={{ width: 200 }} active={true} size='default' />\n                </Col>\n                <Col>\n                    <Skeleton.Input style={{ width: 200 }} active={true} size='default' line />\n                </Col>\n                <Col>\n                    <Skeleton.Input style={{ width: 200 }} active={true} size='default' />\n                </Col>\n                <Col>\n                    <Skeleton.Input style={{ width: 200 }} active={true} size='default' />\n                </Col>\n            </Row>\n\n            <Row gutter={[10, 10]}>\n                <Col>\n                    <Skeleton.Input style={{ width: 200 }} active={true} size='default' line />\n                </Col>\n                <Col>\n                    <Skeleton.Input style={{ width: 200 }} active={true} size='default' />\n                </Col>\n                <Col>\n                    <Skeleton.Input style={{ width: 200 }} active={true} size='default' line />\n                </Col>\n                <Col>\n                    <Skeleton.Input style={{ width: 200 }} active={true} size='default' />\n                </Col>\n                <Col>\n                    <Skeleton.Input style={{ width: 200 }} active={true} size='default' />\n                </Col>\n            </Row>\n           \n            <Row gutter={[10, 10]}>\n                <Col>\n                    <Skeleton.Input style={{ width: 200 }} active={true} size='default' line />\n                </Col>\n                <Col>\n                    <Skeleton.Input style={{ width: 200 }} active={true} size='default' />\n                </Col>\n                <Col>\n                    <Skeleton.Input style={{ width: 200 }} active={true} size='default' line />\n                </Col>\n                <Col>\n                    <Skeleton.Input style={{ width: 200 }} active={true} size='default' />\n                </Col>\n                <Col>\n                    <Skeleton.Input style={{ width: 200 }} active={true} size='default' />\n                </Col>\n            </Row>\n\n        </div>\n    )\n}\nconst ParaSkeleton = () => {\n    return(\n        <div>\n            <Skeleton active />\n        </div>\n    )\n}\nexport {\n    TableSkeleton,\n    ParaSkeleton\n}",{"ruleId":"253","replacedBy":"254"},{"ruleId":"255","replacedBy":"256"},{"ruleId":"257","severity":1,"message":"258","line":1,"column":17,"nodeType":"259","messageId":"260","endLine":1,"endColumn":25},{"ruleId":"261","severity":1,"message":"262","line":35,"column":8,"nodeType":"263","endLine":35,"endColumn":10,"suggestions":"264"},{"ruleId":"257","severity":1,"message":"265","line":1,"column":27,"nodeType":"259","messageId":"260","endLine":1,"endColumn":37},{"ruleId":"257","severity":1,"message":"266","line":25,"column":12,"nodeType":"259","messageId":"260","endLine":25,"endColumn":24},{"ruleId":"257","severity":1,"message":"267","line":25,"column":26,"nodeType":"259","messageId":"260","endLine":25,"endColumn":41},{"ruleId":"257","severity":1,"message":"268","line":3,"column":18,"nodeType":"259","messageId":"260","endLine":3,"endColumn":30},{"ruleId":"269","severity":1,"message":"270","line":7,"column":13,"nodeType":"271","messageId":"272","endLine":7,"endColumn":15},{"ruleId":"269","severity":1,"message":"270","line":7,"column":31,"nodeType":"271","messageId":"272","endLine":7,"endColumn":33},{"ruleId":"269","severity":1,"message":"270","line":7,"column":45,"nodeType":"271","messageId":"272","endLine":7,"endColumn":47},{"ruleId":"257","severity":1,"message":"273","line":41,"column":12,"nodeType":"259","messageId":"260","endLine":41,"endColumn":21},{"ruleId":"257","severity":1,"message":"274","line":41,"column":23,"nodeType":"259","messageId":"260","endLine":41,"endColumn":35},{"ruleId":"257","severity":1,"message":"275","line":47,"column":13,"nodeType":"259","messageId":"260","endLine":47,"endColumn":24},{"ruleId":"257","severity":1,"message":"276","line":128,"column":11,"nodeType":"259","messageId":"260","endLine":128,"endColumn":26},{"ruleId":"257","severity":1,"message":"265","line":1,"column":27,"nodeType":"259","messageId":"260","endLine":1,"endColumn":37},{"ruleId":"257","severity":1,"message":"277","line":3,"column":10,"nodeType":"259","messageId":"260","endLine":3,"endColumn":31},{"ruleId":"257","severity":1,"message":"278","line":20,"column":3,"nodeType":"259","messageId":"260","endLine":20,"endColumn":9},{"ruleId":"261","severity":1,"message":"279","line":39,"column":8,"nodeType":"263","endLine":39,"endColumn":10,"suggestions":"280"},{"ruleId":"261","severity":1,"message":"279","line":37,"column":8,"nodeType":"263","endLine":37,"endColumn":10,"suggestions":"281"},{"ruleId":"257","severity":1,"message":"282","line":1,"column":27,"nodeType":"259","messageId":"260","endLine":1,"endColumn":36},{"ruleId":"257","severity":1,"message":"283","line":3,"column":16,"nodeType":"259","messageId":"260","endLine":3,"endColumn":22},{"ruleId":"257","severity":1,"message":"284","line":5,"column":24,"nodeType":"259","messageId":"260","endLine":5,"endColumn":36},{"ruleId":"257","severity":1,"message":"285","line":77,"column":22,"nodeType":"259","messageId":"260","endLine":77,"endColumn":33},{"ruleId":"257","severity":1,"message":"265","line":1,"column":15,"nodeType":"259","messageId":"260","endLine":1,"endColumn":25},{"ruleId":"261","severity":1,"message":"279","line":38,"column":8,"nodeType":"263","endLine":38,"endColumn":10,"suggestions":"286"},{"ruleId":"287","severity":1,"message":"288","line":149,"column":32,"nodeType":"289","messageId":"290","endLine":149,"endColumn":33},{"ruleId":"257","severity":1,"message":"291","line":15,"column":5,"nodeType":"259","messageId":"260","endLine":15,"endColumn":9},{"ruleId":"257","severity":1,"message":"292","line":23,"column":12,"nodeType":"259","messageId":"260","endLine":23,"endColumn":25},{"ruleId":"261","severity":1,"message":"293","line":77,"column":8,"nodeType":"263","endLine":77,"endColumn":10,"suggestions":"294"},{"ruleId":"295","severity":1,"message":"296","line":83,"column":35,"nodeType":"297","messageId":"298","endLine":83,"endColumn":37},{"ruleId":"299","severity":1,"message":"300","line":106,"column":17,"nodeType":"301","endLine":106,"endColumn":42},{"ruleId":"299","severity":1,"message":"300","line":112,"column":17,"nodeType":"301","endLine":112,"endColumn":20},{"ruleId":"299","severity":1,"message":"300","line":117,"column":17,"nodeType":"301","endLine":117,"endColumn":39},{"ruleId":"299","severity":1,"message":"300","line":134,"column":29,"nodeType":"301","endLine":134,"endColumn":98},{"ruleId":"257","severity":1,"message":"302","line":14,"column":84,"nodeType":"259","messageId":"260","endLine":14,"endColumn":88},{"ruleId":"257","severity":1,"message":"303","line":27,"column":12,"nodeType":"259","messageId":"260","endLine":27,"endColumn":24},{"ruleId":"295","severity":1,"message":"296","line":83,"column":52,"nodeType":"297","messageId":"298","endLine":83,"endColumn":54},{"ruleId":"261","severity":1,"message":"304","line":86,"column":8,"nodeType":"263","endLine":86,"endColumn":10,"suggestions":"305"},{"ruleId":"257","severity":1,"message":"306","line":89,"column":11,"nodeType":"259","messageId":"260","endLine":89,"endColumn":22},{"ruleId":"261","severity":1,"message":"307","line":97,"column":8,"nodeType":"263","endLine":97,"endColumn":10,"suggestions":"308"},{"ruleId":"257","severity":1,"message":"309","line":2,"column":8,"nodeType":"259","messageId":"260","endLine":2,"endColumn":16},{"ruleId":"257","severity":1,"message":"310","line":5,"column":10,"nodeType":"259","messageId":"260","endLine":5,"endColumn":18},{"ruleId":"257","severity":1,"message":"311","line":6,"column":10,"nodeType":"259","messageId":"260","endLine":6,"endColumn":15},{"ruleId":"257","severity":1,"message":"312","line":7,"column":8,"nodeType":"259","messageId":"260","endLine":7,"endColumn":14},{"ruleId":"257","severity":1,"message":"313","line":10,"column":20,"nodeType":"259","messageId":"260","endLine":10,"endColumn":29},{"ruleId":"257","severity":1,"message":"314","line":13,"column":22,"nodeType":"259","messageId":"260","endLine":13,"endColumn":33},{"ruleId":"257","severity":1,"message":"315","line":14,"column":12,"nodeType":"259","messageId":"260","endLine":14,"endColumn":21},{"ruleId":"257","severity":1,"message":"316","line":14,"column":23,"nodeType":"259","messageId":"260","endLine":14,"endColumn":35},{"ruleId":"257","severity":1,"message":"317","line":18,"column":11,"nodeType":"259","messageId":"260","endLine":18,"endColumn":16},{"ruleId":"257","severity":1,"message":"318","line":19,"column":22,"nodeType":"259","messageId":"260","endLine":19,"endColumn":32},{"ruleId":"257","severity":1,"message":"319","line":52,"column":11,"nodeType":"259","messageId":"260","endLine":52,"endColumn":23},{"ruleId":"257","severity":1,"message":"320","line":2,"column":8,"nodeType":"259","messageId":"260","endLine":2,"endColumn":13},{"ruleId":"257","severity":1,"message":"258","line":1,"column":15,"nodeType":"259","messageId":"260","endLine":1,"endColumn":23},{"ruleId":"257","severity":1,"message":"282","line":1,"column":25,"nodeType":"259","messageId":"260","endLine":1,"endColumn":34},{"ruleId":"261","severity":1,"message":"321","line":27,"column":8,"nodeType":"263","endLine":27,"endColumn":10,"suggestions":"322"},{"ruleId":"257","severity":1,"message":"323","line":3,"column":21,"nodeType":"259","messageId":"260","endLine":3,"endColumn":26},"no-native-reassign",["324"],"no-negated-in-lhs",["325"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setAllInventoryItems' and 'setVendors'. Either include them or remove the dependency array.","ArrayExpression",["326"],"'useContext' is defined but never used.","'errorMessage' is assigned a value but never used.","'setErrorMessage' is assigned a value but never used.","'notification' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'startDate' is assigned a value but never used.","'setStartDate' is assigned a value but never used.","'RangePicker' is assigned a value but never used.","'disableWeekends' is assigned a value but never used.","'VendorCustomerContext' is defined but never used.","'Select' is defined but never used.","React Hook useEffect has missing dependencies: 'Cname' and 'slug'. Either include them or remove the dependency array.",["327"],["328"],"'useEffect' is defined but never used.","'uuidv4' is defined but never used.","'updateVendor' is defined but never used.","'setVendorId' is assigned a value but never used.",["329"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'Span' is defined but never used.","'userFirstName' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getUserData'. Either include it or remove the dependency array.",["330"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Tabs' is defined but never used.","'allItemsName' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'itemDetails'. Either include it or remove the dependency array.",["331"],"'getItemData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getAllCustomers'. Either include it or remove the dependency array.",["332"],"'firebase' is defined but never used.","'EmptyDiv' is defined but never used.","'Empty' is defined but never used.","'loader' is defined but never used.","'LoaderDiv' is defined but never used.","'setIsVendor' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'setIsLoading' is assigned a value but never used.","'value' is assigned a value but never used.","'setVendors' is assigned a value but never used.","'updateVendor' is assigned a value but never used.","'media' is defined but never used.","React Hook useEffect has a missing dependency: 'slug'. Either include it or remove the dependency array.",["333"],"'Space' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"334","fix":"335"},{"desc":"336","fix":"337"},{"desc":"336","fix":"338"},{"desc":"336","fix":"339"},{"desc":"340","fix":"341"},{"desc":"342","fix":"343"},{"desc":"344","fix":"345"},{"desc":"346","fix":"347"},"Update the dependencies array to be: [setAllInventoryItems, setVendors]",{"range":"348","text":"349"},"Update the dependencies array to be: [Cname, slug]",{"range":"350","text":"351"},{"range":"352","text":"351"},{"range":"353","text":"351"},"Update the dependencies array to be: [getUserData]",{"range":"354","text":"355"},"Update the dependencies array to be: [itemDetails]",{"range":"356","text":"357"},"Update the dependencies array to be: [getAllCustomers]",{"range":"358","text":"359"},"Update the dependencies array to be: [slug]",{"range":"360","text":"361"},[1077,1079],"[setAllInventoryItems, setVendors]",[1075,1077],"[Cname, slug]",[1029,1031],[1019,1021],[2372,2374],"[getUserData]",[2963,2965],"[itemDetails]",[4162,4164],"[getAllCustomers]",[1043,1045],"[slug]"]